"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataQualityJobDefinition = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::SageMaker::DataQualityJobDefinition
 */
class DataQualityJobDefinition extends pulumi.CustomResource {
    /**
     * Get an existing DataQualityJobDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new DataQualityJobDefinition(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataQualityJobDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataQualityJobDefinition.__pulumiType;
    }
    /**
     * Create a DataQualityJobDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.dataQualityAppSpecification === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityAppSpecification'");
            }
            if ((!args || args.dataQualityJobInput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobInput'");
            }
            if ((!args || args.dataQualityJobOutputConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataQualityJobOutputConfig'");
            }
            if ((!args || args.jobResources === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobResources'");
            }
            if ((!args || args.roleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleArn'");
            }
            resourceInputs["dataQualityAppSpecification"] = args ? args.dataQualityAppSpecification : undefined;
            resourceInputs["dataQualityBaselineConfig"] = args ? args.dataQualityBaselineConfig : undefined;
            resourceInputs["dataQualityJobInput"] = args ? args.dataQualityJobInput : undefined;
            resourceInputs["dataQualityJobOutputConfig"] = args ? args.dataQualityJobOutputConfig : undefined;
            resourceInputs["endpointName"] = args ? args.endpointName : undefined;
            resourceInputs["jobDefinitionName"] = args ? args.jobDefinitionName : undefined;
            resourceInputs["jobResources"] = args ? args.jobResources : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["stoppingCondition"] = args ? args.stoppingCondition : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["jobDefinitionArn"] = undefined /*out*/;
        }
        else {
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["dataQualityAppSpecification"] = undefined /*out*/;
            resourceInputs["dataQualityBaselineConfig"] = undefined /*out*/;
            resourceInputs["dataQualityJobInput"] = undefined /*out*/;
            resourceInputs["dataQualityJobOutputConfig"] = undefined /*out*/;
            resourceInputs["endpointName"] = undefined /*out*/;
            resourceInputs["jobDefinitionArn"] = undefined /*out*/;
            resourceInputs["jobDefinitionName"] = undefined /*out*/;
            resourceInputs["jobResources"] = undefined /*out*/;
            resourceInputs["networkConfig"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["stoppingCondition"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["dataQualityAppSpecification", "dataQualityBaselineConfig", "dataQualityJobInput", "dataQualityJobOutputConfig", "endpointName", "jobDefinitionName", "jobResources", "networkConfig", "roleArn", "stoppingCondition", "tags[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataQualityJobDefinition.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataQualityJobDefinition = DataQualityJobDefinition;
/** @internal */
DataQualityJobDefinition.__pulumiType = 'aws-native:sagemaker:DataQualityJobDefinition';
//# sourceMappingURL=dataQualityJobDefinition.js.map