import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::SageMaker::PartnerApp
 */
export declare class PartnerApp extends pulumi.CustomResource {
    /**
     * Get an existing PartnerApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PartnerApp;
    /**
     * Returns true if the given object is an instance of PartnerApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PartnerApp;
    /**
     * A collection of settings that specify the maintenance schedule for the PartnerApp.
     */
    readonly applicationConfig: pulumi.Output<outputs.sagemaker.PartnerAppConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the created PartnerApp.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Auth type of PartnerApp.
     */
    readonly authType: pulumi.Output<enums.sagemaker.PartnerAppAuthType>;
    /**
     * The AppServerUrl based on app and account-info.
     */
    readonly baseUrl: pulumi.Output<string>;
    /**
     * The client token for the PartnerApp.
     */
    readonly clientToken: pulumi.Output<string | undefined>;
    /**
     * Enables IAM Session based Identity for PartnerApp.
     */
    readonly enableIamSessionBasedIdentity: pulumi.Output<boolean | undefined>;
    /**
     * The execution role for the user.
     */
    readonly executionRoleArn: pulumi.Output<string>;
    /**
     * A collection of settings that specify the maintenance schedule for the PartnerApp.
     */
    readonly maintenanceConfig: pulumi.Output<outputs.sagemaker.PartnerAppMaintenanceConfig | undefined>;
    /**
     * A name for the PartnerApp.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of tags to apply to the PartnerApp.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The tier of the PartnerApp.
     */
    readonly tier: pulumi.Output<string>;
    /**
     * The type of PartnerApp.
     */
    readonly type: pulumi.Output<enums.sagemaker.PartnerAppType>;
    /**
     * Create a PartnerApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerAppArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PartnerApp resource.
 */
export interface PartnerAppArgs {
    /**
     * A collection of settings that specify the maintenance schedule for the PartnerApp.
     */
    applicationConfig?: pulumi.Input<inputs.sagemaker.PartnerAppConfigArgs>;
    /**
     * The Auth type of PartnerApp.
     */
    authType: pulumi.Input<enums.sagemaker.PartnerAppAuthType>;
    /**
     * The client token for the PartnerApp.
     */
    clientToken?: pulumi.Input<string>;
    /**
     * Enables IAM Session based Identity for PartnerApp.
     */
    enableIamSessionBasedIdentity?: pulumi.Input<boolean>;
    /**
     * The execution role for the user.
     */
    executionRoleArn: pulumi.Input<string>;
    /**
     * A collection of settings that specify the maintenance schedule for the PartnerApp.
     */
    maintenanceConfig?: pulumi.Input<inputs.sagemaker.PartnerAppMaintenanceConfigArgs>;
    /**
     * A name for the PartnerApp.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of tags to apply to the PartnerApp.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The tier of the PartnerApp.
     */
    tier: pulumi.Input<string>;
    /**
     * The type of PartnerApp.
     */
    type: pulumi.Input<enums.sagemaker.PartnerAppType>;
}
