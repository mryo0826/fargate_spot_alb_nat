import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::SageMaker::InferenceComponent
 */
export declare class InferenceComponent extends pulumi.CustomResource {
    /**
     * Get an existing InferenceComponent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InferenceComponent;
    /**
     * Returns true if the given object is an instance of InferenceComponent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InferenceComponent;
    /**
     * The time when the inference component was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
     */
    readonly endpointArn: pulumi.Output<string | undefined>;
    /**
     * The name of the endpoint that hosts the inference component.
     */
    readonly endpointName: pulumi.Output<string>;
    readonly failureReason: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the inference component.
     */
    readonly inferenceComponentArn: pulumi.Output<string>;
    /**
     * The name of the inference component.
     */
    readonly inferenceComponentName: pulumi.Output<string | undefined>;
    /**
     * The status of the inference component.
     */
    readonly inferenceComponentStatus: pulumi.Output<enums.sagemaker.InferenceComponentStatus>;
    /**
     * The time when the inference component was last updated.
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    readonly runtimeConfig: pulumi.Output<outputs.sagemaker.InferenceComponentRuntimeConfig | undefined>;
    readonly specification: pulumi.Output<outputs.sagemaker.InferenceComponentSpecification>;
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The name of the production variant that hosts the inference component.
     */
    readonly variantName: pulumi.Output<string | undefined>;
    /**
     * Create a InferenceComponent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InferenceComponentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InferenceComponent resource.
 */
export interface InferenceComponentArgs {
    /**
     * The Amazon Resource Name (ARN) of the endpoint that hosts the inference component.
     */
    endpointArn?: pulumi.Input<string>;
    /**
     * The name of the endpoint that hosts the inference component.
     */
    endpointName: pulumi.Input<string>;
    /**
     * The name of the inference component.
     */
    inferenceComponentName?: pulumi.Input<string>;
    runtimeConfig?: pulumi.Input<inputs.sagemaker.InferenceComponentRuntimeConfigArgs>;
    specification: pulumi.Input<inputs.sagemaker.InferenceComponentSpecificationArgs>;
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The name of the production variant that hosts the inference component.
     */
    variantName?: pulumi.Input<string>;
}
