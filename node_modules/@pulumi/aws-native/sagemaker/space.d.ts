import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::SageMaker::Space
 */
export declare class Space extends pulumi.CustomResource {
    /**
     * Get an existing Space resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Space;
    /**
     * Returns true if the given object is an instance of Space.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Space;
    /**
     * The ID of the associated Domain.
     */
    readonly domainId: pulumi.Output<string>;
    /**
     * The collection of ownership settings for a space.
     */
    readonly ownershipSettings: pulumi.Output<outputs.sagemaker.SpaceOwnershipSettings | undefined>;
    /**
     * The space Amazon Resource Name (ARN).
     */
    readonly spaceArn: pulumi.Output<string>;
    /**
     * The name of the space that appears in the Studio UI.
     */
    readonly spaceDisplayName: pulumi.Output<string | undefined>;
    /**
     * A name for the Space.
     */
    readonly spaceName: pulumi.Output<string>;
    /**
     * A collection of settings.
     */
    readonly spaceSettings: pulumi.Output<outputs.sagemaker.SpaceSettings | undefined>;
    /**
     * A collection of space sharing settings.
     */
    readonly spaceSharingSettings: pulumi.Output<outputs.sagemaker.SpaceSharingSettings | undefined>;
    /**
     * A list of tags to apply to the space.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Returns the URL of the space. If the space is created with AWS IAM Identity Center (Successor to AWS Single Sign-On) authentication, users can navigate to the URL after appending the respective redirect parameter for the application type to be federated through AWS IAM Identity Center.
     *
     * The following application types are supported:
     *
     * - Studio Classic: `&redirect=JupyterServer`
     * - JupyterLab: `&redirect=JupyterLab`
     * - Code Editor, based on Code-OSS, Visual Studio Code - Open Source: `&redirect=CodeEditor`
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a Space resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Space resource.
 */
export interface SpaceArgs {
    /**
     * The ID of the associated Domain.
     */
    domainId: pulumi.Input<string>;
    /**
     * The collection of ownership settings for a space.
     */
    ownershipSettings?: pulumi.Input<inputs.sagemaker.SpaceOwnershipSettingsArgs>;
    /**
     * The name of the space that appears in the Studio UI.
     */
    spaceDisplayName?: pulumi.Input<string>;
    /**
     * A name for the Space.
     */
    spaceName?: pulumi.Input<string>;
    /**
     * A collection of settings.
     */
    spaceSettings?: pulumi.Input<inputs.sagemaker.SpaceSettingsArgs>;
    /**
     * A collection of space sharing settings.
     */
    spaceSharingSettings?: pulumi.Input<inputs.sagemaker.SpaceSharingSettingsArgs>;
    /**
     * A list of tags to apply to the space.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
