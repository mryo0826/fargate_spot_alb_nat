import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::SageMaker::StudioLifecycleConfig
 */
export declare class StudioLifecycleConfig extends pulumi.CustomResource {
    /**
     * Get an existing StudioLifecycleConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StudioLifecycleConfig;
    /**
     * Returns true if the given object is an instance of StudioLifecycleConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StudioLifecycleConfig;
    /**
     * The App type that the Lifecycle Configuration is attached to.
     */
    readonly studioLifecycleConfigAppType: pulumi.Output<enums.sagemaker.StudioLifecycleConfigAppType>;
    /**
     * The Amazon Resource Name (ARN) of the Lifecycle Configuration.
     */
    readonly studioLifecycleConfigArn: pulumi.Output<string>;
    /**
     * The content of your Amazon SageMaker Studio Lifecycle Configuration script. This content must be base64 encoded.
     */
    readonly studioLifecycleConfigContent: pulumi.Output<string>;
    /**
     * The name of the Amazon SageMaker Studio Lifecycle Configuration.
     */
    readonly studioLifecycleConfigName: pulumi.Output<string>;
    /**
     * Tags to be associated with the Lifecycle Configuration. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a StudioLifecycleConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StudioLifecycleConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StudioLifecycleConfig resource.
 */
export interface StudioLifecycleConfigArgs {
    /**
     * The App type that the Lifecycle Configuration is attached to.
     */
    studioLifecycleConfigAppType: pulumi.Input<enums.sagemaker.StudioLifecycleConfigAppType>;
    /**
     * The content of your Amazon SageMaker Studio Lifecycle Configuration script. This content must be base64 encoded.
     */
    studioLifecycleConfigContent: pulumi.Input<string>;
    /**
     * The name of the Amazon SageMaker Studio Lifecycle Configuration.
     */
    studioLifecycleConfigName?: pulumi.Input<string>;
    /**
     * Tags to be associated with the Lifecycle Configuration. Each tag consists of a key and an optional value. Tag keys must be unique per resource. Tags are searchable using the Search API.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
