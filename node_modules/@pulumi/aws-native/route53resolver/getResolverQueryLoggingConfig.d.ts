import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::Route53Resolver::ResolverQueryLoggingConfig.
 */
export declare function getResolverQueryLoggingConfig(args: GetResolverQueryLoggingConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverQueryLoggingConfigResult>;
export interface GetResolverQueryLoggingConfigArgs {
    /**
     * ResourceId
     */
    id: string;
}
export interface GetResolverQueryLoggingConfigResult {
    /**
     * Arn
     */
    readonly arn?: string;
    /**
     * Count
     */
    readonly associationCount?: number;
    /**
     * Rfc3339TimeString
     */
    readonly creationTime?: string;
    /**
     * The id of the creator request.
     */
    readonly creatorRequestId?: string;
    /**
     * ResourceId
     */
    readonly id?: string;
    /**
     * AccountId
     */
    readonly ownerId?: string;
    /**
     * ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
     */
    readonly shareStatus?: enums.route53resolver.ResolverQueryLoggingConfigShareStatus;
    /**
     * ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
     */
    readonly status?: enums.route53resolver.ResolverQueryLoggingConfigStatus;
}
/**
 * Resource schema for AWS::Route53Resolver::ResolverQueryLoggingConfig.
 */
export declare function getResolverQueryLoggingConfigOutput(args: GetResolverQueryLoggingConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResolverQueryLoggingConfigResult>;
export interface GetResolverQueryLoggingConfigOutputArgs {
    /**
     * ResourceId
     */
    id: pulumi.Input<string>;
}
