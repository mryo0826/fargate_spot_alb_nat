import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::Route53Resolver::OutpostResolver.
 */
export declare class OutpostResolver extends pulumi.CustomResource {
    /**
     * Get an existing OutpostResolver resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OutpostResolver;
    /**
     * Returns true if the given object is an instance of OutpostResolver.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OutpostResolver;
    /**
     * The OutpostResolver ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Id
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The OutpostResolver creation time
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The id of the creator request.
     */
    readonly creatorRequestId: pulumi.Output<string>;
    /**
     * The number of OutpostResolvers.
     */
    readonly instanceCount: pulumi.Output<number | undefined>;
    /**
     * The OutpostResolver last modified time
     */
    readonly modificationTime: pulumi.Output<string>;
    /**
     * The OutpostResolver name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The Outpost ARN.
     */
    readonly outpostArn: pulumi.Output<string>;
    /**
     * The OutpostResolver instance type.
     */
    readonly preferredInstanceType: pulumi.Output<string>;
    /**
     * The OutpostResolver status, possible values are CREATING, OPERATIONAL, UPDATING, DELETING, ACTION_NEEDED, FAILED_CREATION and FAILED_DELETION.
     */
    readonly status: pulumi.Output<enums.route53resolver.OutpostResolverStatus>;
    /**
     * The OutpostResolver status message.
     */
    readonly statusMessage: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a OutpostResolver resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OutpostResolverArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a OutpostResolver resource.
 */
export interface OutpostResolverArgs {
    /**
     * The number of OutpostResolvers.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The OutpostResolver name.
     */
    name?: pulumi.Input<string>;
    /**
     * The Outpost ARN.
     */
    outpostArn: pulumi.Input<string>;
    /**
     * The OutpostResolver instance type.
     */
    preferredInstanceType: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
