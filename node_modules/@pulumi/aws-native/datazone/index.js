"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserProfile = exports.SubscriptionTarget = exports.ProjectMembership = exports.Project = exports.GroupProfile = exports.getUserProfileOutput = exports.getUserProfile = exports.getSubscriptionTargetOutput = exports.getSubscriptionTarget = exports.getProjectOutput = exports.getProject = exports.getGroupProfileOutput = exports.getGroupProfile = exports.getEnvironmentProfileOutput = exports.getEnvironmentProfile = exports.getEnvironmentBlueprintConfigurationOutput = exports.getEnvironmentBlueprintConfiguration = exports.getEnvironmentActionsOutput = exports.getEnvironmentActions = exports.getEnvironmentOutput = exports.getEnvironment = exports.getDomainOutput = exports.getDomain = exports.getDataSourceOutput = exports.getDataSource = exports.EnvironmentProfile = exports.EnvironmentBlueprintConfiguration = exports.EnvironmentActions = exports.Environment = exports.Domain = exports.DataSource = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DataSource = null;
utilities.lazyLoad(exports, ["DataSource"], () => require("./dataSource"));
exports.Domain = null;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));
exports.Environment = null;
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));
exports.EnvironmentActions = null;
utilities.lazyLoad(exports, ["EnvironmentActions"], () => require("./environmentActions"));
exports.EnvironmentBlueprintConfiguration = null;
utilities.lazyLoad(exports, ["EnvironmentBlueprintConfiguration"], () => require("./environmentBlueprintConfiguration"));
exports.EnvironmentProfile = null;
utilities.lazyLoad(exports, ["EnvironmentProfile"], () => require("./environmentProfile"));
exports.getDataSource = null;
exports.getDataSourceOutput = null;
utilities.lazyLoad(exports, ["getDataSource", "getDataSourceOutput"], () => require("./getDataSource"));
exports.getDomain = null;
exports.getDomainOutput = null;
utilities.lazyLoad(exports, ["getDomain", "getDomainOutput"], () => require("./getDomain"));
exports.getEnvironment = null;
exports.getEnvironmentOutput = null;
utilities.lazyLoad(exports, ["getEnvironment", "getEnvironmentOutput"], () => require("./getEnvironment"));
exports.getEnvironmentActions = null;
exports.getEnvironmentActionsOutput = null;
utilities.lazyLoad(exports, ["getEnvironmentActions", "getEnvironmentActionsOutput"], () => require("./getEnvironmentActions"));
exports.getEnvironmentBlueprintConfiguration = null;
exports.getEnvironmentBlueprintConfigurationOutput = null;
utilities.lazyLoad(exports, ["getEnvironmentBlueprintConfiguration", "getEnvironmentBlueprintConfigurationOutput"], () => require("./getEnvironmentBlueprintConfiguration"));
exports.getEnvironmentProfile = null;
exports.getEnvironmentProfileOutput = null;
utilities.lazyLoad(exports, ["getEnvironmentProfile", "getEnvironmentProfileOutput"], () => require("./getEnvironmentProfile"));
exports.getGroupProfile = null;
exports.getGroupProfileOutput = null;
utilities.lazyLoad(exports, ["getGroupProfile", "getGroupProfileOutput"], () => require("./getGroupProfile"));
exports.getProject = null;
exports.getProjectOutput = null;
utilities.lazyLoad(exports, ["getProject", "getProjectOutput"], () => require("./getProject"));
exports.getSubscriptionTarget = null;
exports.getSubscriptionTargetOutput = null;
utilities.lazyLoad(exports, ["getSubscriptionTarget", "getSubscriptionTargetOutput"], () => require("./getSubscriptionTarget"));
exports.getUserProfile = null;
exports.getUserProfileOutput = null;
utilities.lazyLoad(exports, ["getUserProfile", "getUserProfileOutput"], () => require("./getUserProfile"));
exports.GroupProfile = null;
utilities.lazyLoad(exports, ["GroupProfile"], () => require("./groupProfile"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.ProjectMembership = null;
utilities.lazyLoad(exports, ["ProjectMembership"], () => require("./projectMembership"));
exports.SubscriptionTarget = null;
utilities.lazyLoad(exports, ["SubscriptionTarget"], () => require("./subscriptionTarget"));
exports.UserProfile = null;
utilities.lazyLoad(exports, ["UserProfile"], () => require("./userProfile"));
// Export enums:
__exportStar(require("../types/enums/datazone"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:datazone:DataSource":
                return new exports.DataSource(name, undefined, { urn });
            case "aws-native:datazone:Domain":
                return new exports.Domain(name, undefined, { urn });
            case "aws-native:datazone:Environment":
                return new exports.Environment(name, undefined, { urn });
            case "aws-native:datazone:EnvironmentActions":
                return new exports.EnvironmentActions(name, undefined, { urn });
            case "aws-native:datazone:EnvironmentBlueprintConfiguration":
                return new exports.EnvironmentBlueprintConfiguration(name, undefined, { urn });
            case "aws-native:datazone:EnvironmentProfile":
                return new exports.EnvironmentProfile(name, undefined, { urn });
            case "aws-native:datazone:GroupProfile":
                return new exports.GroupProfile(name, undefined, { urn });
            case "aws-native:datazone:Project":
                return new exports.Project(name, undefined, { urn });
            case "aws-native:datazone:ProjectMembership":
                return new exports.ProjectMembership(name, undefined, { urn });
            case "aws-native:datazone:SubscriptionTarget":
                return new exports.SubscriptionTarget(name, undefined, { urn });
            case "aws-native:datazone:UserProfile":
                return new exports.UserProfile(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "datazone", _module);
//# sourceMappingURL=index.js.map