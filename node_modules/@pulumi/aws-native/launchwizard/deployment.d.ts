import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::LaunchWizard::Deployment Resource Type
 */
export declare class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment;
    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Deployment;
    /**
     * ARN of the LaunchWizard deployment
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Timestamp of LaunchWizard deployment creation
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Timestamp of LaunchWizard deployment deletion
     */
    readonly deletedAt: pulumi.Output<string>;
    /**
     * Deployment ID of the LaunchWizard deployment
     */
    readonly deploymentId: pulumi.Output<string>;
    /**
     * Workload deployment pattern name
     */
    readonly deploymentPatternName: pulumi.Output<string>;
    /**
     * Name of LaunchWizard deployment
     */
    readonly name: pulumi.Output<string>;
    /**
     * Resource Group Name created for LaunchWizard deployment
     */
    readonly resourceGroup: pulumi.Output<string>;
    /**
     * LaunchWizard deployment specifications
     */
    readonly specifications: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Status of LaunchWizard deployment
     */
    readonly status: pulumi.Output<enums.launchwizard.DeploymentStatus>;
    /**
     * Tags for LaunchWizard deployment
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Workload Name for LaunchWizard deployment
     */
    readonly workloadName: pulumi.Output<string>;
    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * Workload deployment pattern name
     */
    deploymentPatternName: pulumi.Input<string>;
    /**
     * Name of LaunchWizard deployment
     */
    name?: pulumi.Input<string>;
    /**
     * LaunchWizard deployment specifications
     */
    specifications: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Tags for LaunchWizard deployment
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Workload Name for LaunchWizard deployment
     */
    workloadName: pulumi.Input<string>;
}
