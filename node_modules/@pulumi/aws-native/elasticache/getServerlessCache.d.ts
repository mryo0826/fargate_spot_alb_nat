import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * The AWS::ElastiCache::ServerlessCache resource creates an Amazon ElastiCache Serverless Cache.
 */
export declare function getServerlessCache(args: GetServerlessCacheArgs, opts?: pulumi.InvokeOptions): Promise<GetServerlessCacheResult>;
export interface GetServerlessCacheArgs {
    /**
     * The name of the Serverless Cache. This value must be unique.
     */
    serverlessCacheName: string;
}
export interface GetServerlessCacheResult {
    /**
     * The ARN of the Serverless Cache.
     */
    readonly arn?: string;
    /**
     * The cache usage limit for the serverless cache.
     */
    readonly cacheUsageLimits?: outputs.elasticache.ServerlessCacheCacheUsageLimits;
    /**
     * The creation time of the Serverless Cache.
     */
    readonly createTime?: string;
    /**
     * The daily time range (in UTC) during which the service takes automatic snapshot of the Serverless Cache.
     */
    readonly dailySnapshotTime?: string;
    /**
     * The description of the Serverless Cache.
     */
    readonly description?: string;
    /**
     * Represents the information required for client programs to connect to a cache node. This value is read-only.
     */
    readonly endpoint?: outputs.elasticache.ServerlessCacheEndpoint;
    /**
     * The engine name of the Serverless Cache.
     */
    readonly engine?: string;
    /**
     * The full engine version of the Serverless Cache.
     */
    readonly fullEngineVersion?: string;
    /**
     * The major engine version of the Serverless Cache.
     */
    readonly majorEngineVersion?: string;
    /**
     * Represents the information required for client programs to connect to a cache node. This value is read-only.
     */
    readonly readerEndpoint?: outputs.elasticache.ServerlessCacheEndpoint;
    /**
     * One or more Amazon VPC security groups associated with this Serverless Cache.
     */
    readonly securityGroupIds?: string[];
    /**
     * The snapshot retention limit of the Serverless Cache.
     */
    readonly snapshotRetentionLimit?: number;
    /**
     * The status of the Serverless Cache.
     */
    readonly status?: string;
    /**
     * An array of key-value pairs to apply to this Serverless Cache.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The ID of the user group.
     */
    readonly userGroupId?: string;
}
/**
 * The AWS::ElastiCache::ServerlessCache resource creates an Amazon ElastiCache Serverless Cache.
 */
export declare function getServerlessCacheOutput(args: GetServerlessCacheOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServerlessCacheResult>;
export interface GetServerlessCacheOutputArgs {
    /**
     * The name of the Serverless Cache. This value must be unique.
     */
    serverlessCacheName: pulumi.Input<string>;
}
