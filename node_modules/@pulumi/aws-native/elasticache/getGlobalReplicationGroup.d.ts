import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * The AWS::ElastiCache::GlobalReplicationGroup resource creates an Amazon ElastiCache Global Replication Group.
 */
export declare function getGlobalReplicationGroup(args: GetGlobalReplicationGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalReplicationGroupResult>;
export interface GetGlobalReplicationGroupArgs {
    /**
     * The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
     */
    globalReplicationGroupId: string;
}
export interface GetGlobalReplicationGroupResult {
    /**
     * Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
     */
    readonly cacheParameterGroupName?: string;
    /**
     * The engine of the Global Datastore.
     */
    readonly engine?: string;
    /**
     * The optional description of the Global Datastore
     */
    readonly globalReplicationGroupDescription?: string;
    /**
     * The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
     */
    readonly globalReplicationGroupId?: string;
    /**
     * The replication groups that comprise the Global Datastore.
     */
    readonly members?: outputs.elasticache.GlobalReplicationGroupMember[];
    /**
     * The status of the Global Datastore
     */
    readonly status?: string;
}
/**
 * The AWS::ElastiCache::GlobalReplicationGroup resource creates an Amazon ElastiCache Global Replication Group.
 */
export declare function getGlobalReplicationGroupOutput(args: GetGlobalReplicationGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGlobalReplicationGroupResult>;
export interface GetGlobalReplicationGroupOutputArgs {
    /**
     * The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
     */
    globalReplicationGroupId: pulumi.Input<string>;
}
