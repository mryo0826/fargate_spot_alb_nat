import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::APS::Scraper
 */
export declare class Scraper extends pulumi.CustomResource {
    /**
     * Get an existing Scraper resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Scraper;
    /**
     * Returns true if the given object is an instance of Scraper.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Scraper;
    /**
     * Scraper alias.
     */
    readonly alias: pulumi.Output<string | undefined>;
    /**
     * Scraper ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Amazon Managed Service for Prometheus workspace the scraper sends metrics to.
     */
    readonly destination: pulumi.Output<outputs.aps.ScraperDestination>;
    /**
     * IAM role ARN for the scraper.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * The configuration in use by the scraper.
     */
    readonly scrapeConfiguration: pulumi.Output<outputs.aps.ScraperScrapeConfiguration>;
    /**
     * Required to identify a specific scraper.
     */
    readonly scraperId: pulumi.Output<string>;
    /**
     * The Amazon EKS cluster from which the scraper collects metrics.
     */
    readonly source: pulumi.Output<outputs.aps.ScraperSource>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Scraper resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScraperArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Scraper resource.
 */
export interface ScraperArgs {
    /**
     * Scraper alias.
     */
    alias?: pulumi.Input<string>;
    /**
     * The Amazon Managed Service for Prometheus workspace the scraper sends metrics to.
     */
    destination: pulumi.Input<inputs.aps.ScraperDestinationArgs>;
    /**
     * The configuration in use by the scraper.
     */
    scrapeConfiguration: pulumi.Input<inputs.aps.ScraperScrapeConfigurationArgs>;
    /**
     * The Amazon EKS cluster from which the scraper collects metrics.
     */
    source: pulumi.Input<inputs.aps.ScraperSourceArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
