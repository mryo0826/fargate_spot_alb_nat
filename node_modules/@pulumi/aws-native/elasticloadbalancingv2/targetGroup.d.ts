import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::ElasticLoadBalancingV2::TargetGroup
 */
export declare class TargetGroup extends pulumi.CustomResource {
    /**
     * Get an existing TargetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TargetGroup;
    /**
     * Returns true if the given object is an instance of TargetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TargetGroup;
    /**
     * Indicates whether health checks are enabled. If the target type is lambda, health checks are disabled by default but can be enabled. If the target type is instance, ip, or alb, health checks are always enabled and cannot be disabled.
     */
    readonly healthCheckEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The approximate amount of time, in seconds, between health checks of an individual target.
     */
    readonly healthCheckIntervalSeconds: pulumi.Output<number | undefined>;
    /**
     * [HTTP/HTTPS health checks] The destination for health checks on the targets. [HTTP1 or HTTP2 protocol version] The ping path. The default is /. [GRPC protocol version] The path of a custom health check method with the format /package.service/method. The default is /AWS.ALB/healthcheck.
     */
    readonly healthCheckPath: pulumi.Output<string | undefined>;
    /**
     * The port the load balancer uses when performing health checks on targets.
     */
    readonly healthCheckPort: pulumi.Output<string | undefined>;
    /**
     * The protocol the load balancer uses when performing health checks on targets.
     */
    readonly healthCheckProtocol: pulumi.Output<string | undefined>;
    /**
     * The amount of time, in seconds, during which no response from a target means a failed health check.
     */
    readonly healthCheckTimeoutSeconds: pulumi.Output<number | undefined>;
    /**
     * The number of consecutive health checks successes required before considering an unhealthy target healthy.
     */
    readonly healthyThresholdCount: pulumi.Output<number | undefined>;
    /**
     * The type of IP address used for this target group. The possible values are ipv4 and ipv6.
     */
    readonly ipAddressType: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Names (ARNs) of the load balancers that route traffic to this target group.
     */
    readonly loadBalancerArns: pulumi.Output<string[]>;
    /**
     * [HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target.
     */
    readonly matcher: pulumi.Output<outputs.elasticloadbalancingv2.TargetGroupMatcher | undefined>;
    /**
     * The name of the target group.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.
     */
    readonly port: pulumi.Output<number | undefined>;
    /**
     * The protocol to use for routing traffic to the targets.
     */
    readonly protocol: pulumi.Output<string | undefined>;
    /**
     * [HTTP/HTTPS protocol] The protocol version. The possible values are GRPC, HTTP1, and HTTP2.
     */
    readonly protocolVersion: pulumi.Output<string | undefined>;
    /**
     * The tags.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ARN of the Target Group
     */
    readonly targetGroupArn: pulumi.Output<string>;
    /**
     * The attributes.
     */
    readonly targetGroupAttributes: pulumi.Output<outputs.elasticloadbalancingv2.TargetGroupAttribute[] | undefined>;
    /**
     * The full name of the target group.
     */
    readonly targetGroupFullName: pulumi.Output<string>;
    /**
     * The name of the target group.
     */
    readonly targetGroupName: pulumi.Output<string>;
    /**
     * The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.
     */
    readonly targetType: pulumi.Output<string | undefined>;
    /**
     * The targets.
     */
    readonly targets: pulumi.Output<outputs.elasticloadbalancingv2.TargetGroupTargetDescription[] | undefined>;
    /**
     * The number of consecutive health check failures required before considering a target unhealthy.
     */
    readonly unhealthyThresholdCount: pulumi.Output<number | undefined>;
    /**
     * The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.
     */
    readonly vpcId: pulumi.Output<string | undefined>;
    /**
     * Create a TargetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: TargetGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TargetGroup resource.
 */
export interface TargetGroupArgs {
    /**
     * Indicates whether health checks are enabled. If the target type is lambda, health checks are disabled by default but can be enabled. If the target type is instance, ip, or alb, health checks are always enabled and cannot be disabled.
     */
    healthCheckEnabled?: pulumi.Input<boolean>;
    /**
     * The approximate amount of time, in seconds, between health checks of an individual target.
     */
    healthCheckIntervalSeconds?: pulumi.Input<number>;
    /**
     * [HTTP/HTTPS health checks] The destination for health checks on the targets. [HTTP1 or HTTP2 protocol version] The ping path. The default is /. [GRPC protocol version] The path of a custom health check method with the format /package.service/method. The default is /AWS.ALB/healthcheck.
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * The port the load balancer uses when performing health checks on targets.
     */
    healthCheckPort?: pulumi.Input<string>;
    /**
     * The protocol the load balancer uses when performing health checks on targets.
     */
    healthCheckProtocol?: pulumi.Input<string>;
    /**
     * The amount of time, in seconds, during which no response from a target means a failed health check.
     */
    healthCheckTimeoutSeconds?: pulumi.Input<number>;
    /**
     * The number of consecutive health checks successes required before considering an unhealthy target healthy.
     */
    healthyThresholdCount?: pulumi.Input<number>;
    /**
     * The type of IP address used for this target group. The possible values are ipv4 and ipv6.
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * [HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target.
     */
    matcher?: pulumi.Input<inputs.elasticloadbalancingv2.TargetGroupMatcherArgs>;
    /**
     * The name of the target group.
     */
    name?: pulumi.Input<string>;
    /**
     * The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.
     */
    port?: pulumi.Input<number>;
    /**
     * The protocol to use for routing traffic to the targets.
     */
    protocol?: pulumi.Input<string>;
    /**
     * [HTTP/HTTPS protocol] The protocol version. The possible values are GRPC, HTTP1, and HTTP2.
     */
    protocolVersion?: pulumi.Input<string>;
    /**
     * The tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The attributes.
     */
    targetGroupAttributes?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancingv2.TargetGroupAttributeArgs>[]>;
    /**
     * The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.
     */
    targetType?: pulumi.Input<string>;
    /**
     * The targets.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.elasticloadbalancingv2.TargetGroupTargetDescriptionArgs>[]>;
    /**
     * The number of consecutive health check failures required before considering a target unhealthy.
     */
    unhealthyThresholdCount?: pulumi.Input<number>;
    /**
     * The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.
     */
    vpcId?: pulumi.Input<string>;
}
