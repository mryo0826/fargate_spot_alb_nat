"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudFormationProvisionedProduct = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Schema for AWS::ServiceCatalog::CloudFormationProvisionedProduct
 */
class CloudFormationProvisionedProduct extends pulumi.CustomResource {
    /**
     * Get an existing CloudFormationProvisionedProduct resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new CloudFormationProvisionedProduct(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CloudFormationProvisionedProduct.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudFormationProvisionedProduct.__pulumiType;
    }
    /**
     * Create a CloudFormationProvisionedProduct resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["acceptLanguage"] = args ? args.acceptLanguage : undefined;
            resourceInputs["notificationArns"] = args ? args.notificationArns : undefined;
            resourceInputs["pathId"] = args ? args.pathId : undefined;
            resourceInputs["pathName"] = args ? args.pathName : undefined;
            resourceInputs["productId"] = args ? args.productId : undefined;
            resourceInputs["productName"] = args ? args.productName : undefined;
            resourceInputs["provisionedProductName"] = args ? args.provisionedProductName : undefined;
            resourceInputs["provisioningArtifactId"] = args ? args.provisioningArtifactId : undefined;
            resourceInputs["provisioningArtifactName"] = args ? args.provisioningArtifactName : undefined;
            resourceInputs["provisioningParameters"] = args ? args.provisioningParameters : undefined;
            resourceInputs["provisioningPreferences"] = args ? args.provisioningPreferences : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["cloudformationStackArn"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["provisionedProductId"] = undefined /*out*/;
            resourceInputs["recordId"] = undefined /*out*/;
        }
        else {
            resourceInputs["acceptLanguage"] = undefined /*out*/;
            resourceInputs["cloudformationStackArn"] = undefined /*out*/;
            resourceInputs["notificationArns"] = undefined /*out*/;
            resourceInputs["outputs"] = undefined /*out*/;
            resourceInputs["pathId"] = undefined /*out*/;
            resourceInputs["pathName"] = undefined /*out*/;
            resourceInputs["productId"] = undefined /*out*/;
            resourceInputs["productName"] = undefined /*out*/;
            resourceInputs["provisionedProductId"] = undefined /*out*/;
            resourceInputs["provisionedProductName"] = undefined /*out*/;
            resourceInputs["provisioningArtifactId"] = undefined /*out*/;
            resourceInputs["provisioningArtifactName"] = undefined /*out*/;
            resourceInputs["provisioningParameters"] = undefined /*out*/;
            resourceInputs["provisioningPreferences"] = undefined /*out*/;
            resourceInputs["recordId"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["notificationArns[*]", "provisionedProductName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(CloudFormationProvisionedProduct.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CloudFormationProvisionedProduct = CloudFormationProvisionedProduct;
/** @internal */
CloudFormationProvisionedProduct.__pulumiType = 'aws-native:servicecatalog:CloudFormationProvisionedProduct';
//# sourceMappingURL=cloudFormationProvisionedProduct.js.map