import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Transfer::Certificate
 */
export declare class Certificate extends pulumi.CustomResource {
    /**
     * Get an existing Certificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Certificate;
    /**
     * Returns true if the given object is an instance of Certificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Certificate;
    /**
     * Specifies the active date for the certificate.
     */
    readonly activeDate: pulumi.Output<string | undefined>;
    /**
     * Specifies the unique Amazon Resource Name (ARN) for the agreement.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Specifies the certificate body to be imported.
     */
    readonly certificate: pulumi.Output<string>;
    /**
     * Specifies the certificate chain to be imported.
     */
    readonly certificateChain: pulumi.Output<string | undefined>;
    /**
     * A unique identifier for the certificate.
     */
    readonly certificateId: pulumi.Output<string>;
    /**
     * A textual description for the certificate.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the inactive date for the certificate.
     */
    readonly inactiveDate: pulumi.Output<string | undefined>;
    /**
     * Specifies the not after date for the certificate.
     */
    readonly notAfterDate: pulumi.Output<string>;
    /**
     * Specifies the not before date for the certificate.
     */
    readonly notBeforeDate: pulumi.Output<string>;
    /**
     * Specifies the private key for the certificate.
     */
    readonly privateKey: pulumi.Output<string | undefined>;
    /**
     * Specifies Certificate's serial.
     */
    readonly serial: pulumi.Output<string>;
    /**
     * A status description for the certificate.
     */
    readonly status: pulumi.Output<enums.transfer.CertificateStatus>;
    /**
     * Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Describing the type of certificate. With or without a private key.
     */
    readonly type: pulumi.Output<enums.transfer.CertificateType>;
    /**
     * Specifies the usage type for the certificate.
     */
    readonly usage: pulumi.Output<enums.transfer.CertificateUsage>;
    /**
     * Create a Certificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Certificate resource.
 */
export interface CertificateArgs {
    /**
     * Specifies the active date for the certificate.
     */
    activeDate?: pulumi.Input<string>;
    /**
     * Specifies the certificate body to be imported.
     */
    certificate: pulumi.Input<string>;
    /**
     * Specifies the certificate chain to be imported.
     */
    certificateChain?: pulumi.Input<string>;
    /**
     * A textual description for the certificate.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the inactive date for the certificate.
     */
    inactiveDate?: pulumi.Input<string>;
    /**
     * Specifies the private key for the certificate.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Specifies the usage type for the certificate.
     */
    usage: pulumi.Input<enums.transfer.CertificateUsage>;
}
