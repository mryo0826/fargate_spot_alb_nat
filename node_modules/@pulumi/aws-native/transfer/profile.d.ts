import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Transfer::Profile
 */
export declare class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Profile;
    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Profile;
    /**
     * Specifies the unique Amazon Resource Name (ARN) for the profile.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * AS2 identifier agreed with a trading partner.
     */
    readonly as2Id: pulumi.Output<string>;
    /**
     * List of the certificate IDs associated with this profile to be used for encryption and signing of AS2 messages.
     */
    readonly certificateIds: pulumi.Output<string[] | undefined>;
    /**
     * A unique identifier for the profile
     */
    readonly profileId: pulumi.Output<string>;
    /**
     * Enum specifying whether the profile is local or associated with a trading partner.
     */
    readonly profileType: pulumi.Output<enums.transfer.ProfileType>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    /**
     * AS2 identifier agreed with a trading partner.
     */
    as2Id: pulumi.Input<string>;
    /**
     * List of the certificate IDs associated with this profile to be used for encryption and signing of AS2 messages.
     */
    certificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enum specifying whether the profile is local or associated with a trading partner.
     */
    profileType: pulumi.Input<enums.transfer.ProfileType>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
