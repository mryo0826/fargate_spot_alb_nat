"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workflow = exports.User = exports.Server = exports.Profile = exports.getWorkflowOutput = exports.getWorkflow = exports.getUserOutput = exports.getUser = exports.getServerOutput = exports.getServer = exports.getProfileOutput = exports.getProfile = exports.getConnectorOutput = exports.getConnector = exports.getCertificateOutput = exports.getCertificate = exports.getAgreementOutput = exports.getAgreement = exports.Connector = exports.Certificate = exports.Agreement = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Agreement = null;
utilities.lazyLoad(exports, ["Agreement"], () => require("./agreement"));
exports.Certificate = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
exports.Connector = null;
utilities.lazyLoad(exports, ["Connector"], () => require("./connector"));
exports.getAgreement = null;
exports.getAgreementOutput = null;
utilities.lazyLoad(exports, ["getAgreement", "getAgreementOutput"], () => require("./getAgreement"));
exports.getCertificate = null;
exports.getCertificateOutput = null;
utilities.lazyLoad(exports, ["getCertificate", "getCertificateOutput"], () => require("./getCertificate"));
exports.getConnector = null;
exports.getConnectorOutput = null;
utilities.lazyLoad(exports, ["getConnector", "getConnectorOutput"], () => require("./getConnector"));
exports.getProfile = null;
exports.getProfileOutput = null;
utilities.lazyLoad(exports, ["getProfile", "getProfileOutput"], () => require("./getProfile"));
exports.getServer = null;
exports.getServerOutput = null;
utilities.lazyLoad(exports, ["getServer", "getServerOutput"], () => require("./getServer"));
exports.getUser = null;
exports.getUserOutput = null;
utilities.lazyLoad(exports, ["getUser", "getUserOutput"], () => require("./getUser"));
exports.getWorkflow = null;
exports.getWorkflowOutput = null;
utilities.lazyLoad(exports, ["getWorkflow", "getWorkflowOutput"], () => require("./getWorkflow"));
exports.Profile = null;
utilities.lazyLoad(exports, ["Profile"], () => require("./profile"));
exports.Server = null;
utilities.lazyLoad(exports, ["Server"], () => require("./server"));
exports.User = null;
utilities.lazyLoad(exports, ["User"], () => require("./user"));
exports.Workflow = null;
utilities.lazyLoad(exports, ["Workflow"], () => require("./workflow"));
// Export enums:
__exportStar(require("../types/enums/transfer"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:transfer:Agreement":
                return new exports.Agreement(name, undefined, { urn });
            case "aws-native:transfer:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "aws-native:transfer:Connector":
                return new exports.Connector(name, undefined, { urn });
            case "aws-native:transfer:Profile":
                return new exports.Profile(name, undefined, { urn });
            case "aws-native:transfer:Server":
                return new exports.Server(name, undefined, { urn });
            case "aws-native:transfer:User":
                return new exports.User(name, undefined, { urn });
            case "aws-native:transfer:Workflow":
                return new exports.Workflow(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "transfer", _module);
//# sourceMappingURL=index.js.map