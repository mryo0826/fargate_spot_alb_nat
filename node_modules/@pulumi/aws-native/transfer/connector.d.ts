import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Transfer::Connector
 */
export declare class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector;
    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connector;
    /**
     * Specifies the access role for the connector.
     */
    readonly accessRole: pulumi.Output<string>;
    /**
     * Specifies the unique Amazon Resource Name (ARN) for the connector.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Configuration for an AS2 connector.
     */
    readonly as2Config: pulumi.Output<outputs.transfer.As2ConfigProperties | undefined>;
    /**
     * A unique identifier for the connector.
     */
    readonly connectorId: pulumi.Output<string>;
    /**
     * Specifies the logging role for the connector.
     */
    readonly loggingRole: pulumi.Output<string | undefined>;
    /**
     * Security policy for SFTP Connector
     */
    readonly securityPolicyName: pulumi.Output<string | undefined>;
    /**
     * The list of egress IP addresses of this connector. These IP addresses are assigned automatically when you create the connector.
     */
    readonly serviceManagedEgressIpAddresses: pulumi.Output<string[]>;
    /**
     * Configuration for an SFTP connector.
     */
    readonly sftpConfig: pulumi.Output<outputs.transfer.SftpConfigProperties | undefined>;
    /**
     * Key-value pairs that can be used to group and search for connectors. Tags are metadata attached to connectors for any purpose.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * URL for Connector
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     * Specifies the access role for the connector.
     */
    accessRole: pulumi.Input<string>;
    /**
     * Configuration for an AS2 connector.
     */
    as2Config?: pulumi.Input<inputs.transfer.As2ConfigPropertiesArgs>;
    /**
     * Specifies the logging role for the connector.
     */
    loggingRole?: pulumi.Input<string>;
    /**
     * Security policy for SFTP Connector
     */
    securityPolicyName?: pulumi.Input<string>;
    /**
     * Configuration for an SFTP connector.
     */
    sftpConfig?: pulumi.Input<inputs.transfer.SftpConfigPropertiesArgs>;
    /**
     * Key-value pairs that can be used to group and search for connectors. Tags are metadata attached to connectors for any purpose.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * URL for Connector
     */
    url: pulumi.Input<string>;
}
