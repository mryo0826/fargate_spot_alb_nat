"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pipeline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * An OpenSearch Ingestion Service Data Prepper pipeline running Data Prepper.
 */
class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Pipeline(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }
    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.maxUnits === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxUnits'");
            }
            if ((!args || args.minUnits === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minUnits'");
            }
            if ((!args || args.pipelineConfigurationBody === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineConfigurationBody'");
            }
            resourceInputs["bufferOptions"] = args ? args.bufferOptions : undefined;
            resourceInputs["encryptionAtRestOptions"] = args ? args.encryptionAtRestOptions : undefined;
            resourceInputs["logPublishingOptions"] = args ? args.logPublishingOptions : undefined;
            resourceInputs["maxUnits"] = args ? args.maxUnits : undefined;
            resourceInputs["minUnits"] = args ? args.minUnits : undefined;
            resourceInputs["pipelineConfigurationBody"] = args ? args.pipelineConfigurationBody : undefined;
            resourceInputs["pipelineName"] = args ? args.pipelineName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcOptions"] = args ? args.vpcOptions : undefined;
            resourceInputs["ingestEndpointUrls"] = undefined /*out*/;
            resourceInputs["pipelineArn"] = undefined /*out*/;
            resourceInputs["vpcEndpointService"] = undefined /*out*/;
            resourceInputs["vpcEndpoints"] = undefined /*out*/;
        }
        else {
            resourceInputs["bufferOptions"] = undefined /*out*/;
            resourceInputs["encryptionAtRestOptions"] = undefined /*out*/;
            resourceInputs["ingestEndpointUrls"] = undefined /*out*/;
            resourceInputs["logPublishingOptions"] = undefined /*out*/;
            resourceInputs["maxUnits"] = undefined /*out*/;
            resourceInputs["minUnits"] = undefined /*out*/;
            resourceInputs["pipelineArn"] = undefined /*out*/;
            resourceInputs["pipelineConfigurationBody"] = undefined /*out*/;
            resourceInputs["pipelineName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcEndpointService"] = undefined /*out*/;
            resourceInputs["vpcEndpoints"] = undefined /*out*/;
            resourceInputs["vpcOptions"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["pipelineName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Pipeline.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Pipeline = Pipeline;
/** @internal */
Pipeline.__pulumiType = 'aws-native:osis:Pipeline';
//# sourceMappingURL=pipeline.js.map