import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * An OpenSearch Ingestion Service Data Prepper pipeline running Data Prepper.
 */
export declare class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Pipeline;
    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Pipeline;
    /**
     * Options that specify the configuration of a persistent buffer. To configure how OpenSearch Ingestion encrypts this data, set the `EncryptionAtRestOptions` . For more information, see [Persistent buffering](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/osis-features-overview.html#persistent-buffering) .
     */
    readonly bufferOptions: pulumi.Output<outputs.osis.PipelineBufferOptions | undefined>;
    /**
     * Options to control how OpenSearch encrypts buffer data.
     */
    readonly encryptionAtRestOptions: pulumi.Output<outputs.osis.PipelineEncryptionAtRestOptions | undefined>;
    /**
     * A list of endpoints that can be used for ingesting data into a pipeline
     */
    readonly ingestEndpointUrls: pulumi.Output<string[]>;
    /**
     * Key-value pairs that represent log publishing settings.
     */
    readonly logPublishingOptions: pulumi.Output<outputs.osis.PipelineLogPublishingOptions | undefined>;
    /**
     * The maximum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
     */
    readonly maxUnits: pulumi.Output<number>;
    /**
     * The minimum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
     */
    readonly minUnits: pulumi.Output<number>;
    /**
     * The Amazon Resource Name (ARN) of the pipeline.
     */
    readonly pipelineArn: pulumi.Output<string>;
    /**
     * The Data Prepper pipeline configuration.
     */
    readonly pipelineConfigurationBody: pulumi.Output<string>;
    /**
     * Name of the OpenSearch Ingestion Service pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.
     */
    readonly pipelineName: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The VPC endpoint service name for the pipeline.
     */
    readonly vpcEndpointService: pulumi.Output<string>;
    /**
     * The VPC interface endpoints that have access to the pipeline.
     */
    readonly vpcEndpoints: pulumi.Output<outputs.osis.PipelineVpcEndpoint[]>;
    /**
     * Options that specify the subnets and security groups for an OpenSearch Ingestion VPC endpoint.
     */
    readonly vpcOptions: pulumi.Output<outputs.osis.PipelineVpcOptions | undefined>;
    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * Options that specify the configuration of a persistent buffer. To configure how OpenSearch Ingestion encrypts this data, set the `EncryptionAtRestOptions` . For more information, see [Persistent buffering](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/osis-features-overview.html#persistent-buffering) .
     */
    bufferOptions?: pulumi.Input<inputs.osis.PipelineBufferOptionsArgs>;
    /**
     * Options to control how OpenSearch encrypts buffer data.
     */
    encryptionAtRestOptions?: pulumi.Input<inputs.osis.PipelineEncryptionAtRestOptionsArgs>;
    /**
     * Key-value pairs that represent log publishing settings.
     */
    logPublishingOptions?: pulumi.Input<inputs.osis.PipelineLogPublishingOptionsArgs>;
    /**
     * The maximum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
     */
    maxUnits: pulumi.Input<number>;
    /**
     * The minimum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
     */
    minUnits: pulumi.Input<number>;
    /**
     * The Data Prepper pipeline configuration.
     */
    pipelineConfigurationBody: pulumi.Input<string>;
    /**
     * Name of the OpenSearch Ingestion Service pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.
     */
    pipelineName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Options that specify the subnets and security groups for an OpenSearch Ingestion VPC endpoint.
     */
    vpcOptions?: pulumi.Input<inputs.osis.PipelineVpcOptionsArgs>;
}
