import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource type definition for AWS::IVSChat::Room.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const room = new aws_native.ivschat.Room("room", {
 *     name: "MyRoom",
 *     tags: [{
 *         key: "MyKey",
 *         value: "MyValue",
 *     }],
 * });
 * export const roomArn = room.id;
 * export const roomId = room.id;
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const room = new aws_native.ivschat.Room("room", {
 *     name: "MyRoom",
 *     tags: [{
 *         key: "MyKey",
 *         value: "MyValue",
 *     }],
 * });
 * export const roomArn = room.id;
 * export const roomId = room.id;
 *
 * ```
 */
export declare class Room extends pulumi.CustomResource {
    /**
     * Get an existing Room resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Room;
    /**
     * Returns true if the given object is an instance of Room.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Room;
    /**
     * Room ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The system-generated ID of the room.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    readonly loggingConfigurationIdentifiers: pulumi.Output<string[] | undefined>;
    /**
     * The maximum number of characters in a single message.
     */
    readonly maximumMessageLength: pulumi.Output<number | undefined>;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    readonly maximumMessageRatePerSecond: pulumi.Output<number | undefined>;
    /**
     * Configuration information for optional review of messages.
     */
    readonly messageReviewHandler: pulumi.Output<outputs.ivschat.RoomMessageReviewHandler | undefined>;
    /**
     * The name of the room. The value does not need to be unique.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Room resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoomArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Room resource.
 */
export interface RoomArgs {
    /**
     * Array of logging configuration identifiers attached to the room.
     */
    loggingConfigurationIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of characters in a single message.
     */
    maximumMessageLength?: pulumi.Input<number>;
    /**
     * The maximum number of messages per second that can be sent to the room.
     */
    maximumMessageRatePerSecond?: pulumi.Input<number>;
    /**
     * Configuration information for optional review of messages.
     */
    messageReviewHandler?: pulumi.Input<inputs.ivschat.RoomMessageReviewHandlerArgs>;
    /**
     * The name of the room. The value does not need to be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
