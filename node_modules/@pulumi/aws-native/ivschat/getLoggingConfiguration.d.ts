import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource type definition for AWS::IVSChat::LoggingConfiguration.
 */
export declare function getLoggingConfiguration(args: GetLoggingConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetLoggingConfigurationResult>;
export interface GetLoggingConfigurationArgs {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: string;
}
export interface GetLoggingConfigurationResult {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn?: string;
    /**
     * The DestinationConfiguration is a complex type that contains information about where chat content will be logged.
     */
    readonly destinationConfiguration?: outputs.ivschat.LoggingConfigurationDestinationConfiguration;
    /**
     * The system-generated ID of the logging configuration.
     */
    readonly id?: string;
    /**
     * The name of the logging configuration. The value does not need to be unique.
     */
    readonly name?: string;
    /**
     * The state of the logging configuration. When the state is ACTIVE, the configuration is ready to log chat content.
     */
    readonly state?: enums.ivschat.LoggingConfigurationState;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource type definition for AWS::IVSChat::LoggingConfiguration.
 */
export declare function getLoggingConfigurationOutput(args: GetLoggingConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLoggingConfigurationResult>;
export interface GetLoggingConfigurationOutputArgs {
    /**
     * LoggingConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    arn: pulumi.Input<string>;
}
