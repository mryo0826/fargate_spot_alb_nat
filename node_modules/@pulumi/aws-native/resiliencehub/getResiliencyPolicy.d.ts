import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type Definition for Resiliency Policy.
 */
export declare function getResiliencyPolicy(args: GetResiliencyPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetResiliencyPolicyResult>;
export interface GetResiliencyPolicyArgs {
    /**
     * Amazon Resource Name (ARN) of the Resiliency Policy.
     */
    policyArn: string;
}
export interface GetResiliencyPolicyResult {
    /**
     * Data Location Constraint of the Policy.
     */
    readonly dataLocationConstraint?: enums.resiliencehub.ResiliencyPolicyDataLocationConstraint;
    /**
     * The resiliency policy.
     */
    readonly policy?: outputs.resiliencehub.ResiliencyPolicyPolicyMap;
    /**
     * Amazon Resource Name (ARN) of the Resiliency Policy.
     */
    readonly policyArn?: string;
    /**
     * Description of Resiliency Policy.
     */
    readonly policyDescription?: string;
    /**
     * Name of Resiliency Policy.
     */
    readonly policyName?: string;
    /**
     * Tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * Resiliency Policy Tier.
     */
    readonly tier?: enums.resiliencehub.ResiliencyPolicyTier;
}
/**
 * Resource Type Definition for Resiliency Policy.
 */
export declare function getResiliencyPolicyOutput(args: GetResiliencyPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResiliencyPolicyResult>;
export interface GetResiliencyPolicyOutputArgs {
    /**
     * Amazon Resource Name (ARN) of the Resiliency Policy.
     */
    policyArn: pulumi.Input<string>;
}
