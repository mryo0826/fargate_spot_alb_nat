import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Kinesis::Stream
 */
export declare function getStream(args: GetStreamArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamResult>;
export interface GetStreamArgs {
    /**
     * The name of the Kinesis stream.
     */
    name: string;
}
export interface GetStreamResult {
    /**
     * The Amazon resource name (ARN) of the Kinesis stream
     */
    readonly arn?: string;
    /**
     * The number of hours for the data records that are stored in shards to remain accessible.
     */
    readonly retentionPeriodHours?: number;
    /**
     * The number of shards that the stream uses. Required when StreamMode = PROVISIONED is passed.
     */
    readonly shardCount?: number;
    /**
     * When specified, enables or updates server-side encryption using an AWS KMS key for a specified stream.
     */
    readonly streamEncryption?: outputs.kinesis.StreamEncryption;
    /**
     * The mode in which the stream is running.
     */
    readonly streamModeDetails?: outputs.kinesis.StreamModeDetails;
    /**
     * An arbitrary set of tags (keyâ€“value pairs) to associate with the Kinesis stream.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Kinesis::Stream
 */
export declare function getStreamOutput(args: GetStreamOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamResult>;
export interface GetStreamOutputArgs {
    /**
     * The name of the Kinesis stream.
     */
    name: pulumi.Input<string>;
}
