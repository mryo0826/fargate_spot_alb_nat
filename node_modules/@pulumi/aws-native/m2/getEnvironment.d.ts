import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Represents a runtime environment that can run migrated mainframe applications.
 */
export declare function getEnvironment(args: GetEnvironmentArgs, opts?: pulumi.InvokeOptions): Promise<GetEnvironmentResult>;
export interface GetEnvironmentArgs {
    /**
     * The Amazon Resource Name (ARN) of the runtime environment.
     */
    environmentArn: string;
}
export interface GetEnvironmentResult {
    /**
     * The version of the runtime engine for the environment.
     */
    readonly engineVersion?: string;
    /**
     * The Amazon Resource Name (ARN) of the runtime environment.
     */
    readonly environmentArn?: string;
    /**
     * The unique identifier of the environment.
     */
    readonly environmentId?: string;
    /**
     * Defines the details of a high availability configuration.
     */
    readonly highAvailabilityConfig?: outputs.m2.EnvironmentHighAvailabilityConfig;
    /**
     * The type of instance underlying the environment.
     */
    readonly instanceType?: string;
    /**
     * Configures a desired maintenance window for the environment. If you do not provide a value, a random system-generated value will be assigned.
     */
    readonly preferredMaintenanceWindow?: string;
    /**
     * Tags associated to this environment.
     */
    readonly tags?: {
        [key: string]: string;
    };
}
/**
 * Represents a runtime environment that can run migrated mainframe applications.
 */
export declare function getEnvironmentOutput(args: GetEnvironmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEnvironmentResult>;
export interface GetEnvironmentOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the runtime environment.
     */
    environmentArn: pulumi.Input<string>;
}
