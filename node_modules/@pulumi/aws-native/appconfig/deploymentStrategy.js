"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeploymentStrategy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::AppConfig::DeploymentStrategy
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicDeploymentStrategy = new aws_native.appconfig.DeploymentStrategy("basicDeploymentStrategy", {
 *     name: "MyTestDeploymentStrategy",
 *     description: "A sample test deployment strategy.",
 *     deploymentDurationInMinutes: 3,
 *     finalBakeTimeInMinutes: 4,
 *     growthFactor: 10,
 *     growthType: aws_native.appconfig.DeploymentStrategyGrowthType.Linear,
 *     replicateTo: aws_native.appconfig.DeploymentStrategyReplicateTo.None,
 *     tags: [{
 *         key: "Env",
 *         value: "test",
 *     }],
 * });
 *
 * ```
 */
class DeploymentStrategy extends pulumi.CustomResource {
    /**
     * Get an existing DeploymentStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new DeploymentStrategy(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DeploymentStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeploymentStrategy.__pulumiType;
    }
    /**
     * Create a DeploymentStrategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.deploymentDurationInMinutes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deploymentDurationInMinutes'");
            }
            if ((!args || args.growthFactor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'growthFactor'");
            }
            if ((!args || args.replicateTo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'replicateTo'");
            }
            resourceInputs["deploymentDurationInMinutes"] = args ? args.deploymentDurationInMinutes : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["finalBakeTimeInMinutes"] = args ? args.finalBakeTimeInMinutes : undefined;
            resourceInputs["growthFactor"] = args ? args.growthFactor : undefined;
            resourceInputs["growthType"] = args ? args.growthType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["replicateTo"] = args ? args.replicateTo : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
        }
        else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["deploymentDurationInMinutes"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["finalBakeTimeInMinutes"] = undefined /*out*/;
            resourceInputs["growthFactor"] = undefined /*out*/;
            resourceInputs["growthType"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["replicateTo"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "replicateTo"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DeploymentStrategy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DeploymentStrategy = DeploymentStrategy;
/** @internal */
DeploymentStrategy.__pulumiType = 'aws-native:appconfig:DeploymentStrategy';
//# sourceMappingURL=deploymentStrategy.js.map