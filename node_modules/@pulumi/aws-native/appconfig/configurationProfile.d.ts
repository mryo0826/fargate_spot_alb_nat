import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare class ConfigurationProfile extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigurationProfile;
    /**
     * Returns true if the given object is an instance of ConfigurationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConfigurationProfile;
    /**
     * The application ID.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * The configuration profile ID
     */
    readonly configurationProfileId: pulumi.Output<string>;
    /**
     * On resource deletion this controls whether the Deletion Protection check should be applied, bypassed, or (the default) whether the behavior should be controlled by the account-level Deletion Protection setting. See https://docs.aws.amazon.com/appconfig/latest/userguide/deletion-protection.html
     */
    readonly deletionProtectionCheck: pulumi.Output<enums.appconfig.ConfigurationProfileDeletionProtectionCheck | undefined>;
    /**
     * A description of the configuration profile.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name of the AWS Key Management Service key to encrypt new configuration data versions in the AWS AppConfig hosted configuration store. This attribute is only used for hosted configuration types. To encrypt data managed in other configuration stores, see the documentation for how to specify an AWS KMS key for that particular service.
     */
    readonly kmsKeyArn: pulumi.Output<string>;
    /**
     * The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
     */
    readonly kmsKeyIdentifier: pulumi.Output<string | undefined>;
    /**
     * A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object.
     */
    readonly locationUri: pulumi.Output<string>;
    /**
     * A name for the configuration profile.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ARN of an IAM role with permission to access the configuration at the specified LocationUri.
     */
    readonly retrievalRoleArn: pulumi.Output<string | undefined>;
    /**
     * Metadata to assign to the configuration profile. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of configurations contained in the profile. When calling this API, enter one of the following values for Type: AWS.AppConfig.FeatureFlags, AWS.Freeform
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * A list of methods for validating the configuration.
     */
    readonly validators: pulumi.Output<outputs.appconfig.ConfigurationProfileValidators[] | undefined>;
    /**
     * Create a ConfigurationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConfigurationProfile resource.
 */
export interface ConfigurationProfileArgs {
    /**
     * The application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * On resource deletion this controls whether the Deletion Protection check should be applied, bypassed, or (the default) whether the behavior should be controlled by the account-level Deletion Protection setting. See https://docs.aws.amazon.com/appconfig/latest/userguide/deletion-protection.html
     */
    deletionProtectionCheck?: pulumi.Input<enums.appconfig.ConfigurationProfileDeletionProtectionCheck>;
    /**
     * A description of the configuration profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The AWS Key Management Service key identifier (key ID, key alias, or key ARN) provided when the resource was created or updated.
     */
    kmsKeyIdentifier?: pulumi.Input<string>;
    /**
     * A URI to locate the configuration. You can specify the AWS AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object.
     */
    locationUri: pulumi.Input<string>;
    /**
     * A name for the configuration profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of an IAM role with permission to access the configuration at the specified LocationUri.
     */
    retrievalRoleArn?: pulumi.Input<string>;
    /**
     * Metadata to assign to the configuration profile. Tags help organize and categorize your AWS AppConfig resources. Each tag consists of a key and an optional value, both of which you define.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of configurations contained in the profile. When calling this API, enter one of the following values for Type: AWS.AppConfig.FeatureFlags, AWS.Freeform
     */
    type?: pulumi.Input<string>;
    /**
     * A list of methods for validating the configuration.
     */
    validators?: pulumi.Input<pulumi.Input<inputs.appconfig.ConfigurationProfileValidatorsArgs>[]>;
}
