import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::AppConfig::Extension
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicExtension = new aws_native.appconfig.Extension("basicExtension", {
 *     name: "My Test Extension",
 *     description: "My test extension",
 *     latestVersionNumber: 0,
 *     actions: {
 *         pre_create_hosted_configuration_version: [{
 *             name: "My Test Action",
 *             uri: "DependentLambda.Arn",
 *             roleArn: "DependentRole.Arn",
 *             description: "My test action point",
 *         }],
 *     },
 *     parameters: {
 *         myTestParam: {
 *             required: false,
 *             description: "My test parameter",
 *         },
 *     },
 *     tags: [{
 *         key: "Ext",
 *         value: "Test",
 *     }],
 * });
 *
 * ```
 */
export declare class Extension extends pulumi.CustomResource {
    /**
     * Get an existing Extension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Extension;
    /**
     * Returns true if the given object is an instance of Extension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Extension;
    /**
     * The actions defined in the extension.
     */
    readonly actions: pulumi.Output<{
        [key: string]: outputs.appconfig.ExtensionAction[];
    }>;
    /**
     * The system-generated Amazon Resource Name (ARN) for the extension.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The system-generated ID of the extension.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Description of the extension.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
     */
    readonly latestVersionNumber: pulumi.Output<number | undefined>;
    /**
     * Name of the extension.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: outputs.appconfig.ExtensionParameter;
    } | undefined>;
    /**
     * An array of key-value tags to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * The extension version number.
     */
    readonly versionNumber: pulumi.Output<number>;
    /**
     * Create a Extension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExtensionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Extension resource.
 */
export interface ExtensionArgs {
    /**
     * The actions defined in the extension.
     */
    actions: pulumi.Input<{
        [key: string]: pulumi.Input<pulumi.Input<inputs.appconfig.ExtensionActionArgs>[]>;
    }>;
    /**
     * Description of the extension.
     */
    description?: pulumi.Input<string>;
    /**
     * You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.
     */
    latestVersionNumber?: pulumi.Input<number>;
    /**
     * Name of the extension.
     */
    name?: pulumi.Input<string>;
    /**
     * The parameters accepted by the extension. You specify parameter values when you associate the extension to an AWS AppConfig resource by using the `CreateExtensionAssociation` API action. For AWS Lambda extension actions, these parameters are included in the Lambda request object.
     */
    parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.appconfig.ExtensionParameterArgs>;
    }>;
    /**
     * An array of key-value tags to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
