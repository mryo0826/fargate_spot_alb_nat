import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare class ExtensionAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ExtensionAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ExtensionAssociation;
    /**
     * Returns true if the given object is an instance of ExtensionAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ExtensionAssociation;
    /**
     * The ARN of the extension defined in the association.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The system-generated ID for the association.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The ARN of the extension defined in the association.
     */
    readonly extensionArn: pulumi.Output<string>;
    /**
     * The name, the ID, or the Amazon Resource Name (ARN) of the extension.
     */
    readonly extensionIdentifier: pulumi.Output<string | undefined>;
    /**
     * The version number of the extension. If not specified, AWS AppConfig uses the maximum version of the extension.
     */
    readonly extensionVersionNumber: pulumi.Output<number | undefined>;
    /**
     * The parameter names and values defined in the extensions. Extension parameters marked `Required` must be entered for this field.
     */
    readonly parameters: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The ARNs of applications, configuration profiles, or environments defined in the association.
     */
    readonly resourceArn: pulumi.Output<string>;
    /**
     * The ARN of an application, configuration profile, or environment.
     */
    readonly resourceIdentifier: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a ExtensionAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExtensionAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ExtensionAssociation resource.
 */
export interface ExtensionAssociationArgs {
    /**
     * The name, the ID, or the Amazon Resource Name (ARN) of the extension.
     */
    extensionIdentifier?: pulumi.Input<string>;
    /**
     * The version number of the extension. If not specified, AWS AppConfig uses the maximum version of the extension.
     */
    extensionVersionNumber?: pulumi.Input<number>;
    /**
     * The parameter names and values defined in the extensions. Extension parameters marked `Required` must be entered for this field.
     */
    parameters?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The ARN of an application, configuration profile, or environment.
     */
    resourceIdentifier?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
