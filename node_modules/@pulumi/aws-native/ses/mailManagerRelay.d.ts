import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::SES::MailManagerRelay Resource Type
 */
export declare class MailManagerRelay extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerRelay resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerRelay;
    /**
     * Returns true if the given object is an instance of MailManagerRelay.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MailManagerRelay;
    /**
     * Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
     */
    readonly authentication: pulumi.Output<outputs.ses.MailManagerRelayRelayAuthentication0Properties | outputs.ses.MailManagerRelayRelayAuthentication1Properties>;
    /**
     * The Amazon Resource Name (ARN) of the relay.
     */
    readonly relayArn: pulumi.Output<string>;
    /**
     * The unique relay identifier.
     */
    readonly relayId: pulumi.Output<string>;
    /**
     * The unique relay name.
     */
    readonly relayName: pulumi.Output<string | undefined>;
    /**
     * The destination relay server address.
     */
    readonly serverName: pulumi.Output<string>;
    /**
     * The destination relay server port.
     */
    readonly serverPort: pulumi.Output<number>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a MailManagerRelay resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailManagerRelayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MailManagerRelay resource.
 */
export interface MailManagerRelayArgs {
    /**
     * Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
     */
    authentication: pulumi.Input<inputs.ses.MailManagerRelayRelayAuthentication0PropertiesArgs | inputs.ses.MailManagerRelayRelayAuthentication1PropertiesArgs>;
    /**
     * The unique relay name.
     */
    relayName?: pulumi.Input<string>;
    /**
     * The destination relay server address.
     */
    serverName: pulumi.Input<string>;
    /**
     * The destination relay server port.
     */
    serverPort: pulumi.Input<number>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
