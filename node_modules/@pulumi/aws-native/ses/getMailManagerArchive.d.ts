import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::SES::MailManagerArchive Resource Type
 */
export declare function getMailManagerArchive(args: GetMailManagerArchiveArgs, opts?: pulumi.InvokeOptions): Promise<GetMailManagerArchiveResult>;
export interface GetMailManagerArchiveArgs {
    /**
     * The unique identifier of the archive.
     */
    archiveId: string;
}
export interface GetMailManagerArchiveResult {
    /**
     * The Amazon Resource Name (ARN) of the archive.
     */
    readonly archiveArn?: string;
    /**
     * The unique identifier of the archive.
     */
    readonly archiveId?: string;
    /**
     * A unique name for the new archive.
     */
    readonly archiveName?: string;
    /**
     * The current state of the archive:
     *
     * - `ACTIVE` – The archive is ready and available for use.
     * - `PENDING_DELETION` – The archive has been marked for deletion and will be permanently deleted in 30 days. No further modifications can be made in this state.
     */
    readonly archiveState?: enums.ses.MailManagerArchiveArchiveState;
    /**
     * The period for retaining emails in the archive before automatic deletion.
     */
    readonly retention?: outputs.ses.MailManagerArchiveArchiveRetentionProperties;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::SES::MailManagerArchive Resource Type
 */
export declare function getMailManagerArchiveOutput(args: GetMailManagerArchiveOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMailManagerArchiveResult>;
export interface GetMailManagerArchiveOutputArgs {
    /**
     * The unique identifier of the archive.
     */
    archiveId: pulumi.Input<string>;
}
