import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::SES::MailManagerIngressPoint Resource Type
 */
export declare class MailManagerIngressPoint extends pulumi.CustomResource {
    /**
     * Get an existing MailManagerIngressPoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MailManagerIngressPoint;
    /**
     * Returns true if the given object is an instance of MailManagerIngressPoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MailManagerIngressPoint;
    /**
     * The DNS A Record that identifies your ingress endpoint. Configure your DNS Mail Exchange (MX) record with this value to route emails to Mail Manager.
     */
    readonly aRecord: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the ingress endpoint resource.
     */
    readonly ingressPointArn: pulumi.Output<string>;
    /**
     * The configuration of the ingress endpoint resource.
     */
    readonly ingressPointConfiguration: pulumi.Output<outputs.ses.MailManagerIngressPointIngressPointConfiguration0Properties | outputs.ses.MailManagerIngressPointIngressPointConfiguration1Properties | undefined>;
    /**
     * The identifier of the ingress endpoint resource.
     */
    readonly ingressPointId: pulumi.Output<string>;
    /**
     * A user friendly name for an ingress endpoint resource.
     */
    readonly ingressPointName: pulumi.Output<string | undefined>;
    /**
     * The identifier of an existing rule set that you attach to an ingress endpoint resource.
     */
    readonly ruleSetId: pulumi.Output<string>;
    /**
     * The status of the ingress endpoint resource.
     */
    readonly status: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointStatus>;
    /**
     * The update status of an ingress endpoint.
     */
    readonly statusToUpdate: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointStatusToUpdate | undefined>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The identifier of an existing traffic policy that you attach to an ingress endpoint resource.
     */
    readonly trafficPolicyId: pulumi.Output<string>;
    /**
     * The type of the ingress endpoint to create.
     */
    readonly type: pulumi.Output<enums.ses.MailManagerIngressPointIngressPointType>;
    /**
     * Create a MailManagerIngressPoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailManagerIngressPointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MailManagerIngressPoint resource.
 */
export interface MailManagerIngressPointArgs {
    /**
     * The configuration of the ingress endpoint resource.
     */
    ingressPointConfiguration?: pulumi.Input<inputs.ses.MailManagerIngressPointIngressPointConfiguration0PropertiesArgs | inputs.ses.MailManagerIngressPointIngressPointConfiguration1PropertiesArgs>;
    /**
     * A user friendly name for an ingress endpoint resource.
     */
    ingressPointName?: pulumi.Input<string>;
    /**
     * The identifier of an existing rule set that you attach to an ingress endpoint resource.
     */
    ruleSetId: pulumi.Input<string>;
    /**
     * The update status of an ingress endpoint.
     */
    statusToUpdate?: pulumi.Input<enums.ses.MailManagerIngressPointIngressPointStatusToUpdate>;
    /**
     * The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The identifier of an existing traffic policy that you attach to an ingress endpoint resource.
     */
    trafficPolicyId: pulumi.Input<string>;
    /**
     * The type of the ingress endpoint to create.
     */
    type: pulumi.Input<enums.ses.MailManagerIngressPointIngressPointType>;
}
