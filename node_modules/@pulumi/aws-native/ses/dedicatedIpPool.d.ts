import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::SES::DedicatedIpPool
 */
export declare class DedicatedIpPool extends pulumi.CustomResource {
    /**
     * Get an existing DedicatedIpPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DedicatedIpPool;
    /**
     * Returns true if the given object is an instance of DedicatedIpPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DedicatedIpPool;
    /**
     * The name of the dedicated IP pool.
     */
    readonly poolName: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the dedicated IP pool is managed or not. The default value is STANDARD.
     */
    readonly scalingMode: pulumi.Output<string | undefined>;
    /**
     * Create a DedicatedIpPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DedicatedIpPoolArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DedicatedIpPool resource.
 */
export interface DedicatedIpPoolArgs {
    /**
     * The name of the dedicated IP pool.
     */
    poolName?: pulumi.Input<string>;
    /**
     * Specifies whether the dedicated IP pool is managed or not. The default value is STANDARD.
     */
    scalingMode?: pulumi.Input<string>;
}
