import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for Identity Center (SSO) Application
 */
export declare function getApplication(args: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult>;
export interface GetApplicationArgs {
    /**
     * The Application ARN that is returned upon creation of the Identity Center (SSO) Application
     */
    applicationArn: string;
}
export interface GetApplicationResult {
    /**
     * The Application ARN that is returned upon creation of the Identity Center (SSO) Application
     */
    readonly applicationArn?: string;
    /**
     * The description information for the Identity Center (SSO) Application
     */
    readonly description?: string;
    /**
     * The name you want to assign to this Identity Center (SSO) Application
     */
    readonly name?: string;
    /**
     * A structure that describes the options for the portal associated with an application
     */
    readonly portalOptions?: outputs.sso.ApplicationPortalOptionsConfiguration;
    /**
     * Specifies whether the application is enabled or disabled
     */
    readonly status?: enums.sso.ApplicationStatus;
    /**
     * Specifies tags to be attached to the application
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for Identity Center (SSO) Application
 */
export declare function getApplicationOutput(args: GetApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationResult>;
export interface GetApplicationOutputArgs {
    /**
     * The Application ARN that is returned upon creation of the Identity Center (SSO) Application
     */
    applicationArn: pulumi.Input<string>;
}
