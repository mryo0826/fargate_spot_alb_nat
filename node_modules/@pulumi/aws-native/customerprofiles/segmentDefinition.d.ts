import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A segment definition resource of Amazon Connect Customer Profiles
 */
export declare class SegmentDefinition extends pulumi.CustomResource {
    /**
     * Get an existing SegmentDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SegmentDefinition;
    /**
     * Returns true if the given object is an instance of SegmentDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SegmentDefinition;
    /**
     * The time of this segment definition got created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the segment definition.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the segment definition.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The unique name of the domain.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the segment definition.
     */
    readonly segmentDefinitionArn: pulumi.Output<string>;
    /**
     * The unique name of the segment definition.
     */
    readonly segmentDefinitionName: pulumi.Output<string>;
    /**
     * An array that defines the set of segment criteria to evaluate when handling segment groups for the segment.
     */
    readonly segmentGroups: pulumi.Output<outputs.customerprofiles.SegmentDefinitionSegmentGroup>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a SegmentDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SegmentDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SegmentDefinition resource.
 */
export interface SegmentDefinitionArgs {
    /**
     * The description of the segment definition.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the segment definition.
     */
    displayName: pulumi.Input<string>;
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The unique name of the segment definition.
     */
    segmentDefinitionName?: pulumi.Input<string>;
    /**
     * An array that defines the set of segment criteria to evaluate when handling segment groups for the segment.
     */
    segmentGroups: pulumi.Input<inputs.customerprofiles.SegmentDefinitionSegmentGroupArgs>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
