import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A calculated attribute definition for Customer Profiles
 */
export declare class CalculatedAttributeDefinition extends pulumi.CustomResource {
    /**
     * Get an existing CalculatedAttributeDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CalculatedAttributeDefinition;
    /**
     * Returns true if the given object is an instance of CalculatedAttributeDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CalculatedAttributeDefinition;
    /**
     * Mathematical expression and a list of attribute items specified in that expression.
     */
    readonly attributeDetails: pulumi.Output<outputs.customerprofiles.CalculatedAttributeDefinitionAttributeDetails>;
    /**
     * The name of an attribute defined in a profile object type.
     */
    readonly calculatedAttributeName: pulumi.Output<string>;
    /**
     * The conditions including range, object count, and threshold for the calculated attribute.
     */
    readonly conditions: pulumi.Output<outputs.customerprofiles.CalculatedAttributeDefinitionConditions | undefined>;
    /**
     * The timestamp of when the calculated attribute definition was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The description of the calculated attribute.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the calculated attribute.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The unique name of the domain.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The timestamp of when the calculated attribute definition was most recently edited.
     */
    readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The aggregation operation to perform for the calculated attribute.
     */
    readonly statistic: pulumi.Output<enums.customerprofiles.CalculatedAttributeDefinitionStatistic>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a CalculatedAttributeDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CalculatedAttributeDefinitionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CalculatedAttributeDefinition resource.
 */
export interface CalculatedAttributeDefinitionArgs {
    /**
     * Mathematical expression and a list of attribute items specified in that expression.
     */
    attributeDetails: pulumi.Input<inputs.customerprofiles.CalculatedAttributeDefinitionAttributeDetailsArgs>;
    /**
     * The name of an attribute defined in a profile object type.
     */
    calculatedAttributeName: pulumi.Input<string>;
    /**
     * The conditions including range, object count, and threshold for the calculated attribute.
     */
    conditions?: pulumi.Input<inputs.customerprofiles.CalculatedAttributeDefinitionConditionsArgs>;
    /**
     * The description of the calculated attribute.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the calculated attribute.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The aggregation operation to perform for the calculated attribute.
     */
    statistic: pulumi.Input<enums.customerprofiles.CalculatedAttributeDefinitionStatistic>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
