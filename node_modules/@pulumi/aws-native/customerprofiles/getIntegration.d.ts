import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * The resource schema for creating an Amazon Connect Customer Profiles Integration.
 */
export declare function getIntegration(args: GetIntegrationArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationResult>;
export interface GetIntegrationArgs {
    /**
     * The unique name of the domain.
     */
    domainName: string;
    /**
     * The URI of the S3 bucket or any other type of data source.
     */
    uri: string;
}
export interface GetIntegrationResult {
    /**
     * The time of this integration got created
     */
    readonly createdAt?: string;
    /**
     * A list of unique names for active event triggers associated with the integration.
     */
    readonly eventTriggerNames?: string[];
    /**
     * The time of this integration got last updated at
     */
    readonly lastUpdatedAt?: string;
    /**
     * The name of the ObjectType defined for the 3rd party data in Profile Service
     */
    readonly objectTypeName?: string;
    /**
     * The mapping between 3rd party event types and ObjectType names
     */
    readonly objectTypeNames?: outputs.customerprofiles.IntegrationObjectTypeMapping[];
    /**
     * The tags (keys and values) associated with the integration
     */
    readonly tags?: outputs.Tag[];
}
/**
 * The resource schema for creating an Amazon Connect Customer Profiles Integration.
 */
export declare function getIntegrationOutput(args: GetIntegrationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIntegrationResult>;
export interface GetIntegrationOutputArgs {
    /**
     * The unique name of the domain.
     */
    domainName: pulumi.Input<string>;
    /**
     * The URI of the S3 bucket or any other type of data source.
     */
    uri: pulumi.Input<string>;
}
