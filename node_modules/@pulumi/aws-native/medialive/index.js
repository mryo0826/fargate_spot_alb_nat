"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignalMap = exports.SdiSource = exports.Network = exports.Multiplexprogram = exports.Multiplex = exports.getSignalMapOutput = exports.getSignalMap = exports.getSdiSourceOutput = exports.getSdiSource = exports.getNetworkOutput = exports.getNetwork = exports.getMultiplexprogramOutput = exports.getMultiplexprogram = exports.getMultiplexOutput = exports.getMultiplex = exports.getEventBridgeRuleTemplateGroupOutput = exports.getEventBridgeRuleTemplateGroup = exports.getEventBridgeRuleTemplateOutput = exports.getEventBridgeRuleTemplate = exports.getClusterOutput = exports.getCluster = exports.getCloudWatchAlarmTemplateGroupOutput = exports.getCloudWatchAlarmTemplateGroup = exports.getCloudWatchAlarmTemplateOutput = exports.getCloudWatchAlarmTemplate = exports.getChannelPlacementGroupOutput = exports.getChannelPlacementGroup = exports.EventBridgeRuleTemplateGroup = exports.EventBridgeRuleTemplate = exports.Cluster = exports.CloudWatchAlarmTemplateGroup = exports.CloudWatchAlarmTemplate = exports.ChannelPlacementGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ChannelPlacementGroup = null;
utilities.lazyLoad(exports, ["ChannelPlacementGroup"], () => require("./channelPlacementGroup"));
exports.CloudWatchAlarmTemplate = null;
utilities.lazyLoad(exports, ["CloudWatchAlarmTemplate"], () => require("./cloudWatchAlarmTemplate"));
exports.CloudWatchAlarmTemplateGroup = null;
utilities.lazyLoad(exports, ["CloudWatchAlarmTemplateGroup"], () => require("./cloudWatchAlarmTemplateGroup"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.EventBridgeRuleTemplate = null;
utilities.lazyLoad(exports, ["EventBridgeRuleTemplate"], () => require("./eventBridgeRuleTemplate"));
exports.EventBridgeRuleTemplateGroup = null;
utilities.lazyLoad(exports, ["EventBridgeRuleTemplateGroup"], () => require("./eventBridgeRuleTemplateGroup"));
exports.getChannelPlacementGroup = null;
exports.getChannelPlacementGroupOutput = null;
utilities.lazyLoad(exports, ["getChannelPlacementGroup", "getChannelPlacementGroupOutput"], () => require("./getChannelPlacementGroup"));
exports.getCloudWatchAlarmTemplate = null;
exports.getCloudWatchAlarmTemplateOutput = null;
utilities.lazyLoad(exports, ["getCloudWatchAlarmTemplate", "getCloudWatchAlarmTemplateOutput"], () => require("./getCloudWatchAlarmTemplate"));
exports.getCloudWatchAlarmTemplateGroup = null;
exports.getCloudWatchAlarmTemplateGroupOutput = null;
utilities.lazyLoad(exports, ["getCloudWatchAlarmTemplateGroup", "getCloudWatchAlarmTemplateGroupOutput"], () => require("./getCloudWatchAlarmTemplateGroup"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getEventBridgeRuleTemplate = null;
exports.getEventBridgeRuleTemplateOutput = null;
utilities.lazyLoad(exports, ["getEventBridgeRuleTemplate", "getEventBridgeRuleTemplateOutput"], () => require("./getEventBridgeRuleTemplate"));
exports.getEventBridgeRuleTemplateGroup = null;
exports.getEventBridgeRuleTemplateGroupOutput = null;
utilities.lazyLoad(exports, ["getEventBridgeRuleTemplateGroup", "getEventBridgeRuleTemplateGroupOutput"], () => require("./getEventBridgeRuleTemplateGroup"));
exports.getMultiplex = null;
exports.getMultiplexOutput = null;
utilities.lazyLoad(exports, ["getMultiplex", "getMultiplexOutput"], () => require("./getMultiplex"));
exports.getMultiplexprogram = null;
exports.getMultiplexprogramOutput = null;
utilities.lazyLoad(exports, ["getMultiplexprogram", "getMultiplexprogramOutput"], () => require("./getMultiplexprogram"));
exports.getNetwork = null;
exports.getNetworkOutput = null;
utilities.lazyLoad(exports, ["getNetwork", "getNetworkOutput"], () => require("./getNetwork"));
exports.getSdiSource = null;
exports.getSdiSourceOutput = null;
utilities.lazyLoad(exports, ["getSdiSource", "getSdiSourceOutput"], () => require("./getSdiSource"));
exports.getSignalMap = null;
exports.getSignalMapOutput = null;
utilities.lazyLoad(exports, ["getSignalMap", "getSignalMapOutput"], () => require("./getSignalMap"));
exports.Multiplex = null;
utilities.lazyLoad(exports, ["Multiplex"], () => require("./multiplex"));
exports.Multiplexprogram = null;
utilities.lazyLoad(exports, ["Multiplexprogram"], () => require("./multiplexprogram"));
exports.Network = null;
utilities.lazyLoad(exports, ["Network"], () => require("./network"));
exports.SdiSource = null;
utilities.lazyLoad(exports, ["SdiSource"], () => require("./sdiSource"));
exports.SignalMap = null;
utilities.lazyLoad(exports, ["SignalMap"], () => require("./signalMap"));
// Export enums:
__exportStar(require("../types/enums/medialive"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:medialive:ChannelPlacementGroup":
                return new exports.ChannelPlacementGroup(name, undefined, { urn });
            case "aws-native:medialive:CloudWatchAlarmTemplate":
                return new exports.CloudWatchAlarmTemplate(name, undefined, { urn });
            case "aws-native:medialive:CloudWatchAlarmTemplateGroup":
                return new exports.CloudWatchAlarmTemplateGroup(name, undefined, { urn });
            case "aws-native:medialive:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws-native:medialive:EventBridgeRuleTemplate":
                return new exports.EventBridgeRuleTemplate(name, undefined, { urn });
            case "aws-native:medialive:EventBridgeRuleTemplateGroup":
                return new exports.EventBridgeRuleTemplateGroup(name, undefined, { urn });
            case "aws-native:medialive:Multiplex":
                return new exports.Multiplex(name, undefined, { urn });
            case "aws-native:medialive:Multiplexprogram":
                return new exports.Multiplexprogram(name, undefined, { urn });
            case "aws-native:medialive:Network":
                return new exports.Network(name, undefined, { urn });
            case "aws-native:medialive:SdiSource":
                return new exports.SdiSource(name, undefined, { urn });
            case "aws-native:medialive:SignalMap":
                return new exports.SignalMap(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "medialive", _module);
//# sourceMappingURL=index.js.map