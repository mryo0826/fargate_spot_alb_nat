import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::MediaLive::Network.
 */
export declare class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Network;
    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Network;
    /**
     * The ARN of the Network.
     */
    readonly arn: pulumi.Output<string>;
    readonly associatedClusterIds: pulumi.Output<string[]>;
    /**
     * The unique ID of the Network.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The list of IP address cidr pools for the network
     */
    readonly ipPools: pulumi.Output<outputs.medialive.NetworkIpPool[]>;
    /**
     * The user-specified name of the Network to be created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The routes for the network
     */
    readonly routes: pulumi.Output<outputs.medialive.NetworkRoute[] | undefined>;
    /**
     * The current state of the Network.
     */
    readonly state: pulumi.Output<enums.medialive.NetworkState>;
    /**
     * A collection of key-value pairs.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * The list of IP address cidr pools for the network
     */
    ipPools: pulumi.Input<pulumi.Input<inputs.medialive.NetworkIpPoolArgs>[]>;
    /**
     * The user-specified name of the Network to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The routes for the network
     */
    routes?: pulumi.Input<pulumi.Input<inputs.medialive.NetworkRouteArgs>[]>;
    /**
     * A collection of key-value pairs.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
