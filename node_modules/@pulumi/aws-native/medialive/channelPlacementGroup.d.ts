import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::MediaLive::ChannelPlacementGroup Resource Type
 */
export declare class ChannelPlacementGroup extends pulumi.CustomResource {
    /**
     * Get an existing ChannelPlacementGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ChannelPlacementGroup;
    /**
     * Returns true if the given object is an instance of ChannelPlacementGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ChannelPlacementGroup;
    /**
     * The ARN of the channel placement group.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Unique internal identifier.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * List of channel IDs added to the channel placement group.
     */
    readonly channels: pulumi.Output<string[]>;
    /**
     * The ID of the cluster the node is on.
     */
    readonly clusterId: pulumi.Output<string | undefined>;
    /**
     * The name of the channel placement group.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * List of nodes added to the channel placement group
     */
    readonly nodes: pulumi.Output<string[] | undefined>;
    readonly state: pulumi.Output<enums.medialive.ChannelPlacementGroupState>;
    /**
     * A collection of key-value pairs.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ChannelPlacementGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ChannelPlacementGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ChannelPlacementGroup resource.
 */
export interface ChannelPlacementGroupArgs {
    /**
     * The ID of the cluster the node is on.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The name of the channel placement group.
     */
    name?: pulumi.Input<string>;
    /**
     * List of nodes added to the channel placement group
     */
    nodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A collection of key-value pairs.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
