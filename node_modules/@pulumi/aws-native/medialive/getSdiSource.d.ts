import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::MediaLive::SdiSource Resource Type
 */
export declare function getSdiSource(args: GetSdiSourceArgs, opts?: pulumi.InvokeOptions): Promise<GetSdiSourceResult>;
export interface GetSdiSourceArgs {
    /**
     * The unique identifier of the SdiSource.
     */
    id: string;
}
export interface GetSdiSourceResult {
    /**
     * The unique arn of the SdiSource.
     */
    readonly arn?: string;
    /**
     * The unique identifier of the SdiSource.
     */
    readonly id?: string;
    /**
     * The list of inputs currently using this SDI source.
     */
    readonly inputs?: string[];
    readonly mode?: enums.medialive.SdiSourceMode;
    /**
     * The name of the SdiSource.
     */
    readonly name?: string;
    readonly state?: enums.medialive.SdiSourceState;
    /**
     * A collection of key-value pairs.
     */
    readonly tags?: outputs.Tag[];
    readonly type?: enums.medialive.SdiSourceType;
}
/**
 * Definition of AWS::MediaLive::SdiSource Resource Type
 */
export declare function getSdiSourceOutput(args: GetSdiSourceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSdiSourceResult>;
export interface GetSdiSourceOutputArgs {
    /**
     * The unique identifier of the SdiSource.
     */
    id: pulumi.Input<string>;
}
