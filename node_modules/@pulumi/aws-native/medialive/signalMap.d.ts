import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::MediaLive::SignalMap Resource Type
 */
export declare class SignalMap extends pulumi.CustomResource {
    /**
     * Get an existing SignalMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SignalMap;
    /**
     * Returns true if the given object is an instance of SignalMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SignalMap;
    /**
     * A signal map's ARN (Amazon Resource Name)
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A signal map's id.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * A cloudwatch alarm template group's identifier. Can be either be its id or current name.
     */
    readonly cloudWatchAlarmTemplateGroupIdentifiers: pulumi.Output<string[] | undefined>;
    /**
     * An alarm template group's id.
     */
    readonly cloudWatchAlarmTemplateGroupIds: pulumi.Output<string[]>;
    /**
     * The date and time of resource creation.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * A resource's optional description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A top-level supported AWS resource ARN to discovery a signal map from.
     */
    readonly discoveryEntryPointArn: pulumi.Output<string>;
    /**
     * Error message associated with a failed creation or failed update attempt of a signal map.
     */
    readonly errorMessage: pulumi.Output<string>;
    /**
     * An eventbridge rule template group's identifier. Can be either be its id or current name.
     */
    readonly eventBridgeRuleTemplateGroupIdentifiers: pulumi.Output<string[] | undefined>;
    /**
     * An eventbridge rule template group's id.
     */
    readonly eventBridgeRuleTemplateGroupIds: pulumi.Output<string[]>;
    readonly failedMediaResourceMap: pulumi.Output<{
        [key: string]: outputs.medialive.SignalMapMediaResource;
    }>;
    /**
     * If true, will force a rediscovery of a signal map if an unchanged discoveryEntryPointArn is provided.
     */
    readonly forceRediscovery: pulumi.Output<boolean | undefined>;
    readonly identifier: pulumi.Output<string>;
    /**
     * The date and time of latest discovery.
     */
    readonly lastDiscoveredAt: pulumi.Output<string>;
    readonly lastSuccessfulMonitorDeployment: pulumi.Output<outputs.medialive.SignalMapSuccessfulMonitorDeployment>;
    readonly mediaResourceMap: pulumi.Output<{
        [key: string]: outputs.medialive.SignalMapMediaResource;
    }>;
    /**
     * The date and time of latest resource modification.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * If true, there are pending monitor changes for this signal map that can be deployed.
     */
    readonly monitorChangesPendingDeployment: pulumi.Output<boolean>;
    readonly monitorDeployment: pulumi.Output<outputs.medialive.SignalMapMonitorDeployment>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A signal map's current status, which is dependent on its lifecycle actions or associated jobs.
     */
    readonly status: pulumi.Output<enums.medialive.SignalMapStatus>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a SignalMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SignalMapArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SignalMap resource.
 */
export interface SignalMapArgs {
    /**
     * A cloudwatch alarm template group's identifier. Can be either be its id or current name.
     */
    cloudWatchAlarmTemplateGroupIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A resource's optional description.
     */
    description?: pulumi.Input<string>;
    /**
     * A top-level supported AWS resource ARN to discovery a signal map from.
     */
    discoveryEntryPointArn: pulumi.Input<string>;
    /**
     * An eventbridge rule template group's identifier. Can be either be its id or current name.
     */
    eventBridgeRuleTemplateGroupIdentifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, will force a rediscovery of a signal map if an unchanged discoveryEntryPointArn is provided.
     */
    forceRediscovery?: pulumi.Input<boolean>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    name?: pulumi.Input<string>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
