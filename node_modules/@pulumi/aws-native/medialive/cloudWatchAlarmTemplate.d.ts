import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Definition of AWS::MediaLive::CloudWatchAlarmTemplate Resource Type
 */
export declare class CloudWatchAlarmTemplate extends pulumi.CustomResource {
    /**
     * Get an existing CloudWatchAlarmTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CloudWatchAlarmTemplate;
    /**
     * Returns true if the given object is an instance of CloudWatchAlarmTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CloudWatchAlarmTemplate;
    /**
     * A cloudwatch alarm template's ARN (Amazon Resource Name)
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A cloudwatch alarm template's id. AWS provided templates have ids that start with `aws-`
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The comparison operator used to compare the specified statistic and the threshold.
     */
    readonly comparisonOperator: pulumi.Output<enums.medialive.CloudWatchAlarmTemplateComparisonOperator>;
    /**
     * The date and time of resource creation.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The number of datapoints within the evaluation period that must be breaching to trigger the alarm.
     */
    readonly datapointsToAlarm: pulumi.Output<number | undefined>;
    /**
     * A resource's optional description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    readonly evaluationPeriods: pulumi.Output<number>;
    /**
     * A cloudwatch alarm template group's id. AWS provided template groups have ids that start with `aws-`
     */
    readonly groupId: pulumi.Output<string>;
    /**
     * A cloudwatch alarm template group's identifier. Can be either be its id or current name.
     */
    readonly groupIdentifier: pulumi.Output<string>;
    readonly identifier: pulumi.Output<string>;
    /**
     * The name of the metric associated with the alarm. Must be compatible with targetResourceType.
     */
    readonly metricName: pulumi.Output<string>;
    /**
     * The date and time of latest resource modification.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The period, in seconds, over which the specified statistic is applied.
     */
    readonly period: pulumi.Output<number>;
    /**
     * The statistic to apply to the alarm's metric data.
     */
    readonly statistic: pulumi.Output<enums.medialive.CloudWatchAlarmTemplateStatistic>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The resource type this template should dynamically generate CloudWatch metric alarms for.
     */
    readonly targetResourceType: pulumi.Output<enums.medialive.CloudWatchAlarmTemplateTargetResourceType>;
    /**
     * The threshold value to compare with the specified statistic.
     */
    readonly threshold: pulumi.Output<number>;
    /**
     * Specifies how missing data points are treated when evaluating the alarm's condition.
     */
    readonly treatMissingData: pulumi.Output<enums.medialive.CloudWatchAlarmTemplateTreatMissingData>;
    /**
     * Create a CloudWatchAlarmTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudWatchAlarmTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CloudWatchAlarmTemplate resource.
 */
export interface CloudWatchAlarmTemplateArgs {
    /**
     * The comparison operator used to compare the specified statistic and the threshold.
     */
    comparisonOperator: pulumi.Input<enums.medialive.CloudWatchAlarmTemplateComparisonOperator>;
    /**
     * The number of datapoints within the evaluation period that must be breaching to trigger the alarm.
     */
    datapointsToAlarm?: pulumi.Input<number>;
    /**
     * A resource's optional description.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of periods over which data is compared to the specified threshold.
     */
    evaluationPeriods: pulumi.Input<number>;
    /**
     * A cloudwatch alarm template group's identifier. Can be either be its id or current name.
     */
    groupIdentifier: pulumi.Input<string>;
    /**
     * The name of the metric associated with the alarm. Must be compatible with targetResourceType.
     */
    metricName: pulumi.Input<string>;
    /**
     * A resource's name. Names must be unique within the scope of a resource type in a specific region.
     */
    name?: pulumi.Input<string>;
    /**
     * The period, in seconds, over which the specified statistic is applied.
     */
    period: pulumi.Input<number>;
    /**
     * The statistic to apply to the alarm's metric data.
     */
    statistic: pulumi.Input<enums.medialive.CloudWatchAlarmTemplateStatistic>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The resource type this template should dynamically generate CloudWatch metric alarms for.
     */
    targetResourceType: pulumi.Input<enums.medialive.CloudWatchAlarmTemplateTargetResourceType>;
    /**
     * The threshold value to compare with the specified statistic.
     */
    threshold: pulumi.Input<number>;
    /**
     * Specifies how missing data points are treated when evaluating the alarm's condition.
     */
    treatMissingData: pulumi.Input<enums.medialive.CloudWatchAlarmTemplateTreatMissingData>;
}
