import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents a Connector that allows certificate issuance through Simple Certificate Enrollment Protocol (SCEP)
 */
export declare class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector;
    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connector;
    /**
     * The Amazon Resource Name (ARN) of the certificate authority associated with the connector.
     */
    readonly certificateAuthorityArn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the connector.
     */
    readonly connectorArn: pulumi.Output<string>;
    /**
     * The connector's HTTPS public SCEP URL.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * Contains settings relevant to the mobile device management system that you chose for the connector. If you didn't configure `MobileDeviceManagement` , then the connector is for general-purpose use and this object is empty.
     */
    readonly mobileDeviceManagement: pulumi.Output<outputs.pcaconnectorscep.ConnectorMobileDeviceManagement | undefined>;
    readonly openIdConfiguration: pulumi.Output<outputs.pcaconnectorscep.ConnectorOpenIdConfiguration>;
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The connector type.
     */
    readonly type: pulumi.Output<enums.pcaconnectorscep.ConnectorType>;
    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     * The Amazon Resource Name (ARN) of the certificate authority associated with the connector.
     */
    certificateAuthorityArn: pulumi.Input<string>;
    /**
     * Contains settings relevant to the mobile device management system that you chose for the connector. If you didn't configure `MobileDeviceManagement` , then the connector is for general-purpose use and this object is empty.
     */
    mobileDeviceManagement?: pulumi.Input<inputs.pcaconnectorscep.ConnectorMobileDeviceManagementArgs>;
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
