"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Environment = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource schema for AWS::MWAA::Environment
 */
class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Environment(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["airflowConfigurationOptions"] = args ? args.airflowConfigurationOptions : undefined;
            resourceInputs["airflowVersion"] = args ? args.airflowVersion : undefined;
            resourceInputs["dagS3Path"] = args ? args.dagS3Path : undefined;
            resourceInputs["endpointManagement"] = args ? args.endpointManagement : undefined;
            resourceInputs["environmentClass"] = args ? args.environmentClass : undefined;
            resourceInputs["executionRoleArn"] = args ? args.executionRoleArn : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["loggingConfiguration"] = args ? args.loggingConfiguration : undefined;
            resourceInputs["maxWebservers"] = args ? args.maxWebservers : undefined;
            resourceInputs["maxWorkers"] = args ? args.maxWorkers : undefined;
            resourceInputs["minWebservers"] = args ? args.minWebservers : undefined;
            resourceInputs["minWorkers"] = args ? args.minWorkers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfiguration"] = args ? args.networkConfiguration : undefined;
            resourceInputs["pluginsS3ObjectVersion"] = args ? args.pluginsS3ObjectVersion : undefined;
            resourceInputs["pluginsS3Path"] = args ? args.pluginsS3Path : undefined;
            resourceInputs["requirementsS3ObjectVersion"] = args ? args.requirementsS3ObjectVersion : undefined;
            resourceInputs["requirementsS3Path"] = args ? args.requirementsS3Path : undefined;
            resourceInputs["schedulers"] = args ? args.schedulers : undefined;
            resourceInputs["sourceBucketArn"] = args ? args.sourceBucketArn : undefined;
            resourceInputs["startupScriptS3ObjectVersion"] = args ? args.startupScriptS3ObjectVersion : undefined;
            resourceInputs["startupScriptS3Path"] = args ? args.startupScriptS3Path : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["webserverAccessMode"] = args ? args.webserverAccessMode : undefined;
            resourceInputs["weeklyMaintenanceWindowStart"] = args ? args.weeklyMaintenanceWindowStart : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["celeryExecutorQueue"] = undefined /*out*/;
            resourceInputs["databaseVpcEndpointService"] = undefined /*out*/;
            resourceInputs["webserverUrl"] = undefined /*out*/;
            resourceInputs["webserverVpcEndpointService"] = undefined /*out*/;
        }
        else {
            resourceInputs["airflowConfigurationOptions"] = undefined /*out*/;
            resourceInputs["airflowVersion"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["celeryExecutorQueue"] = undefined /*out*/;
            resourceInputs["dagS3Path"] = undefined /*out*/;
            resourceInputs["databaseVpcEndpointService"] = undefined /*out*/;
            resourceInputs["endpointManagement"] = undefined /*out*/;
            resourceInputs["environmentClass"] = undefined /*out*/;
            resourceInputs["executionRoleArn"] = undefined /*out*/;
            resourceInputs["kmsKey"] = undefined /*out*/;
            resourceInputs["loggingConfiguration"] = undefined /*out*/;
            resourceInputs["maxWebservers"] = undefined /*out*/;
            resourceInputs["maxWorkers"] = undefined /*out*/;
            resourceInputs["minWebservers"] = undefined /*out*/;
            resourceInputs["minWorkers"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkConfiguration"] = undefined /*out*/;
            resourceInputs["pluginsS3ObjectVersion"] = undefined /*out*/;
            resourceInputs["pluginsS3Path"] = undefined /*out*/;
            resourceInputs["requirementsS3ObjectVersion"] = undefined /*out*/;
            resourceInputs["requirementsS3Path"] = undefined /*out*/;
            resourceInputs["schedulers"] = undefined /*out*/;
            resourceInputs["sourceBucketArn"] = undefined /*out*/;
            resourceInputs["startupScriptS3ObjectVersion"] = undefined /*out*/;
            resourceInputs["startupScriptS3Path"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["webserverAccessMode"] = undefined /*out*/;
            resourceInputs["webserverUrl"] = undefined /*out*/;
            resourceInputs["webserverVpcEndpointService"] = undefined /*out*/;
            resourceInputs["weeklyMaintenanceWindowStart"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["endpointManagement", "kmsKey", "name", "networkConfiguration.subnetIds[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Environment.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Environment = Environment;
/** @internal */
Environment.__pulumiType = 'aws-native:mwaa:Environment';
//# sourceMappingURL=environment.js.map