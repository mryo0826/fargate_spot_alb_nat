import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::ElasticBeanstalk::Environment
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    /**
     * The name of the application that is associated with this environment.
     */
    readonly applicationName: pulumi.Output<string>;
    /**
     * If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
     */
    readonly cnamePrefix: pulumi.Output<string | undefined>;
    /**
     * Your description for this environment.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * For load-balanced, autoscaling environments, the URL to the load balancer. For single-instance environments, the IP address of the instance.
     *
     * Example load balancer URL:
     *
     * Example instance IP address:
     *
     * `192.0.2.0`
     */
    readonly endpointUrl: pulumi.Output<string>;
    /**
     * A unique name for the environment.
     */
    readonly environmentName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
     */
    readonly operationsRole: pulumi.Output<string | undefined>;
    /**
     * Key-value pairs defining configuration options for this environment, such as the instance type.
     */
    readonly optionSettings: pulumi.Output<outputs.elasticbeanstalk.EnvironmentOptionSetting[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the custom platform to use with the environment.
     */
    readonly platformArn: pulumi.Output<string | undefined>;
    /**
     * The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
     */
    readonly solutionStackName: pulumi.Output<string | undefined>;
    /**
     * Specifies the tags applied to resources in the environment.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The name of the Elastic Beanstalk configuration template to use with the environment.
     */
    readonly templateName: pulumi.Output<string | undefined>;
    /**
     * Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
     */
    readonly tier: pulumi.Output<outputs.elasticbeanstalk.EnvironmentTier | undefined>;
    /**
     * The name of the application version to deploy.
     */
    readonly versionLabel: pulumi.Output<string | undefined>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * The name of the application that is associated with this environment.
     */
    applicationName: pulumi.Input<string>;
    /**
     * If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
     */
    cnamePrefix?: pulumi.Input<string>;
    /**
     * Your description for this environment.
     */
    description?: pulumi.Input<string>;
    /**
     * A unique name for the environment.
     */
    environmentName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
     */
    operationsRole?: pulumi.Input<string>;
    /**
     * Key-value pairs defining configuration options for this environment, such as the instance type.
     */
    optionSettings?: pulumi.Input<pulumi.Input<inputs.elasticbeanstalk.EnvironmentOptionSettingArgs>[]>;
    /**
     * The Amazon Resource Name (ARN) of the custom platform to use with the environment.
     */
    platformArn?: pulumi.Input<string>;
    /**
     * The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
     */
    solutionStackName?: pulumi.Input<string>;
    /**
     * Specifies the tags applied to resources in the environment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The name of the Elastic Beanstalk configuration template to use with the environment.
     */
    templateName?: pulumi.Input<string>;
    /**
     * Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
     */
    tier?: pulumi.Input<inputs.elasticbeanstalk.EnvironmentTierArgs>;
    /**
     * The name of the application version to deploy.
     */
    versionLabel?: pulumi.Input<string>;
}
