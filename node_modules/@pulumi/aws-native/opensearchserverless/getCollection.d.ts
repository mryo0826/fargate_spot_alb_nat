import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Amazon OpenSearchServerless collection resource
 */
export declare function getCollection(args: GetCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetCollectionResult>;
export interface GetCollectionArgs {
    /**
     * The identifier of the collection
     */
    id: string;
}
export interface GetCollectionResult {
    /**
     * The Amazon Resource Name (ARN) of the collection.
     */
    readonly arn?: string;
    /**
     * The endpoint for the collection.
     */
    readonly collectionEndpoint?: string;
    /**
     * The OpenSearch Dashboards endpoint for the collection.
     */
    readonly dashboardEndpoint?: string;
    /**
     * The description of the collection
     */
    readonly description?: string;
    /**
     * The identifier of the collection
     */
    readonly id?: string;
    /**
     * Indicates whether to use standby replicas for the collection. You can't update this property after the collection is already created. If you attempt to modify this property, the collection continues to use the original value.
     */
    readonly standbyReplicas?: enums.opensearchserverless.CollectionStandbyReplicas;
}
/**
 * Amazon OpenSearchServerless collection resource
 */
export declare function getCollectionOutput(args: GetCollectionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCollectionResult>;
export interface GetCollectionOutputArgs {
    /**
     * The identifier of the collection
     */
    id: pulumi.Input<string>;
}
