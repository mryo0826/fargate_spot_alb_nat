import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Amazon OpenSearchServerless security config resource
 */
export declare function getSecurityConfig(args: GetSecurityConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityConfigResult>;
export interface GetSecurityConfigArgs {
    /**
     * The identifier of the security config
     */
    id: string;
}
export interface GetSecurityConfigResult {
    /**
     * Security config description
     */
    readonly description?: string;
    readonly iamIdentityCenterOptions?: outputs.opensearchserverless.SecurityConfigIamIdentityCenterConfigOptions;
    /**
     * The identifier of the security config
     */
    readonly id?: string;
    /**
     * SAML options for the security configuration in the form of a key-value map.
     */
    readonly samlOptions?: outputs.opensearchserverless.SecurityConfigSamlConfigOptions;
}
/**
 * Amazon OpenSearchServerless security config resource
 */
export declare function getSecurityConfigOutput(args: GetSecurityConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityConfigResult>;
export interface GetSecurityConfigOutputArgs {
    /**
     * The identifier of the security config
     */
    id: pulumi.Input<string>;
}
