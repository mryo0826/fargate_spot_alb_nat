import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Amazon OpenSearchServerless security policy resource
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testSecurityPolicy = new aws_native.opensearchserverless.SecurityPolicy("testSecurityPolicy", {
 *     name: "logs-encryption-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Encryption,
 *     description: "Encryption policy for test collections",
 *     policy: "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}],\"AWSOwnedKey\":true}",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testSecurityPolicy = new aws_native.opensearchserverless.SecurityPolicy("testSecurityPolicy", {
 *     name: "logs-encryption-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Encryption,
 *     description: "Encryption policy for test collections",
 *     policy: "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}],\"AWSOwnedKey\":true}",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const securityPolicy = new aws_native.opensearchserverless.SecurityPolicy("securityPolicy", {
 *     name: "logs-network-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Network,
 *     description: "Network policy for test collections",
 *     policy: "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}, {\"ResourceType\":\"dashboard\",\"Resource\":[\"collection/logs*\"]}],\"AllowFromPublic\":true}]",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const securityPolicy = new aws_native.opensearchserverless.SecurityPolicy("securityPolicy", {
 *     name: "logs-network-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Network,
 *     description: "Network policy for test collections",
 *     policy: "[{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/logs*\"]}, {\"ResourceType\":\"dashboard\",\"Resource\":[\"collection/logs*\"]}],\"AllowFromPublic\":true}]",
 * });
 *
 * ```
 */
export declare class SecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityPolicy;
    /**
     * Returns true if the given object is an instance of SecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityPolicy;
    /**
     * The description of the policy
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the policy
     */
    readonly name: pulumi.Output<string>;
    /**
     * The JSON policy document that is the content for the policy
     */
    readonly policy: pulumi.Output<string>;
    /**
     * The type of security policy. Can be either `encryption` or `network` .
     */
    readonly type: pulumi.Output<enums.opensearchserverless.SecurityPolicyType>;
    /**
     * Create a SecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SecurityPolicy resource.
 */
export interface SecurityPolicyArgs {
    /**
     * The description of the policy
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the policy
     */
    name?: pulumi.Input<string>;
    /**
     * The JSON policy document that is the content for the policy
     */
    policy: pulumi.Input<string>;
    /**
     * The type of security policy. Can be either `encryption` or `network` .
     */
    type: pulumi.Input<enums.opensearchserverless.SecurityPolicyType>;
}
