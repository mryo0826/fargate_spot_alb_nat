"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collection = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Amazon OpenSearchServerless collection resource
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const encryptionPolicy = new aws_native.opensearchserverless.SecurityPolicy("encryptionPolicy", {
 *     name: "test-encryption-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Encryption,
 *     description: "Encryption policy for test collection",
 *     policy: "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/test-collection\"]}],\"AWSOwnedKey\":true}",
 * });
 * const testCollection = new aws_native.opensearchserverless.Collection("testCollection", {
 *     name: "test-collection",
 *     type: aws_native.opensearchserverless.CollectionType.Search,
 *     description: "Search collection",
 * }, {
 *     dependsOn: [encryptionPolicy],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const encryptionPolicy = new aws_native.opensearchserverless.SecurityPolicy("encryptionPolicy", {
 *     name: "test-encryption-policy",
 *     type: aws_native.opensearchserverless.SecurityPolicyType.Encryption,
 *     description: "Encryption policy for test collection",
 *     policy: "{\"Rules\":[{\"ResourceType\":\"collection\",\"Resource\":[\"collection/test-collection\"]}],\"AWSOwnedKey\":true}",
 * });
 * const testCollection = new aws_native.opensearchserverless.Collection("testCollection", {
 *     name: "test-collection",
 *     type: aws_native.opensearchserverless.CollectionType.Search,
 *     description: "Search collection",
 * }, {
 *     dependsOn: [encryptionPolicy],
 * });
 *
 * ```
 */
class Collection extends pulumi.CustomResource {
    /**
     * Get an existing Collection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Collection(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Collection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collection.__pulumiType;
    }
    /**
     * Create a Collection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["standbyReplicas"] = args ? args.standbyReplicas : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["dashboardEndpoint"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["collectionEndpoint"] = undefined /*out*/;
            resourceInputs["dashboardEndpoint"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["standbyReplicas"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name", "tags[*]", "type"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Collection.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Collection = Collection;
/** @internal */
Collection.__pulumiType = 'aws-native:opensearchserverless:Collection';
//# sourceMappingURL=collection.js.map