import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource type definition for AWS::RAM::Permission
 */
export declare class Permission extends pulumi.CustomResource {
    /**
     * Get an existing Permission resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Permission;
    /**
     * Returns true if the given object is an instance of Permission.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Permission;
    /**
     * The Amazon Resource Name (ARN) of the new permission.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Set to true to use this as the default permission.
     */
    readonly isResourceTypeDefault: pulumi.Output<boolean>;
    /**
     * The name of the permission.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The type of managed permission. This can be one of the following values:
     *
     * - *AWS_MANAGED_PERMISSION* – AWS created and manages this managed permission. You can associate it with your resource shares, but you can't modify it.
     * - *CUSTOMER_MANAGED_PERMISSION* – You, or another principal in your account created this managed permission. You can associate it with your resource shares and create new versions that have different permissions.
     */
    readonly permissionType: pulumi.Output<string>;
    /**
     * Policy template for the permission.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RAM::Permission` for more information about the expected schema for this property.
     */
    readonly policyTemplate: pulumi.Output<any>;
    /**
     * The resource type this permission can be used with.
     */
    readonly resourceType: pulumi.Output<string>;
    /**
     * Specifies a list of one or more tag key and value pairs to attach to the permission.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Version of the permission.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Permission resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PermissionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Permission resource.
 */
export interface PermissionArgs {
    /**
     * The name of the permission.
     */
    name?: pulumi.Input<string>;
    /**
     * Policy template for the permission.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::RAM::Permission` for more information about the expected schema for this property.
     */
    policyTemplate: any;
    /**
     * The resource type this permission can be used with.
     */
    resourceType: pulumi.Input<string>;
    /**
     * Specifies a list of one or more tag key and value pairs to attach to the permission.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
