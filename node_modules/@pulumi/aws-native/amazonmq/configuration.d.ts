import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::AmazonMQ::Configuration
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const configuration = new aws_native.amazonmq.Configuration("configuration", {
 *     data: Buffer.from(`<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 * <broker xmlns="http://activemq.apache.org/schema/core" start="false">
 *   <destinationPolicy>
 *     <policyMap>
 *       <policyEntries>
 *         <policyEntry topic=">">
 *           <pendingMessageLimitStrategy>
 *             <constantPendingMessageLimitStrategy limit="3000"/>
 *           </pendingMessageLimitStrategy>
 *         </policyEntry>
 *       </policyEntries>
 *     </policyMap>
 *   </destinationPolicy>
 *   <plugins>
 *   </plugins>
 * </broker>
 * `).toString("base64"),
 *     engineType: "ACTIVEMQ",
 *     engineVersion: "5.15.0",
 *     name: "my-configuration-1",
 * });
 *
 * ```
 */
export declare class Configuration extends pulumi.CustomResource {
    /**
     * Get an existing Configuration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Configuration;
    /**
     * Returns true if the given object is an instance of Configuration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Configuration;
    /**
     * The Amazon Resource Name (ARN) of the Amazon MQ configuration.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The authentication strategy associated with the configuration. The default is SIMPLE.
     */
    readonly authenticationStrategy: pulumi.Output<string | undefined>;
    /**
     * The ID of the Amazon MQ configuration.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The base64-encoded XML configuration.
     */
    readonly data: pulumi.Output<string | undefined>;
    /**
     * The description of the configuration.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The type of broker engine. Note: Currently, Amazon MQ only supports ACTIVEMQ for creating and editing broker configurations.
     */
    readonly engineType: pulumi.Output<string>;
    /**
     * The version of the broker engine.
     */
    readonly engineVersion: pulumi.Output<string | undefined>;
    /**
     * The name of the configuration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The revision number of the configuration.
     */
    readonly revision: pulumi.Output<string>;
    /**
     * Create tags when creating the configuration.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Configuration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Configuration resource.
 */
export interface ConfigurationArgs {
    /**
     * The authentication strategy associated with the configuration. The default is SIMPLE.
     */
    authenticationStrategy?: pulumi.Input<string>;
    /**
     * The base64-encoded XML configuration.
     */
    data?: pulumi.Input<string>;
    /**
     * The description of the configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of broker engine. Note: Currently, Amazon MQ only supports ACTIVEMQ for creating and editing broker configurations.
     */
    engineType: pulumi.Input<string>;
    /**
     * The version of the broker engine.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * The name of the configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * Create tags when creating the configuration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
