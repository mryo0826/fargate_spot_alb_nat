import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::AppSync::SourceApiAssociation
 */
export declare class SourceApiAssociation extends pulumi.CustomResource {
    /**
     * Get an existing SourceApiAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SourceApiAssociation;
    /**
     * Returns true if the given object is an instance of SourceApiAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SourceApiAssociation;
    /**
     * ARN of the SourceApiAssociation.
     */
    readonly associationArn: pulumi.Output<string>;
    /**
     * Id of the SourceApiAssociation.
     */
    readonly associationId: pulumi.Output<string>;
    /**
     * Description of the SourceApiAssociation.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Date of last schema successful merge.
     */
    readonly lastSuccessfulMergeDate: pulumi.Output<string>;
    /**
     * ARN of the Merged API in the association.
     */
    readonly mergedApiArn: pulumi.Output<string>;
    /**
     * GraphQLApiId of the Merged API in the association.
     */
    readonly mergedApiId: pulumi.Output<string>;
    /**
     * Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    readonly mergedApiIdentifier: pulumi.Output<string | undefined>;
    /**
     * ARN of the source API in the association.
     */
    readonly sourceApiArn: pulumi.Output<string>;
    /**
     * Customized configuration for SourceApiAssociation.
     */
    readonly sourceApiAssociationConfig: pulumi.Output<outputs.appsync.SourceApiAssociationConfig | undefined>;
    /**
     * Current status of SourceApiAssociation.
     */
    readonly sourceApiAssociationStatus: pulumi.Output<enums.appsync.SourceApiAssociationStatus>;
    /**
     * Current SourceApiAssociation status details.
     */
    readonly sourceApiAssociationStatusDetail: pulumi.Output<string>;
    /**
     * GraphQLApiId of the source API in the association.
     */
    readonly sourceApiId: pulumi.Output<string>;
    /**
     * Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    readonly sourceApiIdentifier: pulumi.Output<string | undefined>;
    /**
     * Create a SourceApiAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SourceApiAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SourceApiAssociation resource.
 */
export interface SourceApiAssociationArgs {
    /**
     * Description of the SourceApiAssociation.
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the Merged GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    mergedApiIdentifier?: pulumi.Input<string>;
    /**
     * Customized configuration for SourceApiAssociation.
     */
    sourceApiAssociationConfig?: pulumi.Input<inputs.appsync.SourceApiAssociationConfigArgs>;
    /**
     * Identifier of the Source GraphQLApi to associate. It could be either GraphQLApi ApiId or ARN
     */
    sourceApiIdentifier?: pulumi.Input<string>;
}
