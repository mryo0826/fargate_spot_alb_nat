import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AppSync ChannelNamespace
 */
export declare class ChannelNamespace extends pulumi.CustomResource {
    /**
     * Get an existing ChannelNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ChannelNamespace;
    /**
     * Returns true if the given object is an instance of ChannelNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ChannelNamespace;
    /**
     * AppSync Api Id that this Channel Namespace belongs to.
     */
    readonly apiId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the channel namespace.
     */
    readonly channelNamespaceArn: pulumi.Output<string>;
    /**
     * The event handler functions that run custom business logic to process published events and subscribe requests.
     */
    readonly codeHandlers: pulumi.Output<string | undefined>;
    /**
     * The Amazon S3 endpoint where the code is located.
     */
    readonly codeS3Location: pulumi.Output<string | undefined>;
    /**
     * The name of the channel namespace. This name must be unique within the `Api` .
     */
    readonly name: pulumi.Output<string>;
    /**
     * List of AuthModes supported for Publish operations.
     */
    readonly publishAuthModes: pulumi.Output<outputs.appsync.ChannelNamespaceAuthMode[] | undefined>;
    /**
     * List of AuthModes supported for Subscribe operations.
     */
    readonly subscribeAuthModes: pulumi.Output<outputs.appsync.ChannelNamespaceAuthMode[] | undefined>;
    /**
     * A set of tags (key-value pairs) for this channel namespace.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ChannelNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ChannelNamespaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ChannelNamespace resource.
 */
export interface ChannelNamespaceArgs {
    /**
     * AppSync Api Id that this Channel Namespace belongs to.
     */
    apiId: pulumi.Input<string>;
    /**
     * The event handler functions that run custom business logic to process published events and subscribe requests.
     */
    codeHandlers?: pulumi.Input<string>;
    /**
     * The Amazon S3 endpoint where the code is located.
     */
    codeS3Location?: pulumi.Input<string>;
    /**
     * The name of the channel namespace. This name must be unique within the `Api` .
     */
    name?: pulumi.Input<string>;
    /**
     * List of AuthModes supported for Publish operations.
     */
    publishAuthModes?: pulumi.Input<pulumi.Input<inputs.appsync.ChannelNamespaceAuthModeArgs>[]>;
    /**
     * List of AuthModes supported for Subscribe operations.
     */
    subscribeAuthModes?: pulumi.Input<pulumi.Input<inputs.appsync.ChannelNamespaceAuthModeArgs>[]>;
    /**
     * A set of tags (key-value pairs) for this channel namespace.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
