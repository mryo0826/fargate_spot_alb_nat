"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQlApi = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::AppSync::GraphQLApi
 */
class GraphQlApi extends pulumi.CustomResource {
    /**
     * Get an existing GraphQlApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new GraphQlApi(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of GraphQlApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GraphQlApi.__pulumiType;
    }
    /**
     * Create a GraphQlApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.authenticationType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationType'");
            }
            resourceInputs["additionalAuthenticationProviders"] = args ? args.additionalAuthenticationProviders : undefined;
            resourceInputs["apiType"] = args ? args.apiType : undefined;
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["enhancedMetricsConfig"] = args ? args.enhancedMetricsConfig : undefined;
            resourceInputs["environmentVariables"] = args ? args.environmentVariables : undefined;
            resourceInputs["introspectionConfig"] = args ? args.introspectionConfig : undefined;
            resourceInputs["lambdaAuthorizerConfig"] = args ? args.lambdaAuthorizerConfig : undefined;
            resourceInputs["logConfig"] = args ? args.logConfig : undefined;
            resourceInputs["mergedApiExecutionRoleArn"] = args ? args.mergedApiExecutionRoleArn : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["openIdConnectConfig"] = args ? args.openIdConnectConfig : undefined;
            resourceInputs["ownerContact"] = args ? args.ownerContact : undefined;
            resourceInputs["queryDepthLimit"] = args ? args.queryDepthLimit : undefined;
            resourceInputs["resolverCountLimit"] = args ? args.resolverCountLimit : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userPoolConfig"] = args ? args.userPoolConfig : undefined;
            resourceInputs["visibility"] = args ? args.visibility : undefined;
            resourceInputs["xrayEnabled"] = args ? args.xrayEnabled : undefined;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlEndpointArn"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
        }
        else {
            resourceInputs["additionalAuthenticationProviders"] = undefined /*out*/;
            resourceInputs["apiId"] = undefined /*out*/;
            resourceInputs["apiType"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["authenticationType"] = undefined /*out*/;
            resourceInputs["enhancedMetricsConfig"] = undefined /*out*/;
            resourceInputs["environmentVariables"] = undefined /*out*/;
            resourceInputs["graphQlDns"] = undefined /*out*/;
            resourceInputs["graphQlEndpointArn"] = undefined /*out*/;
            resourceInputs["graphQlUrl"] = undefined /*out*/;
            resourceInputs["introspectionConfig"] = undefined /*out*/;
            resourceInputs["lambdaAuthorizerConfig"] = undefined /*out*/;
            resourceInputs["logConfig"] = undefined /*out*/;
            resourceInputs["mergedApiExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["openIdConnectConfig"] = undefined /*out*/;
            resourceInputs["ownerContact"] = undefined /*out*/;
            resourceInputs["queryDepthLimit"] = undefined /*out*/;
            resourceInputs["realtimeDns"] = undefined /*out*/;
            resourceInputs["realtimeUrl"] = undefined /*out*/;
            resourceInputs["resolverCountLimit"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["userPoolConfig"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
            resourceInputs["xrayEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GraphQlApi.__pulumiType, name, resourceInputs, opts);
    }
}
exports.GraphQlApi = GraphQlApi;
/** @internal */
GraphQlApi.__pulumiType = 'aws-native:appsync:GraphQlApi';
//# sourceMappingURL=graphQlApi.js.map