import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::FIS::ExperimentTemplate
 */
export declare function getExperimentTemplate(args: GetExperimentTemplateArgs, opts?: pulumi.InvokeOptions): Promise<GetExperimentTemplateResult>;
export interface GetExperimentTemplateArgs {
    /**
     * The ID of the experiment template.
     */
    id: string;
}
export interface GetExperimentTemplateResult {
    /**
     * The actions for the experiment.
     */
    readonly actions?: {
        [key: string]: outputs.fis.ExperimentTemplateAction;
    };
    /**
     * The description for the experiment template.
     */
    readonly description?: string;
    /**
     * The experiment options for an experiment template.
     */
    readonly experimentOptions?: outputs.fis.ExperimentTemplateExperimentOptions;
    /**
     * Describes the report configuration for the experiment template.
     */
    readonly experimentReportConfiguration?: outputs.fis.ExperimentTemplateExperimentReportConfiguration;
    /**
     * The ID of the experiment template.
     */
    readonly id?: string;
    /**
     * The configuration for experiment logging.
     */
    readonly logConfiguration?: outputs.fis.ExperimentTemplateLogConfiguration;
    /**
     * The Amazon Resource Name (ARN) of an IAM role.
     */
    readonly roleArn?: string;
    /**
     * The stop conditions for the experiment.
     */
    readonly stopConditions?: outputs.fis.ExperimentTemplateStopCondition[];
    /**
     * The targets for the experiment.
     */
    readonly targets?: {
        [key: string]: outputs.fis.ExperimentTemplateTarget;
    };
}
/**
 * Resource schema for AWS::FIS::ExperimentTemplate
 */
export declare function getExperimentTemplateOutput(args: GetExperimentTemplateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExperimentTemplateResult>;
export interface GetExperimentTemplateOutputArgs {
    /**
     * The ID of the experiment template.
     */
    id: pulumi.Input<string>;
}
