"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pipeline = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::IoTAnalytics::Pipeline
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const pipeline = new aws_native.iotanalytics.Pipeline("pipeline", {
 *     pipelineName: "SimplePipeline",
 *     pipelineActivities: [{
 *         channel: {
 *             name: "ChannelActivity",
 *             channelName: "SimpleChannel",
 *             next: "DatastoreActivity",
 *         },
 *         datastore: {
 *             name: "DatastoreActivity",
 *             datastoreName: "SimpleDatastore",
 *         },
 *     }],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const pipeline = new aws_native.iotanalytics.Pipeline("pipeline", {
 *     pipelineName: "SimplePipeline",
 *     pipelineActivities: [{
 *         channel: {
 *             name: "ChannelActivity",
 *             channelName: "SimpleChannel",
 *             next: "DatastoreActivity",
 *         },
 *         datastore: {
 *             name: "DatastoreActivity",
 *             datastoreName: "SimpleDatastore",
 *         },
 *     }],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const pipeline = new aws_native.iotanalytics.Pipeline("pipeline", {
 *     pipelineName: "ComplexPipeline",
 *     pipelineActivities: [{
 *         channel: {
 *             name: "ChannelActivity",
 *             channelName: "Channel",
 *             next: "LambdaActivity",
 *         },
 *         lambda: {
 *             name: "LambdaActivity",
 *             lambdaName: "Lambda",
 *             batchSize: 1,
 *             next: "AddAttributesActivity",
 *         },
 *         addAttributes: {
 *             name: "AddAttributesActivity",
 *             attributes: {
 *                 key1: "attribute1",
 *                 key2: "attribute2",
 *             },
 *             next: "RemoveAttributesActivity",
 *         },
 *         removeAttributes: {
 *             name: "RemoveAttributesActivity",
 *             attributes: [
 *                 "attribute1",
 *                 "attribute2",
 *             ],
 *             next: "SelectAttributesActivity",
 *         },
 *         selectAttributes: {
 *             name: "SelectAttributesActivity",
 *             attributes: [
 *                 "attribute1",
 *                 "attribute2",
 *             ],
 *             next: "FilterActivity",
 *         },
 *         filter: {
 *             name: "FilterActivity",
 *             filter: "attribute1 > 40 AND attribute2 < 20",
 *             next: "MathActivity",
 *         },
 *         math: {
 *             name: "MathActivity",
 *             attribute: "attribute",
 *             math: "attribute - 10",
 *             next: "DeviceRegistryEnrichActivity",
 *         },
 *         deviceRegistryEnrich: {
 *             name: "DeviceRegistryEnrichActivity",
 *             attribute: "attribute",
 *             thingName: "thingName",
 *             roleArn: "arn:aws:iam::<your_Account_Id>:role/Enrich",
 *             next: "DeviceShadowEnrichActivity",
 *         },
 *         deviceShadowEnrich: {
 *             name: "DeviceShadowEnrichActivity",
 *             attribute: "attribute",
 *             thingName: "thingName",
 *             roleArn: "arn:aws:iam::<your_Account_Id>:role/Enrich",
 *             next: "DatastoreActivity",
 *         },
 *         datastore: {
 *             name: "DatastoreActivity",
 *             datastoreName: "Datastore",
 *         },
 *     }],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const pipeline = new aws_native.iotanalytics.Pipeline("pipeline", {
 *     pipelineName: "ComplexPipeline",
 *     pipelineActivities: [{
 *         channel: {
 *             name: "ChannelActivity",
 *             channelName: "Channel",
 *             next: "LambdaActivity",
 *         },
 *         lambda: {
 *             name: "LambdaActivity",
 *             lambdaName: "Lambda",
 *             batchSize: 1,
 *             next: "AddAttributesActivity",
 *         },
 *         addAttributes: {
 *             name: "AddAttributesActivity",
 *             attributes: {
 *                 key1: "attribute1",
 *                 key2: "attribute2",
 *             },
 *             next: "RemoveAttributesActivity",
 *         },
 *         removeAttributes: {
 *             name: "RemoveAttributesActivity",
 *             attributes: [
 *                 "attribute1",
 *                 "attribute2",
 *             ],
 *             next: "SelectAttributesActivity",
 *         },
 *         selectAttributes: {
 *             name: "SelectAttributesActivity",
 *             attributes: [
 *                 "attribute1",
 *                 "attribute2",
 *             ],
 *             next: "FilterActivity",
 *         },
 *         filter: {
 *             name: "FilterActivity",
 *             filter: "attribute1 > 40 AND attribute2 < 20",
 *             next: "MathActivity",
 *         },
 *         math: {
 *             name: "MathActivity",
 *             attribute: "attribute",
 *             math: "attribute - 10",
 *             next: "DeviceRegistryEnrichActivity",
 *         },
 *         deviceRegistryEnrich: {
 *             name: "DeviceRegistryEnrichActivity",
 *             attribute: "attribute",
 *             thingName: "thingName",
 *             roleArn: "arn:aws:iam::<your_Account_Id>:role/Enrich",
 *             next: "DeviceShadowEnrichActivity",
 *         },
 *         deviceShadowEnrich: {
 *             name: "DeviceShadowEnrichActivity",
 *             attribute: "attribute",
 *             thingName: "thingName",
 *             roleArn: "arn:aws:iam::<your_Account_Id>:role/Enrich",
 *             next: "DatastoreActivity",
 *         },
 *         datastore: {
 *             name: "DatastoreActivity",
 *             datastoreName: "Datastore",
 *         },
 *     }],
 * });
 *
 * ```
 */
class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Pipeline(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }
    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.pipelineActivities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pipelineActivities'");
            }
            resourceInputs["pipelineActivities"] = args ? args.pipelineActivities : undefined;
            resourceInputs["pipelineName"] = args ? args.pipelineName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
        }
        else {
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["pipelineActivities"] = undefined /*out*/;
            resourceInputs["pipelineName"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["pipelineName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Pipeline.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Pipeline = Pipeline;
/** @internal */
Pipeline.__pulumiType = 'aws-native:iotanalytics:Pipeline';
//# sourceMappingURL=pipeline.js.map