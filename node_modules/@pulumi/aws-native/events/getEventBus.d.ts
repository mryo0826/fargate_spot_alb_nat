import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource type definition for AWS::Events::EventBus
 */
export declare function getEventBus(args: GetEventBusArgs, opts?: pulumi.InvokeOptions): Promise<GetEventBusResult>;
export interface GetEventBusArgs {
    /**
     * The name of the event bus.
     */
    name: string;
}
export interface GetEventBusResult {
    /**
     * The Amazon Resource Name (ARN) for the event bus.
     */
    readonly arn?: string;
    /**
     * Dead Letter Queue for the event bus.
     */
    readonly deadLetterConfig?: outputs.events.DeadLetterConfigProperties;
    /**
     * The description of the event bus.
     */
    readonly description?: string;
    /**
     * Kms Key Identifier used to encrypt events at rest in the event bus.
     */
    readonly kmsKeyIdentifier?: string;
    /**
     * A JSON string that describes the permission policy statement for the event bus.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Events::EventBus` for more information about the expected schema for this property.
     */
    readonly policy?: any;
    /**
     * Any tags assigned to the event bus.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource type definition for AWS::Events::EventBus
 */
export declare function getEventBusOutput(args: GetEventBusOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEventBusResult>;
export interface GetEventBusOutputArgs {
    /**
     * The name of the event bus.
     */
    name: pulumi.Input<string>;
}
