import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Events::Endpoint.
 */
export declare function getEndpoint(args: GetEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointResult>;
export interface GetEndpointArgs {
    /**
     * The name of the endpoint.
     */
    name: string;
}
export interface GetEndpointResult {
    /**
     * The ARN of the endpoint.
     */
    readonly arn?: string;
    /**
     * A description for the endpoint.
     */
    readonly description?: string;
    /**
     * The ID of the endpoint.
     */
    readonly endpointId?: string;
    /**
     * The URL of the endpoint.
     */
    readonly endpointUrl?: string;
    /**
     * The event buses being used by the endpoint.
     *
     * *Exactly* : `2`
     */
    readonly eventBuses?: outputs.events.EndpointEventBus[];
    /**
     * Whether event replication was enabled or disabled for this endpoint. The default state is `ENABLED` which means you must supply a `RoleArn` . If you don't have a `RoleArn` or you don't want event replication enabled, set the state to `DISABLED` .
     */
    readonly replicationConfig?: outputs.events.EndpointReplicationConfig;
    /**
     * The ARN of the role used by event replication for the endpoint.
     */
    readonly roleArn?: string;
    /**
     * The routing configuration of the endpoint.
     */
    readonly routingConfig?: outputs.events.EndpointRoutingConfig;
    /**
     * The main Region of the endpoint.
     */
    readonly state?: enums.events.EndpointState;
    /**
     * The reason the endpoint is in its current state.
     */
    readonly stateReason?: string;
}
/**
 * Resource Type definition for AWS::Events::Endpoint.
 */
export declare function getEndpointOutput(args: GetEndpointOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEndpointResult>;
export interface GetEndpointOutputArgs {
    /**
     * The name of the endpoint.
     */
    name: pulumi.Input<string>;
}
