import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Events::Connection.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const pagerDutyAPIKeyParam = config.require("pagerDutyAPIKeyParam");
 * const myConnection = new aws_native.events.Connection("myConnection", {
 *     authorizationType: aws_native.events.ConnectionAuthorizationType.ApiKey,
 *     description: "Connection to PagerDuty API",
 *     authParameters: {
 *         apiKeyAuthParameters: {
 *             apiKeyName: "PagerDuty Authorization",
 *             apiKeyValue: pagerDutyAPIKeyParam,
 *         },
 *     },
 * });
 * const myApiDestination = new aws_native.events.ApiDestination("myApiDestination", {
 *     connectionArn: myConnection.arn,
 *     description: "API Destination to send events to PagerDuty",
 *     httpMethod: aws_native.events.ApiDestinationHttpMethod.Post,
 *     invocationEndpoint: "https://events.pagerduty.com/v2/enqueue",
 * });
 *
 * ```
 */
export declare class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connection;
    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connection;
    /**
     * The arn of the connection resource.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The authorization parameters to use to authorize with the endpoint.
     *
     * You must include only authorization parameters for the `AuthorizationType` you specify.
     */
    readonly authParameters: pulumi.Output<outputs.events.ConnectionAuthParameters | undefined>;
    /**
     * The type of authorization to use for the connection.
     *
     * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
     */
    readonly authorizationType: pulumi.Output<enums.events.ConnectionAuthorizationType | undefined>;
    /**
     * Description of the connection.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The private resource the HTTP request will be sent to.
     */
    readonly invocationConnectivityParameters: pulumi.Output<outputs.events.InvocationConnectivityParametersProperties | undefined>;
    /**
     * Name of the connection.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The arn of the secrets manager secret created in the customer account.
     */
    readonly secretArn: pulumi.Output<string>;
    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConnectionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * The authorization parameters to use to authorize with the endpoint.
     *
     * You must include only authorization parameters for the `AuthorizationType` you specify.
     */
    authParameters?: pulumi.Input<inputs.events.ConnectionAuthParametersArgs>;
    /**
     * The type of authorization to use for the connection.
     *
     * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
     */
    authorizationType?: pulumi.Input<enums.events.ConnectionAuthorizationType>;
    /**
     * Description of the connection.
     */
    description?: pulumi.Input<string>;
    /**
     * The private resource the HTTP request will be sent to.
     */
    invocationConnectivityParameters?: pulumi.Input<inputs.events.InvocationConnectivityParametersPropertiesArgs>;
    /**
     * Name of the connection.
     */
    name?: pulumi.Input<string>;
}
