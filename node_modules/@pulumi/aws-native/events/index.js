"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Rule = exports.getRuleOutput = exports.getRule = exports.getEventBusOutput = exports.getEventBus = exports.getEndpointOutput = exports.getEndpoint = exports.getConnectionOutput = exports.getConnection = exports.getArchiveOutput = exports.getArchive = exports.getApiDestinationOutput = exports.getApiDestination = exports.EventBus = exports.Endpoint = exports.Connection = exports.Archive = exports.ApiDestination = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ApiDestination = null;
utilities.lazyLoad(exports, ["ApiDestination"], () => require("./apiDestination"));
exports.Archive = null;
utilities.lazyLoad(exports, ["Archive"], () => require("./archive"));
exports.Connection = null;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));
exports.Endpoint = null;
utilities.lazyLoad(exports, ["Endpoint"], () => require("./endpoint"));
exports.EventBus = null;
utilities.lazyLoad(exports, ["EventBus"], () => require("./eventBus"));
exports.getApiDestination = null;
exports.getApiDestinationOutput = null;
utilities.lazyLoad(exports, ["getApiDestination", "getApiDestinationOutput"], () => require("./getApiDestination"));
exports.getArchive = null;
exports.getArchiveOutput = null;
utilities.lazyLoad(exports, ["getArchive", "getArchiveOutput"], () => require("./getArchive"));
exports.getConnection = null;
exports.getConnectionOutput = null;
utilities.lazyLoad(exports, ["getConnection", "getConnectionOutput"], () => require("./getConnection"));
exports.getEndpoint = null;
exports.getEndpointOutput = null;
utilities.lazyLoad(exports, ["getEndpoint", "getEndpointOutput"], () => require("./getEndpoint"));
exports.getEventBus = null;
exports.getEventBusOutput = null;
utilities.lazyLoad(exports, ["getEventBus", "getEventBusOutput"], () => require("./getEventBus"));
exports.getRule = null;
exports.getRuleOutput = null;
utilities.lazyLoad(exports, ["getRule", "getRuleOutput"], () => require("./getRule"));
exports.Rule = null;
utilities.lazyLoad(exports, ["Rule"], () => require("./rule"));
// Export enums:
__exportStar(require("../types/enums/events"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:events:ApiDestination":
                return new exports.ApiDestination(name, undefined, { urn });
            case "aws-native:events:Archive":
                return new exports.Archive(name, undefined, { urn });
            case "aws-native:events:Connection":
                return new exports.Connection(name, undefined, { urn });
            case "aws-native:events:Endpoint":
                return new exports.Endpoint(name, undefined, { urn });
            case "aws-native:events:EventBus":
                return new exports.EventBus(name, undefined, { urn });
            case "aws-native:events:Rule":
                return new exports.Rule(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "events", _module);
//# sourceMappingURL=index.js.map