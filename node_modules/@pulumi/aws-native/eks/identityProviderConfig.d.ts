import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An object representing an Amazon EKS IdentityProviderConfig.
 */
export declare class IdentityProviderConfig extends pulumi.CustomResource {
    /**
     * Get an existing IdentityProviderConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IdentityProviderConfig;
    /**
     * Returns true if the given object is an instance of IdentityProviderConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IdentityProviderConfig;
    /**
     * The name of the identity provider configuration.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * The ARN of the configuration.
     */
    readonly identityProviderConfigArn: pulumi.Output<string>;
    /**
     * The name of the OIDC provider configuration.
     */
    readonly identityProviderConfigName: pulumi.Output<string | undefined>;
    /**
     * An object representing an OpenID Connect (OIDC) identity provider configuration.
     */
    readonly oidc: pulumi.Output<outputs.eks.IdentityProviderConfigOidcIdentityProviderConfig | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of the identity provider configuration.
     */
    readonly type: pulumi.Output<enums.eks.IdentityProviderConfigType>;
    /**
     * Create a IdentityProviderConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentityProviderConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IdentityProviderConfig resource.
 */
export interface IdentityProviderConfigArgs {
    /**
     * The name of the identity provider configuration.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The name of the OIDC provider configuration.
     */
    identityProviderConfigName?: pulumi.Input<string>;
    /**
     * An object representing an OpenID Connect (OIDC) identity provider configuration.
     */
    oidc?: pulumi.Input<inputs.eks.IdentityProviderConfigOidcIdentityProviderConfigArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of the identity provider configuration.
     */
    type: pulumi.Input<enums.eks.IdentityProviderConfigType>;
}
