"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PodIdentityAssociation = exports.Nodegroup = exports.IdentityProviderConfig = exports.getPodIdentityAssociationOutput = exports.getPodIdentityAssociation = exports.getNodegroupOutput = exports.getNodegroup = exports.getIdentityProviderConfigOutput = exports.getIdentityProviderConfig = exports.getFargateProfileOutput = exports.getFargateProfile = exports.getClusterOutput = exports.getCluster = exports.getAddonOutput = exports.getAddon = exports.getAccessEntryOutput = exports.getAccessEntry = exports.FargateProfile = exports.Cluster = exports.Addon = exports.AccessEntry = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessEntry = null;
utilities.lazyLoad(exports, ["AccessEntry"], () => require("./accessEntry"));
exports.Addon = null;
utilities.lazyLoad(exports, ["Addon"], () => require("./addon"));
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.FargateProfile = null;
utilities.lazyLoad(exports, ["FargateProfile"], () => require("./fargateProfile"));
exports.getAccessEntry = null;
exports.getAccessEntryOutput = null;
utilities.lazyLoad(exports, ["getAccessEntry", "getAccessEntryOutput"], () => require("./getAccessEntry"));
exports.getAddon = null;
exports.getAddonOutput = null;
utilities.lazyLoad(exports, ["getAddon", "getAddonOutput"], () => require("./getAddon"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getFargateProfile = null;
exports.getFargateProfileOutput = null;
utilities.lazyLoad(exports, ["getFargateProfile", "getFargateProfileOutput"], () => require("./getFargateProfile"));
exports.getIdentityProviderConfig = null;
exports.getIdentityProviderConfigOutput = null;
utilities.lazyLoad(exports, ["getIdentityProviderConfig", "getIdentityProviderConfigOutput"], () => require("./getIdentityProviderConfig"));
exports.getNodegroup = null;
exports.getNodegroupOutput = null;
utilities.lazyLoad(exports, ["getNodegroup", "getNodegroupOutput"], () => require("./getNodegroup"));
exports.getPodIdentityAssociation = null;
exports.getPodIdentityAssociationOutput = null;
utilities.lazyLoad(exports, ["getPodIdentityAssociation", "getPodIdentityAssociationOutput"], () => require("./getPodIdentityAssociation"));
exports.IdentityProviderConfig = null;
utilities.lazyLoad(exports, ["IdentityProviderConfig"], () => require("./identityProviderConfig"));
exports.Nodegroup = null;
utilities.lazyLoad(exports, ["Nodegroup"], () => require("./nodegroup"));
exports.PodIdentityAssociation = null;
utilities.lazyLoad(exports, ["PodIdentityAssociation"], () => require("./podIdentityAssociation"));
// Export enums:
__exportStar(require("../types/enums/eks"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:eks:AccessEntry":
                return new exports.AccessEntry(name, undefined, { urn });
            case "aws-native:eks:Addon":
                return new exports.Addon(name, undefined, { urn });
            case "aws-native:eks:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws-native:eks:FargateProfile":
                return new exports.FargateProfile(name, undefined, { urn });
            case "aws-native:eks:IdentityProviderConfig":
                return new exports.IdentityProviderConfig(name, undefined, { urn });
            case "aws-native:eks:Nodegroup":
                return new exports.Nodegroup(name, undefined, { urn });
            case "aws-native:eks:PodIdentityAssociation":
                return new exports.PodIdentityAssociation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "eks", _module);
//# sourceMappingURL=index.js.map