import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * An object representing an Amazon EKS AccessEntry.
 */
export declare function getAccessEntry(args: GetAccessEntryArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessEntryResult>;
export interface GetAccessEntryArgs {
    /**
     * The cluster that the access entry is created for.
     */
    clusterName: string;
    /**
     * The principal ARN that the access entry is created for.
     */
    principalArn: string;
}
export interface GetAccessEntryResult {
    /**
     * The ARN of the access entry.
     */
    readonly accessEntryArn?: string;
    /**
     * An array of access policies that are associated with the access entry.
     */
    readonly accessPolicies?: outputs.eks.AccessEntryAccessPolicy[];
    /**
     * The Kubernetes groups that the access entry is associated with.
     */
    readonly kubernetesGroups?: string[];
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
    /**
     * The Kubernetes user that the access entry is associated with.
     */
    readonly username?: string;
}
/**
 * An object representing an Amazon EKS AccessEntry.
 */
export declare function getAccessEntryOutput(args: GetAccessEntryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccessEntryResult>;
export interface GetAccessEntryOutputArgs {
    /**
     * The cluster that the access entry is created for.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The principal ARN that the access entry is created for.
     */
    principalArn: pulumi.Input<string>;
}
