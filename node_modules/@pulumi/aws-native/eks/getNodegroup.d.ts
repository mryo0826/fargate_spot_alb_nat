import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::EKS::Nodegroup
 */
export declare function getNodegroup(args: GetNodegroupArgs, opts?: pulumi.InvokeOptions): Promise<GetNodegroupResult>;
export interface GetNodegroupArgs {
    id: string;
}
export interface GetNodegroupResult {
    /**
     * The Amazon Resource Name (ARN) associated with the managed node group.
     */
    readonly arn?: string;
    readonly id?: string;
    /**
     * The Kubernetes labels to be applied to the nodes in the node group when they are created.
     */
    readonly labels?: {
        [key: string]: string;
    };
    /**
     * An object representing a node group's launch template specification.
     */
    readonly launchTemplate?: outputs.eks.NodegroupLaunchTemplateSpecification;
    /**
     * The node auto repair configuration for node group.
     */
    readonly nodeRepairConfig?: outputs.eks.NodegroupNodeRepairConfig;
    /**
     * The AMI version of the Amazon EKS-optimized AMI to use with your node group.
     */
    readonly releaseVersion?: string;
    /**
     * The scaling configuration details for the Auto Scaling group that is created for your node group.
     */
    readonly scalingConfig?: outputs.eks.NodegroupScalingConfig;
    /**
     * The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The Kubernetes taints to be applied to the nodes in the node group when they are created.
     */
    readonly taints?: outputs.eks.NodegroupTaint[];
    /**
     * The node group update configuration.
     */
    readonly updateConfig?: outputs.eks.NodegroupUpdateConfig;
    /**
     * The Kubernetes version to use for your managed nodes.
     */
    readonly version?: string;
}
/**
 * Resource schema for AWS::EKS::Nodegroup
 */
export declare function getNodegroupOutput(args: GetNodegroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNodegroupResult>;
export interface GetNodegroupOutputArgs {
    id: pulumi.Input<string>;
}
