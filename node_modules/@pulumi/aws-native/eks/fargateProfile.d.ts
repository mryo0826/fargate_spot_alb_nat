import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Schema for AWS::EKS::FargateProfile
 */
export declare class FargateProfile extends pulumi.CustomResource {
    /**
     * Get an existing FargateProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FargateProfile;
    /**
     * Returns true if the given object is an instance of FargateProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FargateProfile;
    /**
     * The ARN of the cluster, such as `arn:aws:eks:us-west-2:666666666666:fargateprofile/myCluster/myFargateProfile/1cb1a11a-1dc1-1d11-cf11-1111f11fa111` .
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Name of the Cluster
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * Name of FargateProfile
     */
    readonly fargateProfileName: pulumi.Output<string | undefined>;
    /**
     * The IAM policy arn for pods
     */
    readonly podExecutionRoleArn: pulumi.Output<string>;
    /**
     * The selectors to match for a `Pod` to use this Fargate profile. Each selector must have an associated Kubernetes `namespace` . Optionally, you can also specify `labels` for a `namespace` . You may specify up to five selectors in a Fargate profile.
     */
    readonly selectors: pulumi.Output<outputs.eks.FargateProfileSelector[]>;
    /**
     * The IDs of subnets to launch a `Pod` into. A `Pod` running on Fargate isn't assigned a public IP address, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.
     */
    readonly subnets: pulumi.Output<string[] | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a FargateProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FargateProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FargateProfile resource.
 */
export interface FargateProfileArgs {
    /**
     * Name of the Cluster
     */
    clusterName: pulumi.Input<string>;
    /**
     * Name of FargateProfile
     */
    fargateProfileName?: pulumi.Input<string>;
    /**
     * The IAM policy arn for pods
     */
    podExecutionRoleArn: pulumi.Input<string>;
    /**
     * The selectors to match for a `Pod` to use this Fargate profile. Each selector must have an associated Kubernetes `namespace` . Optionally, you can also specify `labels` for a `namespace` . You may specify up to five selectors in a Fargate profile.
     */
    selectors: pulumi.Input<pulumi.Input<inputs.eks.FargateProfileSelectorArgs>[]>;
    /**
     * The IDs of subnets to launch a `Pod` into. A `Pod` running on Fargate isn't assigned a public IP address, so only private subnets (with no direct route to an Internet Gateway) are accepted for this parameter.
     */
    subnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
