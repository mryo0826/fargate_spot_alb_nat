import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * An object representing an Amazon EKS AccessEntry.
 */
export declare class AccessEntry extends pulumi.CustomResource {
    /**
     * Get an existing AccessEntry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AccessEntry;
    /**
     * Returns true if the given object is an instance of AccessEntry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessEntry;
    /**
     * The ARN of the access entry.
     */
    readonly accessEntryArn: pulumi.Output<string>;
    /**
     * An array of access policies that are associated with the access entry.
     */
    readonly accessPolicies: pulumi.Output<outputs.eks.AccessEntryAccessPolicy[] | undefined>;
    /**
     * The cluster that the access entry is created for.
     */
    readonly clusterName: pulumi.Output<string>;
    /**
     * The Kubernetes groups that the access entry is associated with.
     */
    readonly kubernetesGroups: pulumi.Output<string[] | undefined>;
    /**
     * The principal ARN that the access entry is created for.
     */
    readonly principalArn: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The node type to associate with the access entry.
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * The Kubernetes user that the access entry is associated with.
     */
    readonly username: pulumi.Output<string | undefined>;
    /**
     * Create a AccessEntry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessEntryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AccessEntry resource.
 */
export interface AccessEntryArgs {
    /**
     * An array of access policies that are associated with the access entry.
     */
    accessPolicies?: pulumi.Input<pulumi.Input<inputs.eks.AccessEntryAccessPolicyArgs>[]>;
    /**
     * The cluster that the access entry is created for.
     */
    clusterName: pulumi.Input<string>;
    /**
     * The Kubernetes groups that the access entry is associated with.
     */
    kubernetesGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The principal ARN that the access entry is created for.
     */
    principalArn: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The node type to associate with the access entry.
     */
    type?: pulumi.Input<string>;
    /**
     * The Kubernetes user that the access entry is associated with.
     */
    username?: pulumi.Input<string>;
}
