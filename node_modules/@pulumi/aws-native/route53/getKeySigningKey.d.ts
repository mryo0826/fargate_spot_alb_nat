import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Represents a key signing key (KSK) associated with a hosted zone. You can only have two KSKs per hosted zone.
 */
export declare function getKeySigningKey(args: GetKeySigningKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeySigningKeyResult>;
export interface GetKeySigningKeyArgs {
    /**
     * The unique string (ID) used to identify a hosted zone.
     */
    hostedZoneId: string;
    /**
     * An alphanumeric string used to identify a key signing key (KSK). Name must be unique for each key signing key in the same hosted zone.
     */
    name: string;
}
export interface GetKeySigningKeyResult {
    /**
     * A string specifying the initial status of the key signing key (KSK). You can set the value to ACTIVE or INACTIVE.
     */
    readonly status?: enums.route53.KeySigningKeyStatus;
}
/**
 * Represents a key signing key (KSK) associated with a hosted zone. You can only have two KSKs per hosted zone.
 */
export declare function getKeySigningKeyOutput(args: GetKeySigningKeyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeySigningKeyResult>;
export interface GetKeySigningKeyOutputArgs {
    /**
     * The unique string (ID) used to identify a hosted zone.
     */
    hostedZoneId: pulumi.Input<string>;
    /**
     * An alphanumeric string used to identify a key signing key (KSK). Name must be unique for each key signing key in the same hosted zone.
     */
    name: pulumi.Input<string>;
}
