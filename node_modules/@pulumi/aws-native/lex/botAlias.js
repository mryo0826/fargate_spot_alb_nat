"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.BotAlias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A Bot Alias enables you to change the version of a bot without updating applications that use the bot
 */
class BotAlias extends pulumi.CustomResource {
    /**
     * Get an existing BotAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new BotAlias(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of BotAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BotAlias.__pulumiType;
    }
    /**
     * Create a BotAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.botId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botId'");
            }
            resourceInputs["botAliasLocaleSettings"] = args ? args.botAliasLocaleSettings : undefined;
            resourceInputs["botAliasName"] = args ? args.botAliasName : undefined;
            resourceInputs["botAliasTags"] = args ? args.botAliasTags : undefined;
            resourceInputs["botId"] = args ? args.botId : undefined;
            resourceInputs["botVersion"] = args ? args.botVersion : undefined;
            resourceInputs["conversationLogSettings"] = args ? args.conversationLogSettings : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["sentimentAnalysisSettings"] = args ? args.sentimentAnalysisSettings : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["botAliasId"] = undefined /*out*/;
            resourceInputs["botAliasStatus"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["botAliasId"] = undefined /*out*/;
            resourceInputs["botAliasLocaleSettings"] = undefined /*out*/;
            resourceInputs["botAliasName"] = undefined /*out*/;
            resourceInputs["botAliasStatus"] = undefined /*out*/;
            resourceInputs["botAliasTags"] = undefined /*out*/;
            resourceInputs["botId"] = undefined /*out*/;
            resourceInputs["botVersion"] = undefined /*out*/;
            resourceInputs["conversationLogSettings"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["sentimentAnalysisSettings"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["botId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(BotAlias.__pulumiType, name, resourceInputs, opts);
    }
}
exports.BotAlias = BotAlias;
/** @internal */
BotAlias.__pulumiType = 'aws-native:lex:BotAlias';
//# sourceMappingURL=botAlias.js.map