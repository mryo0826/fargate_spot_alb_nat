import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A Bot Alias enables you to change the version of a bot without updating applications that use the bot
 */
export declare class BotAlias extends pulumi.CustomResource {
    /**
     * Get an existing BotAlias resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): BotAlias;
    /**
     * Returns true if the given object is an instance of BotAlias.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is BotAlias;
    /**
     * The Amazon Resource Name (ARN) of the bot alias.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The unique identifier of the bot alias.
     */
    readonly botAliasId: pulumi.Output<string>;
    /**
     * Specifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot's locale.
     */
    readonly botAliasLocaleSettings: pulumi.Output<outputs.lex.BotAliasLocaleSettingsItem[] | undefined>;
    /**
     * The name of the bot alias.
     */
    readonly botAliasName: pulumi.Output<string>;
    /**
     * The current status of the bot alias. When the status is Available the alias is ready for use with your bot.
     */
    readonly botAliasStatus: pulumi.Output<enums.lex.BotAliasStatus>;
    /**
     * A list of tags to add to the bot alias.
     */
    readonly botAliasTags: pulumi.Output<outputs.lex.BotAliasTag[] | undefined>;
    /**
     * The unique identifier of the bot.
     */
    readonly botId: pulumi.Output<string>;
    /**
     * The version of the bot that the bot alias references.
     */
    readonly botVersion: pulumi.Output<string | undefined>;
    /**
     * Specifies whether Amazon Lex logs text and audio for conversations with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch logs. Audio logs store input in Amazon S3 .
     */
    readonly conversationLogSettings: pulumi.Output<outputs.lex.BotAliasConversationLogSettings | undefined>;
    /**
     * The description of the bot alias.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     */
    readonly sentimentAnalysisSettings: pulumi.Output<outputs.lex.SentimentAnalysisSettingsProperties | undefined>;
    /**
     * Create a BotAlias resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BotAliasArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a BotAlias resource.
 */
export interface BotAliasArgs {
    /**
     * Specifies settings that are unique to a locale. For example, you can use different Lambda function depending on the bot's locale.
     */
    botAliasLocaleSettings?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasLocaleSettingsItemArgs>[]>;
    /**
     * The name of the bot alias.
     */
    botAliasName?: pulumi.Input<string>;
    /**
     * A list of tags to add to the bot alias.
     */
    botAliasTags?: pulumi.Input<pulumi.Input<inputs.lex.BotAliasTagArgs>[]>;
    /**
     * The unique identifier of the bot.
     */
    botId: pulumi.Input<string>;
    /**
     * The version of the bot that the bot alias references.
     */
    botVersion?: pulumi.Input<string>;
    /**
     * Specifies whether Amazon Lex logs text and audio for conversations with the bot. When you enable conversation logs, text logs store text input, transcripts of audio input, and associated metadata in Amazon CloudWatch logs. Audio logs store input in Amazon S3 .
     */
    conversationLogSettings?: pulumi.Input<inputs.lex.BotAliasConversationLogSettingsArgs>;
    /**
     * The description of the bot alias.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
     */
    sentimentAnalysisSettings?: pulumi.Input<inputs.lex.SentimentAnalysisSettingsPropertiesArgs>;
}
