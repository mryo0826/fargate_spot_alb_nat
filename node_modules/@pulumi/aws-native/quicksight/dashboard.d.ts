import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of the AWS::QuickSight::Dashboard Resource Type.
 */
export declare class Dashboard extends pulumi.CustomResource {
    /**
     * Get an existing Dashboard resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Dashboard;
    /**
     * Returns true if the given object is an instance of Dashboard.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Dashboard;
    /**
     * <p>The Amazon Resource Name (ARN) of the resource.</p>
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the AWS account where you want to create the dashboard.
     */
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * <p>The time that this dashboard was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * The ID for the dashboard, also added to the IAM policy.
     */
    readonly dashboardId: pulumi.Output<string>;
    /**
     * Options for publishing the dashboard when you create it:
     *
     * - `AvailabilityStatus` for `AdHocFilteringOption` - This status can be either `ENABLED` or `DISABLED` . When this is set to `DISABLED` , Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is `ENABLED` by default.
     * - `AvailabilityStatus` for `ExportToCSVOption` - This status can be either `ENABLED` or `DISABLED` . The visual option to export data to .CSV format isn't enabled when this is set to `DISABLED` . This option is `ENABLED` by default.
     * - `VisibilityState` for `SheetControlsOption` - This visibility state can be either `COLLAPSED` or `EXPANDED` . This option is `COLLAPSED` by default.
     */
    readonly dashboardPublishOptions: pulumi.Output<outputs.quicksight.DashboardPublishOptions | undefined>;
    readonly definition: pulumi.Output<outputs.quicksight.DashboardVersionDefinition | undefined>;
    readonly folderArns: pulumi.Output<string[] | undefined>;
    /**
     * <p>The last time that this dashboard was published.</p>
     */
    readonly lastPublishedTime: pulumi.Output<string>;
    /**
     * <p>The last time that this dashboard was updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * A list of analysis Amazon Resource Names (ARNs) to be linked to the dashboard.
     */
    readonly linkEntities: pulumi.Output<string[] | undefined>;
    /**
     * A structure that contains the link sharing configurations that you want to apply overrides to.
     */
    readonly linkSharingConfiguration: pulumi.Output<outputs.quicksight.DashboardLinkSharingConfiguration | undefined>;
    /**
     * The display name of the dashboard.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values.
     */
    readonly parameters: pulumi.Output<outputs.quicksight.DashboardParameters | undefined>;
    /**
     * A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN.
     *
     * To specify no permissions, omit the permissions list.
     */
    readonly permissions: pulumi.Output<outputs.quicksight.DashboardResourcePermission[] | undefined>;
    /**
     * The entity that you are using as a source when you create the dashboard. In `SourceEntity` , you specify the type of object that you want to use. You can only create a dashboard from a template, so you use a `SourceTemplate` entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the `CreateTemplate` API operation. For `SourceTemplate` , specify the Amazon Resource Name (ARN) of the source template. The `SourceTemplate` ARN can contain any AWS account; and any QuickSight-supported AWS Region .
     *
     * Use the `DataSetReferences` entity within `SourceTemplate` to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder.
     */
    readonly sourceEntity: pulumi.Output<outputs.quicksight.DashboardSourceEntity | undefined>;
    /**
     * Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same AWS account where you create the dashboard.
     */
    readonly themeArn: pulumi.Output<string | undefined>;
    /**
     * The option to relax the validation that is required to create and update analyses, dashboards, and templates with definition objects. When you set this value to `LENIENT` , validation is skipped for specific errors.
     */
    readonly validationStrategy: pulumi.Output<outputs.quicksight.DashboardValidationStrategy | undefined>;
    readonly version: pulumi.Output<outputs.quicksight.DashboardVersion>;
    /**
     * A description for the first version of the dashboard being created.
     */
    readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * Create a Dashboard resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Dashboard resource.
 */
export interface DashboardArgs {
    /**
     * The ID of the AWS account where you want to create the dashboard.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * The ID for the dashboard, also added to the IAM policy.
     */
    dashboardId: pulumi.Input<string>;
    /**
     * Options for publishing the dashboard when you create it:
     *
     * - `AvailabilityStatus` for `AdHocFilteringOption` - This status can be either `ENABLED` or `DISABLED` . When this is set to `DISABLED` , Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is `ENABLED` by default.
     * - `AvailabilityStatus` for `ExportToCSVOption` - This status can be either `ENABLED` or `DISABLED` . The visual option to export data to .CSV format isn't enabled when this is set to `DISABLED` . This option is `ENABLED` by default.
     * - `VisibilityState` for `SheetControlsOption` - This visibility state can be either `COLLAPSED` or `EXPANDED` . This option is `COLLAPSED` by default.
     */
    dashboardPublishOptions?: pulumi.Input<inputs.quicksight.DashboardPublishOptionsArgs>;
    definition?: pulumi.Input<inputs.quicksight.DashboardVersionDefinitionArgs>;
    folderArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of analysis Amazon Resource Names (ARNs) to be linked to the dashboard.
     */
    linkEntities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A structure that contains the link sharing configurations that you want to apply overrides to.
     */
    linkSharingConfiguration?: pulumi.Input<inputs.quicksight.DashboardLinkSharingConfigurationArgs>;
    /**
     * The display name of the dashboard.
     */
    name?: pulumi.Input<string>;
    /**
     * The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values.
     */
    parameters?: pulumi.Input<inputs.quicksight.DashboardParametersArgs>;
    /**
     * A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN.
     *
     * To specify no permissions, omit the permissions list.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.DashboardResourcePermissionArgs>[]>;
    /**
     * The entity that you are using as a source when you create the dashboard. In `SourceEntity` , you specify the type of object that you want to use. You can only create a dashboard from a template, so you use a `SourceTemplate` entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the `CreateTemplate` API operation. For `SourceTemplate` , specify the Amazon Resource Name (ARN) of the source template. The `SourceTemplate` ARN can contain any AWS account; and any QuickSight-supported AWS Region .
     *
     * Use the `DataSetReferences` entity within `SourceTemplate` to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder.
     */
    sourceEntity?: pulumi.Input<inputs.quicksight.DashboardSourceEntityArgs>;
    /**
     * Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same AWS account where you create the dashboard.
     */
    themeArn?: pulumi.Input<string>;
    /**
     * The option to relax the validation that is required to create and update analyses, dashboards, and templates with definition objects. When you set this value to `LENIENT` , validation is skipped for specific errors.
     */
    validationStrategy?: pulumi.Input<inputs.quicksight.DashboardValidationStrategyArgs>;
    /**
     * A description for the first version of the dashboard being created.
     */
    versionDescription?: pulumi.Input<string>;
}
