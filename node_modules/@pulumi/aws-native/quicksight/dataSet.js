"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataSet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Definition of the AWS::QuickSight::DataSet Resource Type.
 */
class DataSet extends pulumi.CustomResource {
    /**
     * Get an existing DataSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new DataSet(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataSet.__pulumiType;
    }
    /**
     * Create a DataSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["awsAccountId"] = args ? args.awsAccountId : undefined;
            resourceInputs["columnGroups"] = args ? args.columnGroups : undefined;
            resourceInputs["columnLevelPermissionRules"] = args ? args.columnLevelPermissionRules : undefined;
            resourceInputs["dataSetId"] = args ? args.dataSetId : undefined;
            resourceInputs["dataSetRefreshProperties"] = args ? args.dataSetRefreshProperties : undefined;
            resourceInputs["dataSetUsageConfiguration"] = args ? args.dataSetUsageConfiguration : undefined;
            resourceInputs["datasetParameters"] = args ? args.datasetParameters : undefined;
            resourceInputs["fieldFolders"] = args ? args.fieldFolders : undefined;
            resourceInputs["folderArns"] = args ? args.folderArns : undefined;
            resourceInputs["importMode"] = args ? args.importMode : undefined;
            resourceInputs["ingestionWaitPolicy"] = args ? args.ingestionWaitPolicy : undefined;
            resourceInputs["logicalTableMap"] = args ? args.logicalTableMap : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["performanceConfiguration"] = args ? args.performanceConfiguration : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["physicalTableMap"] = args ? args.physicalTableMap : undefined;
            resourceInputs["rowLevelPermissionDataSet"] = args ? args.rowLevelPermissionDataSet : undefined;
            resourceInputs["rowLevelPermissionTagConfiguration"] = args ? args.rowLevelPermissionTagConfiguration : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["consumedSpiceCapacityInBytes"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["outputColumns"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsAccountId"] = undefined /*out*/;
            resourceInputs["columnGroups"] = undefined /*out*/;
            resourceInputs["columnLevelPermissionRules"] = undefined /*out*/;
            resourceInputs["consumedSpiceCapacityInBytes"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["dataSetId"] = undefined /*out*/;
            resourceInputs["dataSetRefreshProperties"] = undefined /*out*/;
            resourceInputs["dataSetUsageConfiguration"] = undefined /*out*/;
            resourceInputs["datasetParameters"] = undefined /*out*/;
            resourceInputs["fieldFolders"] = undefined /*out*/;
            resourceInputs["folderArns"] = undefined /*out*/;
            resourceInputs["importMode"] = undefined /*out*/;
            resourceInputs["ingestionWaitPolicy"] = undefined /*out*/;
            resourceInputs["lastUpdatedTime"] = undefined /*out*/;
            resourceInputs["logicalTableMap"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["outputColumns"] = undefined /*out*/;
            resourceInputs["performanceConfiguration"] = undefined /*out*/;
            resourceInputs["permissions"] = undefined /*out*/;
            resourceInputs["physicalTableMap"] = undefined /*out*/;
            resourceInputs["rowLevelPermissionDataSet"] = undefined /*out*/;
            resourceInputs["rowLevelPermissionTagConfiguration"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["awsAccountId", "dataSetId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataSet.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataSet = DataSet;
/** @internal */
DataSet.__pulumiType = 'aws-native:quicksight:DataSet';
//# sourceMappingURL=dataSet.js.map