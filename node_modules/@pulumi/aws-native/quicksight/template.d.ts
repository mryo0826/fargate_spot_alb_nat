import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of the AWS::QuickSight::Template Resource Type.
 */
export declare class Template extends pulumi.CustomResource {
    /**
     * Get an existing Template resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Template;
    /**
     * Returns true if the given object is an instance of Template.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Template;
    /**
     * <p>The Amazon Resource Name (ARN) of the template.</p>
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID for the AWS account that the group is in. You use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    readonly awsAccountId: pulumi.Output<string>;
    /**
     * <p>Time when this was created.</p>
     */
    readonly createdTime: pulumi.Output<string>;
    readonly definition: pulumi.Output<outputs.quicksight.TemplateVersionDefinition | undefined>;
    /**
     * <p>Time when this was last updated.</p>
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * A display name for the template.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * A list of resource permissions to be set on the template.
     */
    readonly permissions: pulumi.Output<outputs.quicksight.TemplateResourcePermission[] | undefined>;
    /**
     * The entity that you are using as a source when you create the template. In `SourceEntity` , you specify the type of object you're using as source: `SourceTemplate` for a template or `SourceAnalysis` for an analysis. Both of these require an Amazon Resource Name (ARN). For `SourceTemplate` , specify the ARN of the source template. For `SourceAnalysis` , specify the ARN of the source analysis. The `SourceTemplate` ARN can contain any AWS account and any Amazon QuickSight-supported AWS Region .
     *
     * Use the `DataSetReferences` entity within `SourceTemplate` or `SourceAnalysis` to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder.
     *
     * Either a `SourceEntity` or a `Definition` must be provided in order for the request to be valid.
     */
    readonly sourceEntity: pulumi.Output<outputs.quicksight.TemplateSourceEntity | undefined>;
    /**
     * Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * An ID for the template that you want to create. This template is unique per AWS Region ; in each AWS account.
     */
    readonly templateId: pulumi.Output<string>;
    /**
     * The option to relax the validation that is required to create and update analyses, dashboards, and templates with definition objects. When you set this value to `LENIENT` , validation is skipped for specific errors.
     */
    readonly validationStrategy: pulumi.Output<outputs.quicksight.TemplateValidationStrategy | undefined>;
    readonly version: pulumi.Output<outputs.quicksight.TemplateVersion>;
    /**
     * A description of the current template version being created. This API operation creates the first version of the template. Every time `UpdateTemplate` is called, a new version is created. Each version of the template maintains a description of the version in the `VersionDescription` field.
     */
    readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * Create a Template resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Template resource.
 */
export interface TemplateArgs {
    /**
     * The ID for the AWS account that the group is in. You use the ID for the AWS account that contains your Amazon QuickSight account.
     */
    awsAccountId: pulumi.Input<string>;
    definition?: pulumi.Input<inputs.quicksight.TemplateVersionDefinitionArgs>;
    /**
     * A display name for the template.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of resource permissions to be set on the template.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.quicksight.TemplateResourcePermissionArgs>[]>;
    /**
     * The entity that you are using as a source when you create the template. In `SourceEntity` , you specify the type of object you're using as source: `SourceTemplate` for a template or `SourceAnalysis` for an analysis. Both of these require an Amazon Resource Name (ARN). For `SourceTemplate` , specify the ARN of the source template. For `SourceAnalysis` , specify the ARN of the source analysis. The `SourceTemplate` ARN can contain any AWS account and any Amazon QuickSight-supported AWS Region .
     *
     * Use the `DataSetReferences` entity within `SourceTemplate` or `SourceAnalysis` to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder.
     *
     * Either a `SourceEntity` or a `Definition` must be provided in order for the request to be valid.
     */
    sourceEntity?: pulumi.Input<inputs.quicksight.TemplateSourceEntityArgs>;
    /**
     * Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * An ID for the template that you want to create. This template is unique per AWS Region ; in each AWS account.
     */
    templateId: pulumi.Input<string>;
    /**
     * The option to relax the validation that is required to create and update analyses, dashboards, and templates with definition objects. When you set this value to `LENIENT` , validation is skipped for specific errors.
     */
    validationStrategy?: pulumi.Input<inputs.quicksight.TemplateValidationStrategyArgs>;
    /**
     * A description of the current template version being created. This API operation creates the first version of the template. Every time `UpdateTemplate` is called, a new version is created. Each version of the template maintains a description of the version in the `VersionDescription` field.
     */
    versionDescription?: pulumi.Input<string>;
}
