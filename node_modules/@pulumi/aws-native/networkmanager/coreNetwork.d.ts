import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * AWS::NetworkManager::CoreNetwork Resource Type Definition.
 */
export declare class CoreNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CoreNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CoreNetwork;
    /**
     * Returns true if the given object is an instance of CoreNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CoreNetwork;
    /**
     * The ARN (Amazon resource name) of core network
     */
    readonly coreNetworkArn: pulumi.Output<string>;
    /**
     * The Id of core network
     */
    readonly coreNetworkId: pulumi.Output<string>;
    /**
     * The creation time of core network
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The description of core network
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The edges within a core network.
     */
    readonly edges: pulumi.Output<outputs.networkmanager.CoreNetworkEdge[]>;
    /**
     * The ID of the global network that your core network is a part of.
     */
    readonly globalNetworkId: pulumi.Output<string>;
    /**
     * The network function groups within a core network.
     */
    readonly networkFunctionGroups: pulumi.Output<outputs.networkmanager.CoreNetworkNetworkFunctionGroup[]>;
    /**
     * Owner of the core network
     */
    readonly ownerAccount: pulumi.Output<string>;
    /**
     * Live policy document for the core network, you must provide PolicyDocument in Json Format
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::NetworkManager::CoreNetwork` for more information about the expected schema for this property.
     */
    readonly policyDocument: pulumi.Output<any | undefined>;
    /**
     * The segments within a core network.
     */
    readonly segments: pulumi.Output<outputs.networkmanager.CoreNetworkSegment[]>;
    /**
     * The state of core network
     */
    readonly state: pulumi.Output<string>;
    /**
     * The tags for the global network.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a CoreNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CoreNetworkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CoreNetwork resource.
 */
export interface CoreNetworkArgs {
    /**
     * The description of core network
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the global network that your core network is a part of.
     */
    globalNetworkId: pulumi.Input<string>;
    /**
     * Live policy document for the core network, you must provide PolicyDocument in Json Format
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::NetworkManager::CoreNetwork` for more information about the expected schema for this property.
     */
    policyDocument?: any;
    /**
     * The tags for the global network.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
