import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * AWS::NetworkManager::TransitGatewayPeering Resoruce Type.
 */
export declare class TransitGatewayPeering extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayPeering resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransitGatewayPeering;
    /**
     * Returns true if the given object is an instance of TransitGatewayPeering.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransitGatewayPeering;
    /**
     * The ARN (Amazon Resource Name) of the core network that you want to peer a transit gateway to.
     */
    readonly coreNetworkArn: pulumi.Output<string>;
    /**
     * The Id of the core network that you want to peer a transit gateway to.
     */
    readonly coreNetworkId: pulumi.Output<string>;
    /**
     * The creation time of the transit gateway peering
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The location of the transit gateway peering
     */
    readonly edgeLocation: pulumi.Output<string>;
    /**
     * Peering owner account Id
     */
    readonly ownerAccountId: pulumi.Output<string>;
    /**
     * The Id of the transit gateway peering
     */
    readonly peeringId: pulumi.Output<string>;
    /**
     * Peering type (TransitGatewayPeering)
     */
    readonly peeringType: pulumi.Output<string>;
    /**
     * The ARN (Amazon Resource Name) of the resource that you will peer to a core network
     */
    readonly resourceArn: pulumi.Output<string>;
    /**
     * The state of the transit gateway peering
     */
    readonly state: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ARN (Amazon Resource Name) of the transit gateway that you will peer to a core network
     */
    readonly transitGatewayArn: pulumi.Output<string>;
    /**
     * The ID of the TransitGatewayPeeringAttachment
     */
    readonly transitGatewayPeeringAttachmentId: pulumi.Output<string>;
    /**
     * Create a TransitGatewayPeering resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayPeeringArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TransitGatewayPeering resource.
 */
export interface TransitGatewayPeeringArgs {
    /**
     * The Id of the core network that you want to peer a transit gateway to.
     */
    coreNetworkId: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ARN (Amazon Resource Name) of the transit gateway that you will peer to a core network
     */
    transitGatewayArn: pulumi.Input<string>;
}
