import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * AWS::NetworkManager::ConnectPeer Resource Type Definition.
 */
export declare class ConnectPeer extends pulumi.CustomResource {
    /**
     * Get an existing ConnectPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConnectPeer;
    /**
     * Returns true if the given object is an instance of ConnectPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ConnectPeer;
    /**
     * Bgp options for connect peer.
     */
    readonly bgpOptions: pulumi.Output<outputs.networkmanager.ConnectPeerBgpOptions | undefined>;
    /**
     * Configuration of the connect peer.
     */
    readonly configuration: pulumi.Output<outputs.networkmanager.ConnectPeerConfiguration>;
    /**
     * The ID of the attachment to connect.
     */
    readonly connectAttachmentId: pulumi.Output<string>;
    /**
     * The ID of the Connect peer.
     */
    readonly connectPeerId: pulumi.Output<string>;
    /**
     * The IP address of a core network.
     */
    readonly coreNetworkAddress: pulumi.Output<string | undefined>;
    /**
     * The ID of the core network.
     */
    readonly coreNetworkId: pulumi.Output<string>;
    /**
     * Connect peer creation time.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The Connect peer Regions where edges are located.
     */
    readonly edgeLocation: pulumi.Output<string>;
    /**
     * The inside IP addresses used for a Connect peer configuration.
     */
    readonly insideCidrBlocks: pulumi.Output<string[] | undefined>;
    /**
     * The IP address of the Connect peer.
     */
    readonly peerAddress: pulumi.Output<string>;
    /**
     * State of the connect peer.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The subnet ARN for the connect peer.
     */
    readonly subnetArn: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ConnectPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectPeerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ConnectPeer resource.
 */
export interface ConnectPeerArgs {
    /**
     * Bgp options for connect peer.
     */
    bgpOptions?: pulumi.Input<inputs.networkmanager.ConnectPeerBgpOptionsArgs>;
    /**
     * The ID of the attachment to connect.
     */
    connectAttachmentId: pulumi.Input<string>;
    /**
     * The IP address of a core network.
     */
    coreNetworkAddress?: pulumi.Input<string>;
    /**
     * The inside IP addresses used for a Connect peer configuration.
     */
    insideCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IP address of the Connect peer.
     */
    peerAddress: pulumi.Input<string>;
    /**
     * The subnet ARN for the connect peer.
     */
    subnetArn?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
