import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An entity that defines the scope of audit evidence collected by AWS Audit Manager.
 */
export declare class Assessment extends pulumi.CustomResource {
    /**
     * Get an existing Assessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Assessment;
    /**
     * Returns true if the given object is an instance of Assessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Assessment;
    /**
     * The Amazon Resource Name (ARN) of the assessment.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The unique identifier for the assessment.
     */
    readonly assessmentId: pulumi.Output<string>;
    /**
     * The destination that evidence reports are stored in for the assessment.
     */
    readonly assessmentReportsDestination: pulumi.Output<outputs.auditmanager.AssessmentReportsDestination | undefined>;
    /**
     * The AWS account that's associated with the assessment.
     */
    readonly awsAccount: pulumi.Output<outputs.auditmanager.AssessmentAwsAccount | undefined>;
    /**
     * Specifies when the assessment was created.
     */
    readonly creationTime: pulumi.Output<number>;
    /**
     * The list of delegations.
     */
    readonly delegations: pulumi.Output<outputs.auditmanager.AssessmentDelegation[] | undefined>;
    /**
     * The description of the assessment.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The unique identifier for the framework.
     */
    readonly frameworkId: pulumi.Output<string | undefined>;
    /**
     * The name of the assessment.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The list of roles for the specified assessment.
     */
    readonly roles: pulumi.Output<outputs.auditmanager.AssessmentRole[] | undefined>;
    /**
     * The wrapper of AWS accounts and services that are in scope for the assessment.
     */
    readonly scope: pulumi.Output<outputs.auditmanager.AssessmentScope | undefined>;
    /**
     * The overall status of the assessment.
     *
     * When you create a new assessment, the initial `Status` value is always `ACTIVE` . When you create an assessment, even if you specify the value as `INACTIVE` , the value overrides to `ACTIVE` .
     *
     * After you create an assessment, you can change the value of the `Status` property at any time. For example, when you want to stop collecting evidence for your assessment, you can change the assessment status to `INACTIVE` .
     */
    readonly status: pulumi.Output<enums.auditmanager.AssessmentStatus | undefined>;
    /**
     * The tags associated with the assessment.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Assessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AssessmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Assessment resource.
 */
export interface AssessmentArgs {
    /**
     * The destination that evidence reports are stored in for the assessment.
     */
    assessmentReportsDestination?: pulumi.Input<inputs.auditmanager.AssessmentReportsDestinationArgs>;
    /**
     * The AWS account that's associated with the assessment.
     */
    awsAccount?: pulumi.Input<inputs.auditmanager.AssessmentAwsAccountArgs>;
    /**
     * The list of delegations.
     */
    delegations?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentDelegationArgs>[]>;
    /**
     * The description of the assessment.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique identifier for the framework.
     */
    frameworkId?: pulumi.Input<string>;
    /**
     * The name of the assessment.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of roles for the specified assessment.
     */
    roles?: pulumi.Input<pulumi.Input<inputs.auditmanager.AssessmentRoleArgs>[]>;
    /**
     * The wrapper of AWS accounts and services that are in scope for the assessment.
     */
    scope?: pulumi.Input<inputs.auditmanager.AssessmentScopeArgs>;
    /**
     * The overall status of the assessment.
     *
     * When you create a new assessment, the initial `Status` value is always `ACTIVE` . When you create an assessment, even if you specify the value as `INACTIVE` , the value overrides to `ACTIVE` .
     *
     * After you create an assessment, you can change the value of the `Status` property at any time. For example, when you want to stop collecting evidence for your assessment, you can change the assessment status to `INACTIVE` .
     */
    status?: pulumi.Input<enums.auditmanager.AssessmentStatus>;
    /**
     * The tags associated with the assessment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
