import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A resource schema for a Detector in Amazon Fraud Detector.
 */
export declare class Detector extends pulumi.CustomResource {
    /**
     * Get an existing Detector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Detector;
    /**
     * Returns true if the given object is an instance of Detector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Detector;
    /**
     * The ARN of the detector.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The models to associate with this detector.
     */
    readonly associatedModels: pulumi.Output<outputs.frauddetector.DetectorModel[] | undefined>;
    /**
     * The time when the detector was created.
     */
    readonly createdTime: pulumi.Output<string>;
    /**
     * The description of the detector.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of the detector
     */
    readonly detectorId: pulumi.Output<string>;
    /**
     * The active version ID of the detector
     */
    readonly detectorVersionId: pulumi.Output<string>;
    /**
     * The desired detector version status for the detector
     */
    readonly detectorVersionStatus: pulumi.Output<enums.frauddetector.DetectorVersionStatus | undefined>;
    /**
     * The event type to associate this detector with.
     */
    readonly eventType: pulumi.Output<outputs.frauddetector.DetectorEventType>;
    /**
     * The time when the detector was last updated.
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * The rule execution mode for the rules included in the detector version.
     *
     * Valid values: `FIRST_MATCHED | ALL_MATCHED` Default value: `FIRST_MATCHED`
     *
     * You can define and edit the rule mode at the detector version level, when it is in draft status.
     *
     * If you specify `FIRST_MATCHED` , Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.
     *
     * If you specifiy `ALL_MATCHED` , Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules.
     */
    readonly ruleExecutionMode: pulumi.Output<enums.frauddetector.DetectorRuleExecutionMode | undefined>;
    /**
     * The rules to include in the detector version.
     */
    readonly rules: pulumi.Output<outputs.frauddetector.DetectorRule[]>;
    /**
     * Tags associated with this detector.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Detector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DetectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Detector resource.
 */
export interface DetectorArgs {
    /**
     * The models to associate with this detector.
     */
    associatedModels?: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorModelArgs>[]>;
    /**
     * The description of the detector.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the detector
     */
    detectorId: pulumi.Input<string>;
    /**
     * The desired detector version status for the detector
     */
    detectorVersionStatus?: pulumi.Input<enums.frauddetector.DetectorVersionStatus>;
    /**
     * The event type to associate this detector with.
     */
    eventType: pulumi.Input<inputs.frauddetector.DetectorEventTypeArgs>;
    /**
     * The rule execution mode for the rules included in the detector version.
     *
     * Valid values: `FIRST_MATCHED | ALL_MATCHED` Default value: `FIRST_MATCHED`
     *
     * You can define and edit the rule mode at the detector version level, when it is in draft status.
     *
     * If you specify `FIRST_MATCHED` , Amazon Fraud Detector evaluates rules sequentially, first to last, stopping at the first matched rule. Amazon Fraud dectector then provides the outcomes for that single rule.
     *
     * If you specifiy `ALL_MATCHED` , Amazon Fraud Detector evaluates all rules and returns the outcomes for all matched rules.
     */
    ruleExecutionMode?: pulumi.Input<enums.frauddetector.DetectorRuleExecutionMode>;
    /**
     * The rules to include in the detector version.
     */
    rules: pulumi.Input<pulumi.Input<inputs.frauddetector.DetectorRuleArgs>[]>;
    /**
     * Tags associated with this detector.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
