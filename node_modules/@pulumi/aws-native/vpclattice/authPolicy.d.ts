import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Creates or updates the auth policy.
 */
export declare class AuthPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AuthPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuthPolicy;
    /**
     * Returns true if the given object is an instance of AuthPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AuthPolicy;
    /**
     * The auth policy.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
     */
    readonly policy: pulumi.Output<any>;
    /**
     * The ID or ARN of the service network or service for which the policy is created.
     */
    readonly resourceIdentifier: pulumi.Output<string>;
    /**
     * The state of the auth policy. The auth policy is only active when the auth type is set to `AWS _IAM` . If you provide a policy, then authentication and authorization decisions are made based on this policy and the client's IAM policy. If the auth type is `NONE` , then any auth policy you provide will remain inactive.
     */
    readonly state: pulumi.Output<enums.vpclattice.AuthPolicyState>;
    /**
     * Create a AuthPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AuthPolicy resource.
 */
export interface AuthPolicyArgs {
    /**
     * The auth policy.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
     */
    policy: any;
    /**
     * The ID or ARN of the service network or service for which the policy is created.
     */
    resourceIdentifier: pulumi.Input<string>;
}
