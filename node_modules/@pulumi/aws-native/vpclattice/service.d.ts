import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).
 */
export declare class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Service;
    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Service;
    /**
     * The Amazon Resource Name (ARN) of the service.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The type of IAM policy.
     *
     * - `NONE` : The resource does not use an IAM policy. This is the default.
     * - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
     */
    readonly authType: pulumi.Output<enums.vpclattice.ServiceAuthType | undefined>;
    /**
     * The ID of the service.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the certificate.
     */
    readonly certificateArn: pulumi.Output<string | undefined>;
    /**
     * The date and time that the service was created, specified in ISO-8601 format.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The custom domain name of the service.
     */
    readonly customDomainName: pulumi.Output<string | undefined>;
    /**
     * The DNS information of the service.
     */
    readonly dnsEntry: pulumi.Output<outputs.vpclattice.ServiceDnsEntry | undefined>;
    /**
     * The date and time that the service was last updated, specified in ISO-8601 format.
     */
    readonly lastUpdatedAt: pulumi.Output<string>;
    /**
     * The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The status of the service.
     */
    readonly status: pulumi.Output<enums.vpclattice.ServiceStatus>;
    /**
     * The tags for the service.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * The type of IAM policy.
     *
     * - `NONE` : The resource does not use an IAM policy. This is the default.
     * - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
     */
    authType?: pulumi.Input<enums.vpclattice.ServiceAuthType>;
    /**
     * The Amazon Resource Name (ARN) of the certificate.
     */
    certificateArn?: pulumi.Input<string>;
    /**
     * The custom domain name of the service.
     */
    customDomainName?: pulumi.Input<string>;
    /**
     * The DNS information of the service.
     */
    dnsEntry?: pulumi.Input<inputs.vpclattice.ServiceDnsEntryArgs>;
    /**
     * The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    name?: pulumi.Input<string>;
    /**
     * The tags for the service.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
