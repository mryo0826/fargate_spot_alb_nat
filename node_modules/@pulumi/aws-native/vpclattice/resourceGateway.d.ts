import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Creates a resource gateway for a service.
 */
export declare class ResourceGateway extends pulumi.CustomResource {
    /**
     * Get an existing ResourceGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceGateway;
    /**
     * Returns true if the given object is an instance of ResourceGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceGateway;
    /**
     * The Amazon Resource Name (ARN) of the resource gateway.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the resource gateway.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The type of IP address used by the resource gateway.
     */
    readonly ipAddressType: pulumi.Output<enums.vpclattice.ResourceGatewayIpAddressType | undefined>;
    /**
     * The name of the resource gateway.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    readonly securityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    readonly subnetIds: pulumi.Output<string[] | undefined>;
    /**
     * The tags for the resource gateway.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the VPC for the resource gateway.
     */
    readonly vpcIdentifier: pulumi.Output<string | undefined>;
    /**
     * Create a ResourceGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourceGatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResourceGateway resource.
 */
export interface ResourceGatewayArgs {
    /**
     * The type of IP address used by the resource gateway.
     */
    ipAddressType?: pulumi.Input<enums.vpclattice.ResourceGatewayIpAddressType>;
    /**
     * The name of the resource gateway.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of one or more security groups to associate with the endpoint network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of one or more subnets in which to create an endpoint network interface.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags for the resource gateway.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the VPC for the resource gateway.
     */
    vpcIdentifier?: pulumi.Input<string>;
}
