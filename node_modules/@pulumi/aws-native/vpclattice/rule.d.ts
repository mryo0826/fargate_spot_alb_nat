import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates a listener rule. Each listener has a default rule for checking connection requests, but you can define additional rules. Each rule consists of a priority, one or more actions, and one or more conditions.
 */
export declare class Rule extends pulumi.CustomResource {
    /**
     * Get an existing Rule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Rule;
    /**
     * Returns true if the given object is an instance of Rule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Rule;
    /**
     * Describes the action for a rule.
     */
    readonly action: pulumi.Output<outputs.vpclattice.RuleAction>;
    /**
     * The Amazon Resource Name (ARN) of the rule.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the listener.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The ID or ARN of the listener.
     */
    readonly listenerIdentifier: pulumi.Output<string | undefined>;
    /**
     * The rule match.
     */
    readonly match: pulumi.Output<outputs.vpclattice.RuleMatch>;
    /**
     * The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
     */
    readonly priority: pulumi.Output<number>;
    /**
     * The ID or ARN of the service.
     */
    readonly serviceIdentifier: pulumi.Output<string | undefined>;
    /**
     * The tags for the rule.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Rule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Rule resource.
 */
export interface RuleArgs {
    /**
     * Describes the action for a rule.
     */
    action: pulumi.Input<inputs.vpclattice.RuleActionArgs>;
    /**
     * The ID or ARN of the listener.
     */
    listenerIdentifier?: pulumi.Input<string>;
    /**
     * The rule match.
     */
    match: pulumi.Input<inputs.vpclattice.RuleMatchArgs>;
    /**
     * The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
     *
     * If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
     */
    priority: pulumi.Input<number>;
    /**
     * The ID or ARN of the service.
     */
    serviceIdentifier?: pulumi.Input<string>;
    /**
     * The tags for the rule.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
