"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackerConsumer = exports.Tracker = exports.RouteCalculator = exports.PlaceIndex = exports.Map = exports.getTrackerOutput = exports.getTracker = exports.getRouteCalculatorOutput = exports.getRouteCalculator = exports.getPlaceIndexOutput = exports.getPlaceIndex = exports.getMapOutput = exports.getMap = exports.getGeofenceCollectionOutput = exports.getGeofenceCollection = exports.getApiKeyOutput = exports.getApiKey = exports.GeofenceCollection = exports.ApiKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.GeofenceCollection = null;
utilities.lazyLoad(exports, ["GeofenceCollection"], () => require("./geofenceCollection"));
exports.getApiKey = null;
exports.getApiKeyOutput = null;
utilities.lazyLoad(exports, ["getApiKey", "getApiKeyOutput"], () => require("./getApiKey"));
exports.getGeofenceCollection = null;
exports.getGeofenceCollectionOutput = null;
utilities.lazyLoad(exports, ["getGeofenceCollection", "getGeofenceCollectionOutput"], () => require("./getGeofenceCollection"));
exports.getMap = null;
exports.getMapOutput = null;
utilities.lazyLoad(exports, ["getMap", "getMapOutput"], () => require("./getMap"));
exports.getPlaceIndex = null;
exports.getPlaceIndexOutput = null;
utilities.lazyLoad(exports, ["getPlaceIndex", "getPlaceIndexOutput"], () => require("./getPlaceIndex"));
exports.getRouteCalculator = null;
exports.getRouteCalculatorOutput = null;
utilities.lazyLoad(exports, ["getRouteCalculator", "getRouteCalculatorOutput"], () => require("./getRouteCalculator"));
exports.getTracker = null;
exports.getTrackerOutput = null;
utilities.lazyLoad(exports, ["getTracker", "getTrackerOutput"], () => require("./getTracker"));
exports.Map = null;
utilities.lazyLoad(exports, ["Map"], () => require("./map"));
exports.PlaceIndex = null;
utilities.lazyLoad(exports, ["PlaceIndex"], () => require("./placeIndex"));
exports.RouteCalculator = null;
utilities.lazyLoad(exports, ["RouteCalculator"], () => require("./routeCalculator"));
exports.Tracker = null;
utilities.lazyLoad(exports, ["Tracker"], () => require("./tracker"));
exports.TrackerConsumer = null;
utilities.lazyLoad(exports, ["TrackerConsumer"], () => require("./trackerConsumer"));
// Export enums:
__exportStar(require("../types/enums/location"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:location:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "aws-native:location:GeofenceCollection":
                return new exports.GeofenceCollection(name, undefined, { urn });
            case "aws-native:location:Map":
                return new exports.Map(name, undefined, { urn });
            case "aws-native:location:PlaceIndex":
                return new exports.PlaceIndex(name, undefined, { urn });
            case "aws-native:location:RouteCalculator":
                return new exports.RouteCalculator(name, undefined, { urn });
            case "aws-native:location:Tracker":
                return new exports.Tracker(name, undefined, { urn });
            case "aws-native:location:TrackerConsumer":
                return new exports.TrackerConsumer(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "location", _module);
//# sourceMappingURL=index.js.map