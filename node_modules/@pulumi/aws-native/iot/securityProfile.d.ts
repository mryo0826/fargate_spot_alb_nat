import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A security profile defines a set of expected behaviors for devices in your account.
 */
export declare class SecurityProfile extends pulumi.CustomResource {
    /**
     * Get an existing SecurityProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityProfile;
    /**
     * Returns true if the given object is an instance of SecurityProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityProfile;
    /**
     * A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here.
     */
    readonly additionalMetricsToRetainV2: pulumi.Output<outputs.iot.SecurityProfileMetricToRetain[] | undefined>;
    /**
     * Specifies the destinations to which alerts are sent.
     */
    readonly alertTargets: pulumi.Output<{
        [key: string]: outputs.iot.SecurityProfileAlertTarget;
    } | undefined>;
    /**
     * Specifies the behaviors that, when violated by a device (thing), cause an alert.
     */
    readonly behaviors: pulumi.Output<outputs.iot.SecurityProfileBehavior[] | undefined>;
    /**
     * A structure containing the mqtt topic for metrics export.
     */
    readonly metricsExportConfig: pulumi.Output<outputs.iot.MetricsExportConfigProperties | undefined>;
    /**
     * The ARN (Amazon resource name) of the created security profile.
     */
    readonly securityProfileArn: pulumi.Output<string>;
    /**
     * A description of the security profile.
     */
    readonly securityProfileDescription: pulumi.Output<string | undefined>;
    /**
     * A unique identifier for the security profile.
     */
    readonly securityProfileName: pulumi.Output<string | undefined>;
    /**
     * Metadata that can be used to manage the security profile.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * A set of target ARNs that the security profile is attached to.
     */
    readonly targetArns: pulumi.Output<string[] | undefined>;
    /**
     * Create a SecurityProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SecurityProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SecurityProfile resource.
 */
export interface SecurityProfileArgs {
    /**
     * A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here.
     */
    additionalMetricsToRetainV2?: pulumi.Input<pulumi.Input<inputs.iot.SecurityProfileMetricToRetainArgs>[]>;
    /**
     * Specifies the destinations to which alerts are sent.
     */
    alertTargets?: pulumi.Input<{
        [key: string]: pulumi.Input<inputs.iot.SecurityProfileAlertTargetArgs>;
    }>;
    /**
     * Specifies the behaviors that, when violated by a device (thing), cause an alert.
     */
    behaviors?: pulumi.Input<pulumi.Input<inputs.iot.SecurityProfileBehaviorArgs>[]>;
    /**
     * A structure containing the mqtt topic for metrics export.
     */
    metricsExportConfig?: pulumi.Input<inputs.iot.MetricsExportConfigPropertiesArgs>;
    /**
     * A description of the security profile.
     */
    securityProfileDescription?: pulumi.Input<string>;
    /**
     * A unique identifier for the security profile.
     */
    securityProfileName?: pulumi.Input<string>;
    /**
     * Metadata that can be used to manage the security profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * A set of target ARNs that the security profile is attached to.
     */
    targetArns?: pulumi.Input<pulumi.Input<string>[]>;
}
