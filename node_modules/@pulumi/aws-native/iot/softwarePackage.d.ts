import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * resource definition
 */
export declare class SoftwarePackage extends pulumi.CustomResource {
    /**
     * Get an existing SoftwarePackage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SoftwarePackage;
    /**
     * Returns true if the given object is an instance of SoftwarePackage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SoftwarePackage;
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the package.
     */
    readonly packageArn: pulumi.Output<string>;
    readonly packageName: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a SoftwarePackage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SoftwarePackageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SoftwarePackage resource.
 */
export interface SoftwarePackageArgs {
    description?: pulumi.Input<string>;
    packageName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
