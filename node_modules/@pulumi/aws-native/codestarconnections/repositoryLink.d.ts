import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Schema for AWS::CodeStarConnections::RepositoryLink resource which is used to aggregate repository metadata relevant to synchronizing source provider content to AWS Resources.
 */
export declare class RepositoryLink extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryLink resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RepositoryLink;
    /**
     * Returns true if the given object is an instance of RepositoryLink.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryLink;
    /**
     * The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services.
     */
    readonly connectionArn: pulumi.Output<string>;
    /**
     * The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used.
     */
    readonly encryptionKeyArn: pulumi.Output<string | undefined>;
    /**
     * the ID of the entity that owns the repository.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * The name of the external provider where your third-party code repository is configured.
     */
    readonly providerType: pulumi.Output<enums.codestarconnections.RepositoryLinkProviderType>;
    /**
     * A unique Amazon Resource Name (ARN) to designate the repository link.
     */
    readonly repositoryLinkArn: pulumi.Output<string>;
    /**
     * A UUID that uniquely identifies the RepositoryLink.
     */
    readonly repositoryLinkId: pulumi.Output<string>;
    /**
     * The repository for which the link is being created.
     */
    readonly repositoryName: pulumi.Output<string>;
    /**
     * Specifies the tags applied to a RepositoryLink.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a RepositoryLink resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryLinkArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RepositoryLink resource.
 */
export interface RepositoryLinkArgs {
    /**
     * The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services.
     */
    connectionArn: pulumi.Input<string>;
    /**
     * The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used.
     */
    encryptionKeyArn?: pulumi.Input<string>;
    /**
     * the ID of the entity that owns the repository.
     */
    ownerId: pulumi.Input<string>;
    /**
     * The repository for which the link is being created.
     */
    repositoryName: pulumi.Input<string>;
    /**
     * Specifies the tags applied to a RepositoryLink.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
