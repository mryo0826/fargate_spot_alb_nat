import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::EventSchemas::Registry
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const statesSchemasRegistry = new aws_native.eventschemas.Registry("statesSchemasRegistry", {
 *     registryName: "aws.states",
 *     description: "Contains the schemas of events emitted by AWS Step Functions",
 * });
 *
 * ```
 */
export declare class Registry extends pulumi.CustomResource {
    /**
     * Get an existing Registry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Registry;
    /**
     * Returns true if the given object is an instance of Registry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Registry;
    /**
     * A description of the registry to be created.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The ARN of the registry.
     */
    readonly registryArn: pulumi.Output<string>;
    /**
     * The name of the schema registry.
     */
    readonly registryName: pulumi.Output<string | undefined>;
    /**
     * Tags associated with the resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Registry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RegistryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Registry resource.
 */
export interface RegistryArgs {
    /**
     * A description of the registry to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the schema registry.
     */
    registryName?: pulumi.Input<string>;
    /**
     * Tags associated with the resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
