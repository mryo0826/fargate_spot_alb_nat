import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::QBusiness::Plugin Resource Type
 */
export declare class Plugin extends pulumi.CustomResource {
    /**
     * Get an existing Plugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Plugin;
    /**
     * Returns true if the given object is an instance of Plugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Plugin;
    /**
     * The identifier of the application that will contain the plugin.
     */
    readonly applicationId: pulumi.Output<string | undefined>;
    /**
     * Authentication configuration information for an Amazon Q Business plugin.
     */
    readonly authConfiguration: pulumi.Output<outputs.qbusiness.PluginAuthConfiguration0Properties | outputs.qbusiness.PluginAuthConfiguration1Properties | outputs.qbusiness.PluginAuthConfiguration2Properties>;
    /**
     * The current status of a plugin. A plugin is modified asynchronously.
     */
    readonly buildStatus: pulumi.Output<enums.qbusiness.PluginBuildStatus>;
    /**
     * The timestamp for when the plugin was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Configuration information required to create a custom plugin.
     */
    readonly customPluginConfiguration: pulumi.Output<outputs.qbusiness.PluginCustomPluginConfiguration | undefined>;
    /**
     * The name of the plugin.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of a plugin.
     */
    readonly pluginArn: pulumi.Output<string>;
    /**
     * The identifier of the plugin.
     */
    readonly pluginId: pulumi.Output<string>;
    /**
     * The plugin server URL used for configuration.
     */
    readonly serverUrl: pulumi.Output<string | undefined>;
    /**
     * The current status of the plugin.
     */
    readonly state: pulumi.Output<enums.qbusiness.PluginState | undefined>;
    /**
     * A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of the plugin.
     */
    readonly type: pulumi.Output<enums.qbusiness.PluginType>;
    /**
     * The timestamp for when the plugin was last updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a Plugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PluginArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Plugin resource.
 */
export interface PluginArgs {
    /**
     * The identifier of the application that will contain the plugin.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Authentication configuration information for an Amazon Q Business plugin.
     */
    authConfiguration: pulumi.Input<inputs.qbusiness.PluginAuthConfiguration0PropertiesArgs | inputs.qbusiness.PluginAuthConfiguration1PropertiesArgs | inputs.qbusiness.PluginAuthConfiguration2PropertiesArgs>;
    /**
     * Configuration information required to create a custom plugin.
     */
    customPluginConfiguration?: pulumi.Input<inputs.qbusiness.PluginCustomPluginConfigurationArgs>;
    /**
     * The name of the plugin.
     */
    displayName: pulumi.Input<string>;
    /**
     * The plugin server URL used for configuration.
     */
    serverUrl?: pulumi.Input<string>;
    /**
     * The current status of the plugin.
     */
    state?: pulumi.Input<enums.qbusiness.PluginState>;
    /**
     * A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of the plugin.
     */
    type: pulumi.Input<enums.qbusiness.PluginType>;
}
