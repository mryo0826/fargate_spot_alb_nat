import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::IAM::SAMLProvider
 */
export declare function getSamlProvider(args: GetSamlProviderArgs, opts?: pulumi.InvokeOptions): Promise<GetSamlProviderResult>;
export interface GetSamlProviderArgs {
    /**
     * Amazon Resource Name (ARN) of the SAML provider
     */
    arn: string;
}
export interface GetSamlProviderResult {
    /**
     * Amazon Resource Name (ARN) of the SAML provider
     */
    readonly arn?: string;
    /**
     * An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
     *
     * For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
     */
    readonly samlMetadataDocument?: string;
    /**
     * A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
     *
     * > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::IAM::SAMLProvider
 */
export declare function getSamlProviderOutput(args: GetSamlProviderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSamlProviderResult>;
export interface GetSamlProviderOutputArgs {
    /**
     * Amazon Resource Name (ARN) of the SAML provider
     */
    arn: pulumi.Input<string>;
}
