import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::IVS::RecordingConfiguration
 */
export declare class RecordingConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing RecordingConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RecordingConfiguration;
    /**
     * Returns true if the given object is an instance of RecordingConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RecordingConfiguration;
    /**
     * Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A destination configuration describes an S3 bucket where recorded video will be stored. See the DestinationConfiguration property type for more information.
     */
    readonly destinationConfiguration: pulumi.Output<outputs.ivs.RecordingConfigurationDestinationConfiguration>;
    /**
     * Recording Configuration Name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Recording Reconnect Window Seconds. (0 means disabled)
     */
    readonly recordingReconnectWindowSeconds: pulumi.Output<number | undefined>;
    /**
     * A rendition configuration describes which renditions should be recorded for a stream. See the RenditionConfiguration property type for more information.
     */
    readonly renditionConfiguration: pulumi.Output<outputs.ivs.RecordingConfigurationRenditionConfiguration | undefined>;
    /**
     * Recording Configuration State.
     */
    readonly state: pulumi.Output<enums.ivs.RecordingConfigurationState>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * A thumbnail configuration enables/disables the recording of thumbnails for a live session and controls the interval at which thumbnails are generated for the live session. See the ThumbnailConfiguration property type for more information.
     */
    readonly thumbnailConfiguration: pulumi.Output<outputs.ivs.RecordingConfigurationThumbnailConfiguration | undefined>;
    /**
     * Create a RecordingConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecordingConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RecordingConfiguration resource.
 */
export interface RecordingConfigurationArgs {
    /**
     * A destination configuration describes an S3 bucket where recorded video will be stored. See the DestinationConfiguration property type for more information.
     */
    destinationConfiguration: pulumi.Input<inputs.ivs.RecordingConfigurationDestinationConfigurationArgs>;
    /**
     * Recording Configuration Name.
     */
    name?: pulumi.Input<string>;
    /**
     * Recording Reconnect Window Seconds. (0 means disabled)
     */
    recordingReconnectWindowSeconds?: pulumi.Input<number>;
    /**
     * A rendition configuration describes which renditions should be recorded for a stream. See the RenditionConfiguration property type for more information.
     */
    renditionConfiguration?: pulumi.Input<inputs.ivs.RecordingConfigurationRenditionConfigurationArgs>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * A thumbnail configuration enables/disables the recording of thumbnails for a live session and controls the interval at which thumbnails are generated for the live session. See the ThumbnailConfiguration property type for more information.
     */
    thumbnailConfiguration?: pulumi.Input<inputs.ivs.RecordingConfigurationThumbnailConfigurationArgs>;
}
