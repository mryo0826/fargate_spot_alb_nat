import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Definition for type AWS::IVS::Stage.
 */
export declare class Stage extends pulumi.CustomResource {
    /**
     * Get an existing Stage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Stage;
    /**
     * Returns true if the given object is an instance of Stage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Stage;
    /**
     * ID of the active session within the stage.
     */
    readonly activeSessionId: pulumi.Output<string>;
    /**
     * Stage ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn: pulumi.Output<string>;
    readonly autoParticipantRecordingConfiguration: pulumi.Output<outputs.ivs.StageAutoParticipantRecordingConfiguration | undefined>;
    /**
     * Stage name
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Stage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Stage resource.
 */
export interface StageArgs {
    autoParticipantRecordingConfiguration?: pulumi.Input<inputs.ivs.StageAutoParticipantRecordingConfigurationArgs>;
    /**
     * Stage name
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
