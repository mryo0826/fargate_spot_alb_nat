import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::IVS::IngestConfiguration
 */
export declare class IngestConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing IngestConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IngestConfiguration;
    /**
     * Returns true if the given object is an instance of IngestConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IngestConfiguration;
    /**
     * IngestConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Ingest Protocol.
     */
    readonly ingestProtocol: pulumi.Output<enums.ivs.IngestConfigurationIngestProtocol | undefined>;
    /**
     * Whether ingest configuration allows insecure ingest.
     */
    readonly insecureIngest: pulumi.Output<boolean | undefined>;
    /**
     * IngestConfiguration
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Participant Id is automatically generated on creation and assigned.
     */
    readonly participantId: pulumi.Output<string>;
    /**
     * Stage ARN. A value other than an empty string indicates that stage is linked to IngestConfiguration. Default: "" (recording is disabled).
     */
    readonly stageArn: pulumi.Output<string | undefined>;
    /**
     * State of IngestConfiguration which determines whether IngestConfiguration is in use or not.
     */
    readonly state: pulumi.Output<enums.ivs.IngestConfigurationState>;
    /**
     * Stream-key value.
     */
    readonly streamKey: pulumi.Output<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * User defined indentifier for participant associated with IngestConfiguration.
     */
    readonly userId: pulumi.Output<string | undefined>;
    /**
     * Create a IngestConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IngestConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IngestConfiguration resource.
 */
export interface IngestConfigurationArgs {
    /**
     * Ingest Protocol.
     */
    ingestProtocol?: pulumi.Input<enums.ivs.IngestConfigurationIngestProtocol>;
    /**
     * Whether ingest configuration allows insecure ingest.
     */
    insecureIngest?: pulumi.Input<boolean>;
    /**
     * IngestConfiguration
     */
    name?: pulumi.Input<string>;
    /**
     * Stage ARN. A value other than an empty string indicates that stage is linked to IngestConfiguration. Default: "" (recording is disabled).
     */
    stageArn?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the asset model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * User defined indentifier for participant associated with IngestConfiguration.
     */
    userId?: pulumi.Input<string>;
}
