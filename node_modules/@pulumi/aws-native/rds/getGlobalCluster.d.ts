import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::RDS::GlobalCluster
 */
export declare function getGlobalCluster(args: GetGlobalClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalClusterResult>;
export interface GetGlobalClusterArgs {
    /**
     * The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
     */
    globalClusterIdentifier: string;
}
export interface GetGlobalClusterResult {
    /**
     * The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.
     */
    readonly deletionProtection?: boolean;
    /**
     * The life cycle type of the global cluster. You can use this setting to enroll your global cluster into Amazon RDS Extended Support.
     */
    readonly engineLifecycleSupport?: string;
    /**
     * The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
     */
    readonly engineVersion?: string;
    /**
     * The writer endpoint for the new global database cluster. This endpoint always points to the writer DB instance in the current primary cluster.
     */
    readonly globalEndpoint?: outputs.rds.GlobalClusterGlobalEndpoint;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::RDS::GlobalCluster
 */
export declare function getGlobalClusterOutput(args: GetGlobalClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGlobalClusterResult>;
export interface GetGlobalClusterOutputArgs {
    /**
     * The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
     */
    globalClusterIdentifier: pulumi.Input<string>;
}
