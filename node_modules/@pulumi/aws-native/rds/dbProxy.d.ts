import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::RDS::DBProxy
 */
export declare class DbProxy extends pulumi.CustomResource {
    /**
     * Get an existing DbProxy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DbProxy;
    /**
     * Returns true if the given object is an instance of DbProxy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DbProxy;
    /**
     * The authorization mechanism that the proxy uses.
     */
    readonly auth: pulumi.Output<outputs.rds.DbProxyAuthFormat[]>;
    /**
     * The Amazon Resource Name (ARN) for the proxy.
     */
    readonly dbProxyArn: pulumi.Output<string>;
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    readonly dbProxyName: pulumi.Output<string>;
    /**
     * Whether the proxy includes detailed information about SQL statements in its logs.
     */
    readonly debugLogging: pulumi.Output<boolean | undefined>;
    /**
     * The endpoint that you can use to connect to the proxy. You include the endpoint value in the connection string for a database client application.
     */
    readonly endpoint: pulumi.Output<string>;
    /**
     * The kinds of databases that the proxy can connect to.
     */
    readonly engineFamily: pulumi.Output<enums.rds.DbProxyEngineFamily>;
    /**
     * The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
     */
    readonly idleClientTimeout: pulumi.Output<number | undefined>;
    /**
     * A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
     */
    readonly requireTls: pulumi.Output<boolean | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * VPC ID to associate with the new DB proxy.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * VPC security group IDs to associate with the new proxy.
     */
    readonly vpcSecurityGroupIds: pulumi.Output<string[] | undefined>;
    /**
     * VPC subnet IDs to associate with the new proxy.
     */
    readonly vpcSubnetIds: pulumi.Output<string[]>;
    /**
     * Create a DbProxy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbProxyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DbProxy resource.
 */
export interface DbProxyArgs {
    /**
     * The authorization mechanism that the proxy uses.
     */
    auth: pulumi.Input<pulumi.Input<inputs.rds.DbProxyAuthFormatArgs>[]>;
    /**
     * The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
     */
    dbProxyName?: pulumi.Input<string>;
    /**
     * Whether the proxy includes detailed information about SQL statements in its logs.
     */
    debugLogging?: pulumi.Input<boolean>;
    /**
     * The kinds of databases that the proxy can connect to.
     */
    engineFamily: pulumi.Input<enums.rds.DbProxyEngineFamily>;
    /**
     * The number of seconds that a connection to the proxy can be inactive before the proxy disconnects it.
     */
    idleClientTimeout?: pulumi.Input<number>;
    /**
     * A Boolean parameter that specifies whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
     */
    requireTls?: pulumi.Input<boolean>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access secrets in AWS Secrets Manager.
     */
    roleArn: pulumi.Input<string>;
    /**
     * An optional set of key-value pairs to associate arbitrary data of your choosing with the proxy.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * VPC security group IDs to associate with the new proxy.
     */
    vpcSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC subnet IDs to associate with the new proxy.
     */
    vpcSubnetIds: pulumi.Input<pulumi.Input<string>[]>;
}
