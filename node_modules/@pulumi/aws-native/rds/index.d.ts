export { CustomDbEngineVersionArgs } from "./customDbEngineVersion";
export type CustomDbEngineVersion = import("./customDbEngineVersion").CustomDbEngineVersion;
export declare const CustomDbEngineVersion: typeof import("./customDbEngineVersion").CustomDbEngineVersion;
export { DbClusterArgs } from "./dbCluster";
export type DbCluster = import("./dbCluster").DbCluster;
export declare const DbCluster: typeof import("./dbCluster").DbCluster;
export { DbClusterParameterGroupArgs } from "./dbClusterParameterGroup";
export type DbClusterParameterGroup = import("./dbClusterParameterGroup").DbClusterParameterGroup;
export declare const DbClusterParameterGroup: typeof import("./dbClusterParameterGroup").DbClusterParameterGroup;
export { DbInstanceArgs } from "./dbInstance";
export type DbInstance = import("./dbInstance").DbInstance;
export declare const DbInstance: typeof import("./dbInstance").DbInstance;
export { DbParameterGroupArgs } from "./dbParameterGroup";
export type DbParameterGroup = import("./dbParameterGroup").DbParameterGroup;
export declare const DbParameterGroup: typeof import("./dbParameterGroup").DbParameterGroup;
export { DbProxyArgs } from "./dbProxy";
export type DbProxy = import("./dbProxy").DbProxy;
export declare const DbProxy: typeof import("./dbProxy").DbProxy;
export { DbProxyEndpointArgs } from "./dbProxyEndpoint";
export type DbProxyEndpoint = import("./dbProxyEndpoint").DbProxyEndpoint;
export declare const DbProxyEndpoint: typeof import("./dbProxyEndpoint").DbProxyEndpoint;
export { DbProxyTargetGroupArgs } from "./dbProxyTargetGroup";
export type DbProxyTargetGroup = import("./dbProxyTargetGroup").DbProxyTargetGroup;
export declare const DbProxyTargetGroup: typeof import("./dbProxyTargetGroup").DbProxyTargetGroup;
export { DbShardGroupArgs } from "./dbShardGroup";
export type DbShardGroup = import("./dbShardGroup").DbShardGroup;
export declare const DbShardGroup: typeof import("./dbShardGroup").DbShardGroup;
export { DbSubnetGroupArgs } from "./dbSubnetGroup";
export type DbSubnetGroup = import("./dbSubnetGroup").DbSubnetGroup;
export declare const DbSubnetGroup: typeof import("./dbSubnetGroup").DbSubnetGroup;
export { EventSubscriptionArgs } from "./eventSubscription";
export type EventSubscription = import("./eventSubscription").EventSubscription;
export declare const EventSubscription: typeof import("./eventSubscription").EventSubscription;
export { GetCustomDbEngineVersionArgs, GetCustomDbEngineVersionResult, GetCustomDbEngineVersionOutputArgs } from "./getCustomDbEngineVersion";
export declare const getCustomDbEngineVersion: typeof import("./getCustomDbEngineVersion").getCustomDbEngineVersion;
export declare const getCustomDbEngineVersionOutput: typeof import("./getCustomDbEngineVersion").getCustomDbEngineVersionOutput;
export { GetDbClusterArgs, GetDbClusterResult, GetDbClusterOutputArgs } from "./getDbCluster";
export declare const getDbCluster: typeof import("./getDbCluster").getDbCluster;
export declare const getDbClusterOutput: typeof import("./getDbCluster").getDbClusterOutput;
export { GetDbClusterParameterGroupArgs, GetDbClusterParameterGroupResult, GetDbClusterParameterGroupOutputArgs } from "./getDbClusterParameterGroup";
export declare const getDbClusterParameterGroup: typeof import("./getDbClusterParameterGroup").getDbClusterParameterGroup;
export declare const getDbClusterParameterGroupOutput: typeof import("./getDbClusterParameterGroup").getDbClusterParameterGroupOutput;
export { GetDbInstanceArgs, GetDbInstanceResult, GetDbInstanceOutputArgs } from "./getDbInstance";
export declare const getDbInstance: typeof import("./getDbInstance").getDbInstance;
export declare const getDbInstanceOutput: typeof import("./getDbInstance").getDbInstanceOutput;
export { GetDbParameterGroupArgs, GetDbParameterGroupResult, GetDbParameterGroupOutputArgs } from "./getDbParameterGroup";
export declare const getDbParameterGroup: typeof import("./getDbParameterGroup").getDbParameterGroup;
export declare const getDbParameterGroupOutput: typeof import("./getDbParameterGroup").getDbParameterGroupOutput;
export { GetDbProxyArgs, GetDbProxyResult, GetDbProxyOutputArgs } from "./getDbProxy";
export declare const getDbProxy: typeof import("./getDbProxy").getDbProxy;
export declare const getDbProxyOutput: typeof import("./getDbProxy").getDbProxyOutput;
export { GetDbProxyEndpointArgs, GetDbProxyEndpointResult, GetDbProxyEndpointOutputArgs } from "./getDbProxyEndpoint";
export declare const getDbProxyEndpoint: typeof import("./getDbProxyEndpoint").getDbProxyEndpoint;
export declare const getDbProxyEndpointOutput: typeof import("./getDbProxyEndpoint").getDbProxyEndpointOutput;
export { GetDbProxyTargetGroupArgs, GetDbProxyTargetGroupResult, GetDbProxyTargetGroupOutputArgs } from "./getDbProxyTargetGroup";
export declare const getDbProxyTargetGroup: typeof import("./getDbProxyTargetGroup").getDbProxyTargetGroup;
export declare const getDbProxyTargetGroupOutput: typeof import("./getDbProxyTargetGroup").getDbProxyTargetGroupOutput;
export { GetDbShardGroupArgs, GetDbShardGroupResult, GetDbShardGroupOutputArgs } from "./getDbShardGroup";
export declare const getDbShardGroup: typeof import("./getDbShardGroup").getDbShardGroup;
export declare const getDbShardGroupOutput: typeof import("./getDbShardGroup").getDbShardGroupOutput;
export { GetDbSubnetGroupArgs, GetDbSubnetGroupResult, GetDbSubnetGroupOutputArgs } from "./getDbSubnetGroup";
export declare const getDbSubnetGroup: typeof import("./getDbSubnetGroup").getDbSubnetGroup;
export declare const getDbSubnetGroupOutput: typeof import("./getDbSubnetGroup").getDbSubnetGroupOutput;
export { GetEventSubscriptionArgs, GetEventSubscriptionResult, GetEventSubscriptionOutputArgs } from "./getEventSubscription";
export declare const getEventSubscription: typeof import("./getEventSubscription").getEventSubscription;
export declare const getEventSubscriptionOutput: typeof import("./getEventSubscription").getEventSubscriptionOutput;
export { GetGlobalClusterArgs, GetGlobalClusterResult, GetGlobalClusterOutputArgs } from "./getGlobalCluster";
export declare const getGlobalCluster: typeof import("./getGlobalCluster").getGlobalCluster;
export declare const getGlobalClusterOutput: typeof import("./getGlobalCluster").getGlobalClusterOutput;
export { GetIntegrationArgs, GetIntegrationResult, GetIntegrationOutputArgs } from "./getIntegration";
export declare const getIntegration: typeof import("./getIntegration").getIntegration;
export declare const getIntegrationOutput: typeof import("./getIntegration").getIntegrationOutput;
export { GetOptionGroupArgs, GetOptionGroupResult, GetOptionGroupOutputArgs } from "./getOptionGroup";
export declare const getOptionGroup: typeof import("./getOptionGroup").getOptionGroup;
export declare const getOptionGroupOutput: typeof import("./getOptionGroup").getOptionGroupOutput;
export { GlobalClusterArgs } from "./globalCluster";
export type GlobalCluster = import("./globalCluster").GlobalCluster;
export declare const GlobalCluster: typeof import("./globalCluster").GlobalCluster;
export { IntegrationArgs } from "./integration";
export type Integration = import("./integration").Integration;
export declare const Integration: typeof import("./integration").Integration;
export { OptionGroupArgs } from "./optionGroup";
export type OptionGroup = import("./optionGroup").OptionGroup;
export declare const OptionGroup: typeof import("./optionGroup").OptionGroup;
export * from "../types/enums/rds";
