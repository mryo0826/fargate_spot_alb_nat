import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Creates a custom DB engine version (CEV).
 */
export declare class CustomDbEngineVersion extends pulumi.CustomResource {
    /**
     * Get an existing CustomDbEngineVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomDbEngineVersion;
    /**
     * Returns true if the given object is an instance of CustomDbEngineVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomDbEngineVersion;
    /**
     * The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
     */
    readonly databaseInstallationFilesS3BucketName: pulumi.Output<string | undefined>;
    /**
     * The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
     */
    readonly databaseInstallationFilesS3Prefix: pulumi.Output<string | undefined>;
    /**
     * The ARN of the custom engine version.
     */
    readonly dbEngineVersionArn: pulumi.Output<string>;
    /**
     * An optional description of your CEV.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The database engine to use for your custom engine version (CEV).
     *  Valid values:
     *   +   ``custom-oracle-ee``
     *   +   ``custom-oracle-ee-cdb``
     */
    readonly engine: pulumi.Output<string>;
    /**
     * The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
     *   *Constraints:* Minimum length is 1. Maximum length is 60.
     *   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
     */
    readonly engineVersion: pulumi.Output<string>;
    /**
     * A value that indicates the ID of the AMI.
     */
    readonly imageId: pulumi.Output<string | undefined>;
    /**
     * The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
     *  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
     *  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
     *  The following JSON fields are valid:
     *   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
     *  For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
     */
    readonly manifest: pulumi.Output<string | undefined>;
    /**
     * The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
     */
    readonly sourceCustomDbEngineVersionIdentifier: pulumi.Output<string | undefined>;
    /**
     * A value that indicates the status of a custom engine version (CEV).
     */
    readonly status: pulumi.Output<enums.rds.CustomDbEngineVersionStatus | undefined>;
    /**
     * A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
     */
    readonly useAwsProvidedLatestImage: pulumi.Output<boolean | undefined>;
    /**
     * Create a CustomDbEngineVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDbEngineVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CustomDbEngineVersion resource.
 */
export interface CustomDbEngineVersionArgs {
    /**
     * The name of an Amazon S3 bucket that contains database installation files for your CEV. For example, a valid bucket name is ``my-custom-installation-files``.
     */
    databaseInstallationFilesS3BucketName?: pulumi.Input<string>;
    /**
     * The Amazon S3 directory that contains the database installation files for your CEV. For example, a valid bucket name is ``123456789012/cev1``. If this setting isn't specified, no prefix is assumed.
     */
    databaseInstallationFilesS3Prefix?: pulumi.Input<string>;
    /**
     * An optional description of your CEV.
     */
    description?: pulumi.Input<string>;
    /**
     * The database engine to use for your custom engine version (CEV).
     *  Valid values:
     *   +   ``custom-oracle-ee``
     *   +   ``custom-oracle-ee-cdb``
     */
    engine: pulumi.Input<string>;
    /**
     * The name of your CEV. The name format is ``major version.customized_string``. For example, a valid CEV name is ``19.my_cev1``. This setting is required for RDS Custom for Oracle, but optional for Amazon RDS. The combination of ``Engine`` and ``EngineVersion`` is unique per customer per Region.
     *   *Constraints:* Minimum length is 1. Maximum length is 60.
     *   *Pattern:* ``^[a-z0-9_.-]{1,60$``}
     */
    engineVersion: pulumi.Input<string>;
    /**
     * A value that indicates the ID of the AMI.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The AWS KMS key identifier for an encrypted CEV. A symmetric encryption KMS key is required for RDS Custom, but optional for Amazon RDS.
     *  If you have an existing symmetric encryption KMS key in your account, you can use it with RDS Custom. No further action is necessary. If you don't already have a symmetric encryption KMS key in your account, follow the instructions in [Creating a symmetric encryption KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html#create-symmetric-cmk) in the *Key Management Service Developer Guide*.
     *  You can choose the same symmetric encryption key when you create a CEV and a DB instance, or choose different keys.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The CEV manifest, which is a JSON document that describes the installation .zip files stored in Amazon S3. Specify the name/value pairs in a file or a quoted string. RDS Custom applies the patches in the order in which they are listed.
     *  The following JSON fields are valid:
     *   + MediaImportTemplateVersion Version of the CEV manifest. The date is in the format YYYY-MM-DD. + databaseInstallationFileNames Ordered list of installation files for the CEV. + opatchFileNames Ordered list of OPatch installers used for the Oracle DB engine. + psuRuPatchFileNames The PSU and RU patches for this CEV. + OtherPatchFileNames The patches that are not in the list of PSU and RU patches. Amazon RDS applies these patches after applying the PSU and RU patches.
     *  For more information, see [Creating the CEV manifest](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-cev.html#custom-cev.preparing.manifest) in the *Amazon RDS User Guide*.
     */
    manifest?: pulumi.Input<string>;
    /**
     * The ARN of a CEV to use as a source for creating a new CEV. You can specify a different Amazon Machine Imagine (AMI) by using either ``Source`` or ``UseAwsProvidedLatestImage``. You can't specify a different JSON manifest when you specify ``SourceCustomDbEngineVersionIdentifier``.
     */
    sourceCustomDbEngineVersionIdentifier?: pulumi.Input<string>;
    /**
     * A value that indicates the status of a custom engine version (CEV).
     */
    status?: pulumi.Input<enums.rds.CustomDbEngineVersionStatus>;
    /**
     * A list of tags. For more information, see [Tagging Amazon RDS Resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the *Amazon RDS User Guide.*
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Specifies whether to use the latest service-provided Amazon Machine Image (AMI) for the CEV. If you specify ``UseAwsProvidedLatestImage``, you can't also specify ``ImageId``.
     */
    useAwsProvidedLatestImage?: pulumi.Input<boolean>;
}
