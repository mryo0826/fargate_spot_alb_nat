"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDbClusterParameterGroupOutput = exports.getDbClusterParameterGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The ``AWS::RDS::DBClusterParameterGroup`` resource creates a new Amazon RDS DB cluster parameter group.
 *  For information about configuring parameters for Amazon Aurora DB clusters, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html) in the *Amazon Aurora User Guide*.
 *   If you apply a parameter group to a DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
 *  If you apply a change to parameter group associated with a stopped DB cluster, then the updated stack waits until the DB cluster is started.
 */
function getDbClusterParameterGroup(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:rds:getDbClusterParameterGroup", {
        "dbClusterParameterGroupName": args.dbClusterParameterGroupName,
    }, opts);
}
exports.getDbClusterParameterGroup = getDbClusterParameterGroup;
/**
 * The ``AWS::RDS::DBClusterParameterGroup`` resource creates a new Amazon RDS DB cluster parameter group.
 *  For information about configuring parameters for Amazon Aurora DB clusters, see [Working with parameter groups](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_WorkingWithParamGroups.html) in the *Amazon Aurora User Guide*.
 *   If you apply a parameter group to a DB cluster, then its DB instances might need to reboot. This can result in an outage while the DB instances are rebooting.
 *  If you apply a change to parameter group associated with a stopped DB cluster, then the updated stack waits until the DB cluster is started.
 */
function getDbClusterParameterGroupOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:rds:getDbClusterParameterGroup", {
        "dbClusterParameterGroupName": args.dbClusterParameterGroupName,
    }, opts);
}
exports.getDbClusterParameterGroupOutput = getDbClusterParameterGroupOutput;
//# sourceMappingURL=getDbClusterParameterGroup.js.map