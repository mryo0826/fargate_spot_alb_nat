import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The ``AWS::RDS::DBSubnetGroup`` resource creates a database subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.
 *  For more information, see [Working with DB subnet groups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html#USER_VPC.Subnets) in the *Amazon RDS User Guide*.
 */
export declare class DbSubnetGroup extends pulumi.CustomResource {
    /**
     * Get an existing DbSubnetGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DbSubnetGroup;
    /**
     * Returns true if the given object is an instance of DbSubnetGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DbSubnetGroup;
    /**
     * The description for the DB subnet group.
     */
    readonly dbSubnetGroupDescription: pulumi.Output<string>;
    /**
     * The name for the DB subnet group. This value is stored as a lowercase string.
     *  Constraints:
     *   +  Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens.
     *   +  Must not be default.
     *   +  First character must be a letter.
     *
     *  Example: ``mydbsubnetgroup``
     */
    readonly dbSubnetGroupName: pulumi.Output<string | undefined>;
    /**
     * The EC2 Subnet IDs for the DB subnet group.
     */
    readonly subnetIds: pulumi.Output<string[]>;
    /**
     * Tags to assign to the DB subnet group.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a DbSubnetGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DbSubnetGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DbSubnetGroup resource.
 */
export interface DbSubnetGroupArgs {
    /**
     * The description for the DB subnet group.
     */
    dbSubnetGroupDescription: pulumi.Input<string>;
    /**
     * The name for the DB subnet group. This value is stored as a lowercase string.
     *  Constraints:
     *   +  Must contain no more than 255 letters, numbers, periods, underscores, spaces, or hyphens.
     *   +  Must not be default.
     *   +  First character must be a letter.
     *
     *  Example: ``mydbsubnetgroup``
     */
    dbSubnetGroupName?: pulumi.Input<string>;
    /**
     * The EC2 Subnet IDs for the DB subnet group.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags to assign to the DB subnet group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
