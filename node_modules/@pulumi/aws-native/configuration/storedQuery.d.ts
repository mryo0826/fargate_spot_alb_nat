import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Config::StoredQuery
 */
export declare class StoredQuery extends pulumi.CustomResource {
    /**
     * Get an existing StoredQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StoredQuery;
    /**
     * Returns true if the given object is an instance of StoredQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StoredQuery;
    /**
     * Amazon Resource Name (ARN) of the query. For example, arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
     */
    readonly queryArn: pulumi.Output<string>;
    /**
     * A unique description for the query.
     */
    readonly queryDescription: pulumi.Output<string | undefined>;
    /**
     * The expression of the query. For example, `SELECT resourceId, resourceType, supplementaryConfiguration.BucketVersioningConfiguration.status WHERE resourceType = 'AWS::S3::Bucket' AND supplementaryConfiguration.BucketVersioningConfiguration.status = 'Off'.`
     */
    readonly queryExpression: pulumi.Output<string>;
    /**
     * The ID of the query.
     */
    readonly queryId: pulumi.Output<string>;
    /**
     * The name of the query.
     */
    readonly queryName: pulumi.Output<string>;
    /**
     * The tags for the stored query.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a StoredQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StoredQueryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StoredQuery resource.
 */
export interface StoredQueryArgs {
    /**
     * A unique description for the query.
     */
    queryDescription?: pulumi.Input<string>;
    /**
     * The expression of the query. For example, `SELECT resourceId, resourceType, supplementaryConfiguration.BucketVersioningConfiguration.status WHERE resourceType = 'AWS::S3::Bucket' AND supplementaryConfiguration.BucketVersioningConfiguration.status = 'Off'.`
     */
    queryExpression: pulumi.Input<string>;
    /**
     * The name of the query.
     */
    queryName?: pulumi.Input<string>;
    /**
     * The tags for the stored query.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
