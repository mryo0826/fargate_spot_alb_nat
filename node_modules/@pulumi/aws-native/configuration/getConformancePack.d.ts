import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a region or across an entire AWS Organization.
 */
export declare function getConformancePack(args: GetConformancePackArgs, opts?: pulumi.InvokeOptions): Promise<GetConformancePackResult>;
export interface GetConformancePackArgs {
    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     */
    conformancePackName: string;
}
export interface GetConformancePackResult {
    /**
     * A list of ConformancePackInputParameter objects.
     */
    readonly conformancePackInputParameters?: outputs.configuration.ConformancePackInputParameter[];
    /**
     * AWS Config stores intermediate files while processing conformance pack template.
     */
    readonly deliveryS3Bucket?: string;
    /**
     * The prefix for delivery S3 bucket.
     */
    readonly deliveryS3KeyPrefix?: string;
}
/**
 * A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a region or across an entire AWS Organization.
 */
export declare function getConformancePackOutput(args: GetConformancePackOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConformancePackResult>;
export interface GetConformancePackOutputArgs {
    /**
     * Name of the conformance pack which will be assigned as the unique identifier.
     */
    conformancePackName: pulumi.Input<string>;
}
