import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Config::AggregationAuthorization
 */
export declare function getAggregationAuthorization(args: GetAggregationAuthorizationArgs, opts?: pulumi.InvokeOptions): Promise<GetAggregationAuthorizationResult>;
export interface GetAggregationAuthorizationArgs {
    /**
     * The 12-digit account ID of the account authorized to aggregate data.
     */
    authorizedAccountId: string;
    /**
     * The region authorized to collect aggregated data.
     */
    authorizedAwsRegion: string;
}
export interface GetAggregationAuthorizationResult {
    /**
     * The ARN of the AggregationAuthorization.
     */
    readonly aggregationAuthorizationArn?: string;
    /**
     * The tags for the AggregationAuthorization.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Config::AggregationAuthorization
 */
export declare function getAggregationAuthorizationOutput(args: GetAggregationAuthorizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAggregationAuthorizationResult>;
export interface GetAggregationAuthorizationOutputArgs {
    /**
     * The 12-digit account ID of the account authorized to aggregate data.
     */
    authorizedAccountId: pulumi.Input<string>;
    /**
     * The region authorized to collect aggregated data.
     */
    authorizedAwsRegion: pulumi.Input<string>;
}
