import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Config::StoredQuery
 */
export declare function getStoredQuery(args: GetStoredQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetStoredQueryResult>;
export interface GetStoredQueryArgs {
    /**
     * The name of the query.
     */
    queryName: string;
}
export interface GetStoredQueryResult {
    /**
     * Amazon Resource Name (ARN) of the query. For example, arn:partition:service:region:account-id:resource-type/resource-name/resource-id.
     */
    readonly queryArn?: string;
    /**
     * A unique description for the query.
     */
    readonly queryDescription?: string;
    /**
     * The expression of the query. For example, `SELECT resourceId, resourceType, supplementaryConfiguration.BucketVersioningConfiguration.status WHERE resourceType = 'AWS::S3::Bucket' AND supplementaryConfiguration.BucketVersioningConfiguration.status = 'Off'.`
     */
    readonly queryExpression?: string;
    /**
     * The ID of the query.
     */
    readonly queryId?: string;
    /**
     * The tags for the stored query.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Config::StoredQuery
 */
export declare function getStoredQueryOutput(args: GetStoredQueryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStoredQueryResult>;
export interface GetStoredQueryOutputArgs {
    /**
     * The name of the query.
     */
    queryName: pulumi.Input<string>;
}
