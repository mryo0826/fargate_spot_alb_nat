import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Proton::ServiceTemplate Resource Type
 */
export declare class ServiceTemplate extends pulumi.CustomResource {
    /**
     * Get an existing ServiceTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceTemplate;
    /**
     * Returns true if the given object is an instance of ServiceTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceTemplate;
    /**
     * <p>The Amazon Resource Name (ARN) of the service template.</p>
     */
    readonly arn: pulumi.Output<string>;
    /**
     * <p>A description of the service template.</p>
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * <p>The name of the service template as displayed in the developer interface.</p>
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * <p>A customer provided encryption key that's used to encrypt data.</p>
     */
    readonly encryptionKey: pulumi.Output<string | undefined>;
    /**
     * The name of the service template.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * If `pipelineProvisioning` is `true` , a service pipeline is included in the service template. Otherwise, a service pipeline *isn't* included in the service template.
     */
    readonly pipelineProvisioning: pulumi.Output<enums.proton.ServiceTemplateProvisioning | undefined>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p>
     *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     *         <i>Proton User Guide</i>.</p>
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ServiceTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ServiceTemplate resource.
 */
export interface ServiceTemplateArgs {
    /**
     * <p>A description of the service template.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * <p>The name of the service template as displayed in the developer interface.</p>
     */
    displayName?: pulumi.Input<string>;
    /**
     * <p>A customer provided encryption key that's used to encrypt data.</p>
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The name of the service template.
     */
    name?: pulumi.Input<string>;
    /**
     * If `pipelineProvisioning` is `true` , a service pipeline is included in the service template. Otherwise, a service pipeline *isn't* included in the service template.
     */
    pipelineProvisioning?: pulumi.Input<enums.proton.ServiceTemplateProvisioning>;
    /**
     * <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p>
     *          <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the
     *         <i>Proton User Guide</i>.</p>
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
