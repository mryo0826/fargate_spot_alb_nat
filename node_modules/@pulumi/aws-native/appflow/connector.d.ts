import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::AppFlow::Connector
 */
export declare class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector;
    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connector;
    /**
     *  The arn of the connector. The arn is unique for each ConnectorRegistration in your AWS account.
     */
    readonly connectorArn: pulumi.Output<string>;
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    readonly connectorLabel: pulumi.Output<string | undefined>;
    /**
     * Contains information about the configuration of the connector being registered.
     */
    readonly connectorProvisioningConfig: pulumi.Output<outputs.appflow.ConnectorProvisioningConfig>;
    /**
     * The provisioning type of the connector. Currently the only supported value is LAMBDA.
     */
    readonly connectorProvisioningType: pulumi.Output<string>;
    /**
     * A description about the connector that's being registered.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     *  The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.
     */
    connectorLabel?: pulumi.Input<string>;
    /**
     * Contains information about the configuration of the connector being registered.
     */
    connectorProvisioningConfig: pulumi.Input<inputs.appflow.ConnectorProvisioningConfigArgs>;
    /**
     * The provisioning type of the connector. Currently the only supported value is LAMBDA.
     */
    connectorProvisioningType: pulumi.Input<string>;
    /**
     * A description about the connector that's being registered.
     */
    description?: pulumi.Input<string>;
}
