import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::GameLift::Build
 */
export declare function getBuild(args: GetBuildArgs, opts?: pulumi.InvokeOptions): Promise<GetBuildResult>;
export interface GetBuildArgs {
    /**
     * A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
     */
    buildId: string;
}
export interface GetBuildResult {
    /**
     * A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
     */
    readonly buildId?: string;
    /**
     * A descriptive label that is associated with a build. Build names do not need to be unique.
     */
    readonly name?: string;
    /**
     * Version information that is associated with this build. Version strings do not need to be unique.
     */
    readonly version?: string;
}
/**
 * Resource Type definition for AWS::GameLift::Build
 */
export declare function getBuildOutput(args: GetBuildOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBuildResult>;
export interface GetBuildOutputArgs {
    /**
     * A unique identifier for a build to be deployed on the new fleet. If you are deploying the fleet with a custom game build, you must specify this property. The build must have been successfully uploaded to Amazon GameLift and be in a READY status. This fleet setting cannot be changed once the fleet is created.
     */
    buildId: pulumi.Input<string>;
}
