"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Script = exports.MatchmakingRuleSet = exports.MatchmakingConfiguration = exports.Location = exports.getScriptOutput = exports.getScript = exports.getMatchmakingRuleSetOutput = exports.getMatchmakingRuleSet = exports.getMatchmakingConfigurationOutput = exports.getMatchmakingConfiguration = exports.getLocationOutput = exports.getLocation = exports.getGameSessionQueueOutput = exports.getGameSessionQueue = exports.getGameServerGroupOutput = exports.getGameServerGroup = exports.getFleetOutput = exports.getFleet = exports.getContainerGroupDefinitionOutput = exports.getContainerGroupDefinition = exports.getContainerFleetOutput = exports.getContainerFleet = exports.getBuildOutput = exports.getBuild = exports.getAliasOutput = exports.getAlias = exports.GameSessionQueue = exports.GameServerGroup = exports.Fleet = exports.ContainerGroupDefinition = exports.ContainerFleet = exports.Build = exports.Alias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Alias = null;
utilities.lazyLoad(exports, ["Alias"], () => require("./alias"));
exports.Build = null;
utilities.lazyLoad(exports, ["Build"], () => require("./build"));
exports.ContainerFleet = null;
utilities.lazyLoad(exports, ["ContainerFleet"], () => require("./containerFleet"));
exports.ContainerGroupDefinition = null;
utilities.lazyLoad(exports, ["ContainerGroupDefinition"], () => require("./containerGroupDefinition"));
exports.Fleet = null;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));
exports.GameServerGroup = null;
utilities.lazyLoad(exports, ["GameServerGroup"], () => require("./gameServerGroup"));
exports.GameSessionQueue = null;
utilities.lazyLoad(exports, ["GameSessionQueue"], () => require("./gameSessionQueue"));
exports.getAlias = null;
exports.getAliasOutput = null;
utilities.lazyLoad(exports, ["getAlias", "getAliasOutput"], () => require("./getAlias"));
exports.getBuild = null;
exports.getBuildOutput = null;
utilities.lazyLoad(exports, ["getBuild", "getBuildOutput"], () => require("./getBuild"));
exports.getContainerFleet = null;
exports.getContainerFleetOutput = null;
utilities.lazyLoad(exports, ["getContainerFleet", "getContainerFleetOutput"], () => require("./getContainerFleet"));
exports.getContainerGroupDefinition = null;
exports.getContainerGroupDefinitionOutput = null;
utilities.lazyLoad(exports, ["getContainerGroupDefinition", "getContainerGroupDefinitionOutput"], () => require("./getContainerGroupDefinition"));
exports.getFleet = null;
exports.getFleetOutput = null;
utilities.lazyLoad(exports, ["getFleet", "getFleetOutput"], () => require("./getFleet"));
exports.getGameServerGroup = null;
exports.getGameServerGroupOutput = null;
utilities.lazyLoad(exports, ["getGameServerGroup", "getGameServerGroupOutput"], () => require("./getGameServerGroup"));
exports.getGameSessionQueue = null;
exports.getGameSessionQueueOutput = null;
utilities.lazyLoad(exports, ["getGameSessionQueue", "getGameSessionQueueOutput"], () => require("./getGameSessionQueue"));
exports.getLocation = null;
exports.getLocationOutput = null;
utilities.lazyLoad(exports, ["getLocation", "getLocationOutput"], () => require("./getLocation"));
exports.getMatchmakingConfiguration = null;
exports.getMatchmakingConfigurationOutput = null;
utilities.lazyLoad(exports, ["getMatchmakingConfiguration", "getMatchmakingConfigurationOutput"], () => require("./getMatchmakingConfiguration"));
exports.getMatchmakingRuleSet = null;
exports.getMatchmakingRuleSetOutput = null;
utilities.lazyLoad(exports, ["getMatchmakingRuleSet", "getMatchmakingRuleSetOutput"], () => require("./getMatchmakingRuleSet"));
exports.getScript = null;
exports.getScriptOutput = null;
utilities.lazyLoad(exports, ["getScript", "getScriptOutput"], () => require("./getScript"));
exports.Location = null;
utilities.lazyLoad(exports, ["Location"], () => require("./location"));
exports.MatchmakingConfiguration = null;
utilities.lazyLoad(exports, ["MatchmakingConfiguration"], () => require("./matchmakingConfiguration"));
exports.MatchmakingRuleSet = null;
utilities.lazyLoad(exports, ["MatchmakingRuleSet"], () => require("./matchmakingRuleSet"));
exports.Script = null;
utilities.lazyLoad(exports, ["Script"], () => require("./script"));
// Export enums:
__exportStar(require("../types/enums/gamelift"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:gamelift:Alias":
                return new exports.Alias(name, undefined, { urn });
            case "aws-native:gamelift:Build":
                return new exports.Build(name, undefined, { urn });
            case "aws-native:gamelift:ContainerFleet":
                return new exports.ContainerFleet(name, undefined, { urn });
            case "aws-native:gamelift:ContainerGroupDefinition":
                return new exports.ContainerGroupDefinition(name, undefined, { urn });
            case "aws-native:gamelift:Fleet":
                return new exports.Fleet(name, undefined, { urn });
            case "aws-native:gamelift:GameServerGroup":
                return new exports.GameServerGroup(name, undefined, { urn });
            case "aws-native:gamelift:GameSessionQueue":
                return new exports.GameSessionQueue(name, undefined, { urn });
            case "aws-native:gamelift:Location":
                return new exports.Location(name, undefined, { urn });
            case "aws-native:gamelift:MatchmakingConfiguration":
                return new exports.MatchmakingConfiguration(name, undefined, { urn });
            case "aws-native:gamelift:MatchmakingRuleSet":
                return new exports.MatchmakingRuleSet(name, undefined, { urn });
            case "aws-native:gamelift:Script":
                return new exports.Script(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "gamelift", _module);
//# sourceMappingURL=index.js.map