import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
 */
export declare function getGameServerGroup(args: GetGameServerGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGameServerGroupResult>;
export interface GetGameServerGroupArgs {
    /**
     * A generated unique ID for the game server group.
     */
    gameServerGroupArn: string;
}
export interface GetGameServerGroupResult {
    /**
     * A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.
     */
    readonly autoScalingGroupArn?: string;
    /**
     * The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.
     */
    readonly balancingStrategy?: enums.gamelift.GameServerGroupBalancingStrategy;
    /**
     * A generated unique ID for the game server group.
     */
    readonly gameServerGroupArn?: string;
    /**
     * An identifier for the new game server group.
     */
    readonly gameServerGroupName?: string;
    /**
     * A flag that indicates whether instances in the game server group are protected from early termination.
     */
    readonly gameServerProtectionPolicy?: enums.gamelift.GameServerGroupGameServerProtectionPolicy;
    /**
     * A set of EC2 instance types to use when creating instances in the group.
     */
    readonly instanceDefinitions?: outputs.gamelift.GameServerGroupInstanceDefinition[];
    /**
     * The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
     */
    readonly roleArn?: string;
}
/**
 * The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.
 */
export declare function getGameServerGroupOutput(args: GetGameServerGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGameServerGroupResult>;
export interface GetGameServerGroupOutputArgs {
    /**
     * A generated unique ID for the game server group.
     */
    gameServerGroupArn: pulumi.Input<string>;
}
