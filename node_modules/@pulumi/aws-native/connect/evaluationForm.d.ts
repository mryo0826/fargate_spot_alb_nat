import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Creates an evaluation form for the specified CON instance.
 */
export declare class EvaluationForm extends pulumi.CustomResource {
    /**
     * Get an existing EvaluationForm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EvaluationForm;
    /**
     * Returns true if the given object is an instance of EvaluationForm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EvaluationForm;
    /**
     * The description of the evaluation form.
     *   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the evaluation form.
     */
    readonly evaluationFormArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn: pulumi.Output<string>;
    /**
     * Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
     *   *Minimum size*: 1
     *   *Maximum size*: 100
     */
    readonly items: pulumi.Output<outputs.connect.EvaluationFormBaseItem[]>;
    /**
     * A scoring strategy of the evaluation form.
     */
    readonly scoringStrategy: pulumi.Output<outputs.connect.EvaluationFormScoringStrategy | undefined>;
    /**
     * The status of the evaluation form.
     *   *Allowed values*: ``DRAFT`` | ``ACTIVE``
     */
    readonly status: pulumi.Output<enums.connect.EvaluationFormStatus>;
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * A title of the evaluation form.
     */
    readonly title: pulumi.Output<string>;
    /**
     * Create a EvaluationForm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EvaluationFormArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a EvaluationForm resource.
 */
export interface EvaluationFormArgs {
    /**
     * The description of the evaluation form.
     *   *Length Constraints*: Minimum length of 0. Maximum length of 1024.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
     *   *Minimum size*: 1
     *   *Maximum size*: 100
     */
    items: pulumi.Input<pulumi.Input<inputs.connect.EvaluationFormBaseItemArgs>[]>;
    /**
     * A scoring strategy of the evaluation form.
     */
    scoringStrategy?: pulumi.Input<inputs.connect.EvaluationFormScoringStrategyArgs>;
    /**
     * The status of the evaluation form.
     *   *Allowed values*: ``DRAFT`` | ``ACTIVE``
     */
    status: pulumi.Input<enums.connect.EvaluationFormStatus>;
    /**
     * The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * A title of the evaluation form.
     */
    title: pulumi.Input<string>;
}
