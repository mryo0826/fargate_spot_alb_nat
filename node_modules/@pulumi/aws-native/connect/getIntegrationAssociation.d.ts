import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Connect::IntegrationAssociation
 */
export declare function getIntegrationAssociation(args: GetIntegrationAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetIntegrationAssociationResult>;
export interface GetIntegrationAssociationArgs {
    /**
     * The Amazon Resource Name (ARN) of the instance.
     *
     * *Minimum* : `1`
     *
     * *Maximum* : `100`
     */
    instanceId: string;
    /**
     * ARN of the integration being associated with the instance.
     *
     * *Minimum* : `1`
     *
     * *Maximum* : `140`
     */
    integrationArn: string;
    /**
     * Specifies the integration type to be associated with the instance.
     *
     * *Allowed Values* : `LEX_BOT` | `LAMBDA_FUNCTION`
     */
    integrationType: enums.connect.IntegrationAssociationIntegrationType;
}
export interface GetIntegrationAssociationResult {
    /**
     * Identifier of the association with an Amazon Connect instance.
     */
    readonly integrationAssociationId?: string;
}
/**
 * Resource Type definition for AWS::Connect::IntegrationAssociation
 */
export declare function getIntegrationAssociationOutput(args: GetIntegrationAssociationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIntegrationAssociationResult>;
export interface GetIntegrationAssociationOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the instance.
     *
     * *Minimum* : `1`
     *
     * *Maximum* : `100`
     */
    instanceId: pulumi.Input<string>;
    /**
     * ARN of the integration being associated with the instance.
     *
     * *Minimum* : `1`
     *
     * *Maximum* : `140`
     */
    integrationArn: pulumi.Input<string>;
    /**
     * Specifies the integration type to be associated with the instance.
     *
     * *Allowed Values* : `LEX_BOT` | `LAMBDA_FUNCTION`
     */
    integrationType: pulumi.Input<enums.connect.IntegrationAssociationIntegrationType>;
}
