import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Connect::RoutingProfile
 */
export declare class RoutingProfile extends pulumi.CustomResource {
    /**
     * Get an existing RoutingProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoutingProfile;
    /**
     * Returns true if the given object is an instance of RoutingProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RoutingProfile;
    /**
     * Whether agents with this routing profile will have their routing order calculated based on longest idle time or time since their last inbound contact.
     */
    readonly agentAvailabilityTimer: pulumi.Output<enums.connect.RoutingProfileAgentAvailabilityTimer | undefined>;
    /**
     * The identifier of the default outbound queue for this routing profile.
     */
    readonly defaultOutboundQueueArn: pulumi.Output<string>;
    /**
     * The description of the routing profile.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn: pulumi.Output<string>;
    /**
     * The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
     */
    readonly mediaConcurrencies: pulumi.Output<outputs.connect.RoutingProfileMediaConcurrency[]>;
    /**
     * The name of the routing profile.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The queues to associate with this routing profile.
     */
    readonly queueConfigs: pulumi.Output<outputs.connect.RoutingProfileQueueConfig[] | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the routing profile.
     */
    readonly routingProfileArn: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a RoutingProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutingProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RoutingProfile resource.
 */
export interface RoutingProfileArgs {
    /**
     * Whether agents with this routing profile will have their routing order calculated based on longest idle time or time since their last inbound contact.
     */
    agentAvailabilityTimer?: pulumi.Input<enums.connect.RoutingProfileAgentAvailabilityTimer>;
    /**
     * The identifier of the default outbound queue for this routing profile.
     */
    defaultOutboundQueueArn: pulumi.Input<string>;
    /**
     * The description of the routing profile.
     */
    description: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
     */
    mediaConcurrencies: pulumi.Input<pulumi.Input<inputs.connect.RoutingProfileMediaConcurrencyArgs>[]>;
    /**
     * The name of the routing profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The queues to associate with this routing profile.
     */
    queueConfigs?: pulumi.Input<pulumi.Input<inputs.connect.RoutingProfileQueueConfigArgs>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
