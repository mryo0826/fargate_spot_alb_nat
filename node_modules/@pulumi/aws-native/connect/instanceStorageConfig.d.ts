import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Connect::InstanceStorageConfig
 */
export declare class InstanceStorageConfig extends pulumi.CustomResource {
    /**
     * Get an existing InstanceStorageConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InstanceStorageConfig;
    /**
     * Returns true if the given object is an instance of InstanceStorageConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is InstanceStorageConfig;
    /**
     * The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
     */
    readonly associationId: pulumi.Output<string>;
    /**
     * Connect Instance ID with which the storage config will be associated
     */
    readonly instanceArn: pulumi.Output<string>;
    /**
     * The configuration of the Kinesis Firehose delivery stream.
     */
    readonly kinesisFirehoseConfig: pulumi.Output<outputs.connect.InstanceStorageConfigKinesisFirehoseConfig | undefined>;
    /**
     * The configuration of the Kinesis data stream.
     */
    readonly kinesisStreamConfig: pulumi.Output<outputs.connect.InstanceStorageConfigKinesisStreamConfig | undefined>;
    /**
     * The configuration of the Kinesis video stream.
     */
    readonly kinesisVideoStreamConfig: pulumi.Output<outputs.connect.InstanceStorageConfigKinesisVideoStreamConfig | undefined>;
    /**
     * A valid resource type. Following are the valid resource types: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS`
     */
    readonly resourceType: pulumi.Output<enums.connect.InstanceStorageConfigInstanceStorageResourceType>;
    /**
     * The S3 bucket configuration.
     */
    readonly s3Config: pulumi.Output<outputs.connect.InstanceStorageConfigS3Config | undefined>;
    /**
     * A valid storage type.
     */
    readonly storageType: pulumi.Output<enums.connect.InstanceStorageConfigStorageType>;
    /**
     * Create a InstanceStorageConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceStorageConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a InstanceStorageConfig resource.
 */
export interface InstanceStorageConfigArgs {
    /**
     * Connect Instance ID with which the storage config will be associated
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The configuration of the Kinesis Firehose delivery stream.
     */
    kinesisFirehoseConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigKinesisFirehoseConfigArgs>;
    /**
     * The configuration of the Kinesis data stream.
     */
    kinesisStreamConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigKinesisStreamConfigArgs>;
    /**
     * The configuration of the Kinesis video stream.
     */
    kinesisVideoStreamConfig?: pulumi.Input<inputs.connect.InstanceStorageConfigKinesisVideoStreamConfigArgs>;
    /**
     * A valid resource type. Following are the valid resource types: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS`
     */
    resourceType: pulumi.Input<enums.connect.InstanceStorageConfigInstanceStorageResourceType>;
    /**
     * The S3 bucket configuration.
     */
    s3Config?: pulumi.Input<inputs.connect.InstanceStorageConfigS3ConfigArgs>;
    /**
     * A valid storage type.
     */
    storageType: pulumi.Input<enums.connect.InstanceStorageConfigStorageType>;
}
