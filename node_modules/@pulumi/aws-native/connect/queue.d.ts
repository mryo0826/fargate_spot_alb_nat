import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Type definition for AWS::Connect::Queue
 */
export declare class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Queue;
    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Queue;
    /**
     * The description of the queue.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The identifier for the hours of operation.
     */
    readonly hoursOfOperationArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    readonly instanceArn: pulumi.Output<string>;
    /**
     * The maximum number of contacts that can be in the queue before it is considered full.
     */
    readonly maxContacts: pulumi.Output<number | undefined>;
    /**
     * The name of the queue.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The outbound caller ID name, number, and outbound whisper flow.
     */
    readonly outboundCallerConfig: pulumi.Output<outputs.connect.QueueOutboundCallerConfig | undefined>;
    /**
     * The outbound email address ID.
     */
    readonly outboundEmailConfig: pulumi.Output<outputs.connect.QueueOutboundEmailConfig | undefined>;
    /**
     * The Amazon Resource Name (ARN) for the queue.
     */
    readonly queueArn: pulumi.Output<string>;
    /**
     * The quick connects available to agents who are working the queue.
     */
    readonly quickConnectArns: pulumi.Output<string[] | undefined>;
    /**
     * The status of the queue.
     */
    readonly status: pulumi.Output<enums.connect.QueueStatus | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of queue.
     */
    readonly type: pulumi.Output<enums.connect.QueueType>;
    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    /**
     * The description of the queue.
     */
    description?: pulumi.Input<string>;
    /**
     * The identifier for the hours of operation.
     */
    hoursOfOperationArn: pulumi.Input<string>;
    /**
     * The identifier of the Amazon Connect instance.
     */
    instanceArn: pulumi.Input<string>;
    /**
     * The maximum number of contacts that can be in the queue before it is considered full.
     */
    maxContacts?: pulumi.Input<number>;
    /**
     * The name of the queue.
     */
    name?: pulumi.Input<string>;
    /**
     * The outbound caller ID name, number, and outbound whisper flow.
     */
    outboundCallerConfig?: pulumi.Input<inputs.connect.QueueOutboundCallerConfigArgs>;
    /**
     * The outbound email address ID.
     */
    outboundEmailConfig?: pulumi.Input<inputs.connect.QueueOutboundEmailConfigArgs>;
    /**
     * The quick connects available to agents who are working the queue.
     */
    quickConnectArns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the queue.
     */
    status?: pulumi.Input<enums.connect.QueueStatus>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
