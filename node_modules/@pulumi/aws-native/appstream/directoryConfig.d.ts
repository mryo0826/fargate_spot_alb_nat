import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::AppStream::DirectoryConfig
 */
export declare class DirectoryConfig extends pulumi.CustomResource {
    /**
     * Get an existing DirectoryConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DirectoryConfig;
    /**
     * Returns true if the given object is an instance of DirectoryConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DirectoryConfig;
    /**
     * The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
     */
    readonly certificateBasedAuthProperties: pulumi.Output<outputs.appstream.DirectoryConfigCertificateBasedAuthProperties | undefined>;
    /**
     * The fully qualified name of the directory (for example, corp.example.com).
     */
    readonly directoryName: pulumi.Output<string>;
    /**
     * The distinguished names of the organizational units for computer accounts.
     */
    readonly organizationalUnitDistinguishedNames: pulumi.Output<string[]>;
    /**
     * The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use `ServiceAccountCredentials` as an input parameter with `noEcho` as shown in the [Parameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html) . For best practices information, see [Do Not Embed Credentials in Your Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds) .
     */
    readonly serviceAccountCredentials: pulumi.Output<outputs.appstream.DirectoryConfigServiceAccountCredentials>;
    /**
     * Create a DirectoryConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DirectoryConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DirectoryConfig resource.
 */
export interface DirectoryConfigArgs {
    /**
     * The certificate-based authentication properties used to authenticate SAML 2.0 Identity Provider (IdP) user identities to Active Directory domain-joined streaming instances.
     */
    certificateBasedAuthProperties?: pulumi.Input<inputs.appstream.DirectoryConfigCertificateBasedAuthPropertiesArgs>;
    /**
     * The fully qualified name of the directory (for example, corp.example.com).
     */
    directoryName: pulumi.Input<string>;
    /**
     * The distinguished names of the organizational units for computer accounts.
     */
    organizationalUnitDistinguishedNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The credentials for the service account used by the streaming instance to connect to the directory. Do not use this parameter directly. Use `ServiceAccountCredentials` as an input parameter with `noEcho` as shown in the [Parameters](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html) . For best practices information, see [Do Not Embed Credentials in Your Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#creds) .
     */
    serviceAccountCredentials: pulumi.Input<inputs.appstream.DirectoryConfigServiceAccountCredentialsArgs>;
}
