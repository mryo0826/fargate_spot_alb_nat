"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Application = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::AppStream::Application
 */
class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Application(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }
    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.appBlockArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appBlockArn'");
            }
            if ((!args || args.iconS3Location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iconS3Location'");
            }
            if ((!args || args.instanceFamilies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceFamilies'");
            }
            if ((!args || args.launchPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'launchPath'");
            }
            if ((!args || args.platforms === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platforms'");
            }
            resourceInputs["appBlockArn"] = args ? args.appBlockArn : undefined;
            resourceInputs["attributesToDelete"] = args ? args.attributesToDelete : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["iconS3Location"] = args ? args.iconS3Location : undefined;
            resourceInputs["instanceFamilies"] = args ? args.instanceFamilies : undefined;
            resourceInputs["launchParameters"] = args ? args.launchParameters : undefined;
            resourceInputs["launchPath"] = args ? args.launchPath : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["platforms"] = args ? args.platforms : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workingDirectory"] = args ? args.workingDirectory : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
        }
        else {
            resourceInputs["appBlockArn"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["attributesToDelete"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["iconS3Location"] = undefined /*out*/;
            resourceInputs["instanceFamilies"] = undefined /*out*/;
            resourceInputs["launchParameters"] = undefined /*out*/;
            resourceInputs["launchPath"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["platforms"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["workingDirectory"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["instanceFamilies[*]", "name", "platforms[*]"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Application = Application;
/** @internal */
Application.__pulumiType = 'aws-native:appstream:Application';
//# sourceMappingURL=application.js.map