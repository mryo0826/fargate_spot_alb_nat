import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Backup::LogicallyAirGappedBackupVault
 */
export declare class LogicallyAirGappedBackupVault extends pulumi.CustomResource {
    /**
     * Get an existing LogicallyAirGappedBackupVault resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LogicallyAirGappedBackupVault;
    /**
     * Returns true if the given object is an instance of LogicallyAirGappedBackupVault.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LogicallyAirGappedBackupVault;
    /**
     * The backup vault access policy document in JSON format.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::LogicallyAirGappedBackupVault` for more information about the expected schema for this property.
     */
    readonly accessPolicy: pulumi.Output<any | undefined>;
    readonly backupVaultArn: pulumi.Output<string>;
    /**
     * The name of a logical container where backups are stored. Logically air-gapped backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.
     */
    readonly backupVaultName: pulumi.Output<string>;
    /**
     * The tags to assign to the vault.
     */
    readonly backupVaultTags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly encryptionKeyArn: pulumi.Output<string>;
    /**
     * The maximum retention period that the vault retains its recovery points.
     */
    readonly maxRetentionDays: pulumi.Output<number>;
    /**
     * This setting specifies the minimum retention period that the vault retains its recovery points.
     *
     * The minimum value accepted is 7 days.
     */
    readonly minRetentionDays: pulumi.Output<number>;
    /**
     * Returns event notifications for the specified backup vault.
     */
    readonly notifications: pulumi.Output<outputs.backup.LogicallyAirGappedBackupVaultNotificationObjectType | undefined>;
    /**
     * The current state of the vault.
     */
    readonly vaultState: pulumi.Output<string | undefined>;
    /**
     * The type of vault described.
     */
    readonly vaultType: pulumi.Output<string | undefined>;
    /**
     * Create a LogicallyAirGappedBackupVault resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogicallyAirGappedBackupVaultArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LogicallyAirGappedBackupVault resource.
 */
export interface LogicallyAirGappedBackupVaultArgs {
    /**
     * The backup vault access policy document in JSON format.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::LogicallyAirGappedBackupVault` for more information about the expected schema for this property.
     */
    accessPolicy?: any;
    /**
     * The name of a logical container where backups are stored. Logically air-gapped backup vaults are identified by names that are unique to the account used to create them and the Region where they are created.
     */
    backupVaultName?: pulumi.Input<string>;
    /**
     * The tags to assign to the vault.
     */
    backupVaultTags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The maximum retention period that the vault retains its recovery points.
     */
    maxRetentionDays: pulumi.Input<number>;
    /**
     * This setting specifies the minimum retention period that the vault retains its recovery points.
     *
     * The minimum value accepted is 7 days.
     */
    minRetentionDays: pulumi.Input<number>;
    /**
     * Returns event notifications for the specified backup vault.
     */
    notifications?: pulumi.Input<inputs.backup.LogicallyAirGappedBackupVaultNotificationObjectTypeArgs>;
    /**
     * The current state of the vault.
     */
    vaultState?: pulumi.Input<string>;
    /**
     * The type of vault described.
     */
    vaultType?: pulumi.Input<string>;
}
