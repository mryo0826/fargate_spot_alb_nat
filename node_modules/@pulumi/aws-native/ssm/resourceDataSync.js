"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceDataSync = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::SSM::ResourceDataSync
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncToDestination",
 *     s3Destination: {
 *         bucketName: "test-bucket",
 *         bucketRegion: "us-east-2",
 *         syncFormat: "JsonSerDe",
 *         bucketPrefix: "cfn",
 *         kmsKeyArn: "kmsKeyARN",
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncToDestination",
 *     s3Destination: {
 *         bucketName: "test-bucket",
 *         bucketRegion: "us-east-2",
 *         syncFormat: "JsonSerDe",
 *         bucketPrefix: "cfn",
 *         kmsKeyArn: "kmsKeyARN",
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "SingleAccountMultiRegions",
 *         sourceRegions: [
 *             "us-east-1",
 *             "us-west-1",
 *             "us-west-2",
 *         ],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "SingleAccountMultiRegions",
 *         sourceRegions: [
 *             "us-east-1",
 *             "us-west-1",
 *             "us-west-2",
 *         ],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "AwsOrganizations",
 *         awsOrganizationsSource: {
 *             organizationSourceType: "EntireOrganization",
 *         },
 *         sourceRegions: ["us-west-1"],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "AwsOrganizations",
 *         awsOrganizationsSource: {
 *             organizationSourceType: "EntireOrganization",
 *         },
 *         sourceRegions: ["us-west-1"],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "AwsOrganizations",
 *         awsOrganizationsSource: {
 *             organizationSourceType: "OrganizationalUnits",
 *             organizationalUnits: ["ou-12345"],
 *         },
 *         sourceRegions: ["us-west-1"],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicResourceDataSync = new aws_native.ssm.ResourceDataSync("basicResourceDataSync", {
 *     syncName: "test-sync",
 *     syncType: "SyncFromSource",
 *     syncSource: {
 *         sourceType: "AwsOrganizations",
 *         awsOrganizationsSource: {
 *             organizationSourceType: "OrganizationalUnits",
 *             organizationalUnits: ["ou-12345"],
 *         },
 *         sourceRegions: ["us-west-1"],
 *         includeFutureRegions: false,
 *     },
 * });
 *
 * ```
 */
class ResourceDataSync extends pulumi.CustomResource {
    /**
     * Get an existing ResourceDataSync resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ResourceDataSync(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ResourceDataSync.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceDataSync.__pulumiType;
    }
    /**
     * Create a ResourceDataSync resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["bucketName"] = args ? args.bucketName : undefined;
            resourceInputs["bucketPrefix"] = args ? args.bucketPrefix : undefined;
            resourceInputs["bucketRegion"] = args ? args.bucketRegion : undefined;
            resourceInputs["kmsKeyArn"] = args ? args.kmsKeyArn : undefined;
            resourceInputs["s3Destination"] = args ? args.s3Destination : undefined;
            resourceInputs["syncFormat"] = args ? args.syncFormat : undefined;
            resourceInputs["syncName"] = args ? args.syncName : undefined;
            resourceInputs["syncSource"] = args ? args.syncSource : undefined;
            resourceInputs["syncType"] = args ? args.syncType : undefined;
        }
        else {
            resourceInputs["bucketName"] = undefined /*out*/;
            resourceInputs["bucketPrefix"] = undefined /*out*/;
            resourceInputs["bucketRegion"] = undefined /*out*/;
            resourceInputs["kmsKeyArn"] = undefined /*out*/;
            resourceInputs["s3Destination"] = undefined /*out*/;
            resourceInputs["syncFormat"] = undefined /*out*/;
            resourceInputs["syncName"] = undefined /*out*/;
            resourceInputs["syncSource"] = undefined /*out*/;
            resourceInputs["syncType"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["bucketName", "bucketPrefix", "bucketRegion", "kmsKeyArn", "s3Destination", "syncFormat", "syncName", "syncType"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ResourceDataSync.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ResourceDataSync = ResourceDataSync;
/** @internal */
ResourceDataSync.__pulumiType = 'aws-native:ssm:ResourceDataSync';
//# sourceMappingURL=resourceDataSync.js.map