import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Deadline::StorageProfile Resource Type
 */
export declare class StorageProfile extends pulumi.CustomResource {
    /**
     * Get an existing StorageProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageProfile;
    /**
     * Returns true if the given object is an instance of StorageProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StorageProfile;
    /**
     * The display name of the storage profile summary to update.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    readonly displayName: pulumi.Output<string>;
    /**
     * The unique identifier of the farm that contains the storage profile.
     */
    readonly farmId: pulumi.Output<string>;
    /**
     * Operating system specific file system path to the storage location.
     */
    readonly fileSystemLocations: pulumi.Output<outputs.deadline.StorageProfileFileSystemLocation[] | undefined>;
    /**
     * The operating system (OS) family.
     */
    readonly osFamily: pulumi.Output<enums.deadline.StorageProfileOperatingSystemFamily>;
    /**
     * The storage profile ID.
     */
    readonly storageProfileId: pulumi.Output<string>;
    /**
     * Create a StorageProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a StorageProfile resource.
 */
export interface StorageProfileArgs {
    /**
     * The display name of the storage profile summary to update.
     *
     * > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
     */
    displayName: pulumi.Input<string>;
    /**
     * The unique identifier of the farm that contains the storage profile.
     */
    farmId: pulumi.Input<string>;
    /**
     * Operating system specific file system path to the storage location.
     */
    fileSystemLocations?: pulumi.Input<pulumi.Input<inputs.deadline.StorageProfileFileSystemLocationArgs>[]>;
    /**
     * The operating system (OS) family.
     */
    osFamily: pulumi.Input<enums.deadline.StorageProfileOperatingSystemFamily>;
}
