import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Deadline::LicenseEndpoint Resource Type
 */
export declare class LicenseEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing LicenseEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LicenseEndpoint;
    /**
     * Returns true if the given object is an instance of LicenseEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LicenseEndpoint;
    /**
     * The Amazon Resource Name (ARN) of the license endpoint.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The DNS name of the license server endpoint.
     */
    readonly dnsName: pulumi.Output<string>;
    /**
     * The license endpoint ID.
     */
    readonly licenseEndpointId: pulumi.Output<string>;
    /**
     * The identifier of the Amazon EC2 security group that controls access to the license endpoint.
     */
    readonly securityGroupIds: pulumi.Output<string[]>;
    /**
     * The status of the license endpoint.
     */
    readonly status: pulumi.Output<enums.deadline.LicenseEndpointStatus>;
    /**
     * The status message of the license endpoint.
     */
    readonly statusMessage: pulumi.Output<string>;
    /**
     * Identifies the VPC subnets that can connect to a license endpoint.
     */
    readonly subnetIds: pulumi.Output<string[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The VCP(virtual private cloud) ID associated with the license endpoint.
     */
    readonly vpcId: pulumi.Output<string>;
    /**
     * Create a LicenseEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LicenseEndpointArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LicenseEndpoint resource.
 */
export interface LicenseEndpointArgs {
    /**
     * The identifier of the Amazon EC2 security group that controls access to the license endpoint.
     */
    securityGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifies the VPC subnets that can connect to a license endpoint.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The VCP(virtual private cloud) ID associated with the license endpoint.
     */
    vpcId: pulumi.Input<string>;
}
