import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Deadline::QueueEnvironment Resource Type
 */
export declare class QueueEnvironment extends pulumi.CustomResource {
    /**
     * Get an existing QueueEnvironment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): QueueEnvironment;
    /**
     * Returns true if the given object is an instance of QueueEnvironment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is QueueEnvironment;
    /**
     * The identifier assigned to the farm that contains the queue.
     */
    readonly farmId: pulumi.Output<string>;
    /**
     * The name of the queue environment.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The queue environment's priority.
     */
    readonly priority: pulumi.Output<number>;
    /**
     * The queue environment ID.
     */
    readonly queueEnvironmentId: pulumi.Output<string>;
    /**
     * The unique identifier of the queue that contains the environment.
     */
    readonly queueId: pulumi.Output<string>;
    /**
     * A JSON or YAML template that describes the processing environment for the queue.
     */
    readonly template: pulumi.Output<string>;
    /**
     * Specifies whether the template for the queue environment is JSON or YAML.
     */
    readonly templateType: pulumi.Output<enums.deadline.QueueEnvironmentEnvironmentTemplateType>;
    /**
     * Create a QueueEnvironment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: QueueEnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a QueueEnvironment resource.
 */
export interface QueueEnvironmentArgs {
    /**
     * The identifier assigned to the farm that contains the queue.
     */
    farmId: pulumi.Input<string>;
    /**
     * The queue environment's priority.
     */
    priority: pulumi.Input<number>;
    /**
     * The unique identifier of the queue that contains the environment.
     */
    queueId: pulumi.Input<string>;
    /**
     * A JSON or YAML template that describes the processing environment for the queue.
     */
    template: pulumi.Input<string>;
    /**
     * Specifies whether the template for the queue environment is JSON or YAML.
     */
    templateType: pulumi.Input<enums.deadline.QueueEnvironmentEnvironmentTemplateType>;
}
