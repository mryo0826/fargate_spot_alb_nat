import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The ``AWS::ApiGateway::Stage`` resource creates a stage for a deployment.
 */
export declare class Stage extends pulumi.CustomResource {
    /**
     * Get an existing Stage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Stage;
    /**
     * Returns true if the given object is an instance of Stage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Stage;
    /**
     * Access log settings, including the access log format and access log destination ARN.
     */
    readonly accessLogSetting: pulumi.Output<outputs.apigateway.StageAccessLogSetting | undefined>;
    /**
     * Specifies whether a cache cluster is enabled for the stage. To activate a method-level cache, set `CachingEnabled` to `true` for a method.
     */
    readonly cacheClusterEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The stage's cache capacity in GB. For more information about choosing a cache size, see [Enabling API caching to enhance responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html) .
     */
    readonly cacheClusterSize: pulumi.Output<string | undefined>;
    /**
     * Settings for the canary deployment in this stage.
     */
    readonly canarySetting: pulumi.Output<outputs.apigateway.StageCanarySetting | undefined>;
    /**
     * The identifier of a client certificate for an API stage.
     */
    readonly clientCertificateId: pulumi.Output<string | undefined>;
    /**
     * The identifier of the Deployment that the stage points to.
     */
    readonly deploymentId: pulumi.Output<string | undefined>;
    /**
     * The stage's description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The version of the associated API documentation.
     */
    readonly documentationVersion: pulumi.Output<string | undefined>;
    /**
     * A map that defines the method settings for a Stage resource. Keys (designated as `/{method_setting_key` below) are method paths defined as `{resource_path}/{http_method}` for an individual method override, or `/\*&#47;\*` for overriding all methods in the stage.
     */
    readonly methodSettings: pulumi.Output<outputs.apigateway.StageMethodSetting[] | undefined>;
    /**
     * The string identifier of the associated RestApi.
     */
    readonly restApiId: pulumi.Output<string>;
    /**
     * The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
     */
    readonly stageName: pulumi.Output<string | undefined>;
    /**
     * The collection of tags. Each tag element is associated with a given resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Specifies whether active tracing with X-ray is enabled for the Stage.
     */
    readonly tracingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&=,]+``.
     */
    readonly variables: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a Stage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Stage resource.
 */
export interface StageArgs {
    /**
     * Access log settings, including the access log format and access log destination ARN.
     */
    accessLogSetting?: pulumi.Input<inputs.apigateway.StageAccessLogSettingArgs>;
    /**
     * Specifies whether a cache cluster is enabled for the stage. To activate a method-level cache, set `CachingEnabled` to `true` for a method.
     */
    cacheClusterEnabled?: pulumi.Input<boolean>;
    /**
     * The stage's cache capacity in GB. For more information about choosing a cache size, see [Enabling API caching to enhance responsiveness](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-caching.html) .
     */
    cacheClusterSize?: pulumi.Input<string>;
    /**
     * Settings for the canary deployment in this stage.
     */
    canarySetting?: pulumi.Input<inputs.apigateway.StageCanarySettingArgs>;
    /**
     * The identifier of a client certificate for an API stage.
     */
    clientCertificateId?: pulumi.Input<string>;
    /**
     * The identifier of the Deployment that the stage points to.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * The stage's description.
     */
    description?: pulumi.Input<string>;
    /**
     * The version of the associated API documentation.
     */
    documentationVersion?: pulumi.Input<string>;
    /**
     * A map that defines the method settings for a Stage resource. Keys (designated as `/{method_setting_key` below) are method paths defined as `{resource_path}/{http_method}` for an individual method override, or `/\*&#47;\*` for overriding all methods in the stage.
     */
    methodSettings?: pulumi.Input<pulumi.Input<inputs.apigateway.StageMethodSettingArgs>[]>;
    /**
     * The string identifier of the associated RestApi.
     */
    restApiId: pulumi.Input<string>;
    /**
     * The name of the stage is the first path segment in the Uniform Resource Identifier (URI) of a call to API Gateway. Stage names can only contain alphanumeric characters, hyphens, and underscores. Maximum length is 128 characters.
     */
    stageName?: pulumi.Input<string>;
    /**
     * The collection of tags. Each tag element is associated with a given resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Specifies whether active tracing with X-ray is enabled for the Stage.
     */
    tracingEnabled?: pulumi.Input<boolean>;
    /**
     * A map (string-to-string map) that defines the stage variables, where the variable name is the key and the variable value is the value. Variable names are limited to alphanumeric characters. Values must match the following regular expression: ``[A-Za-z0-9-._~:/?#&=,]+``.
     */
    variables?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
