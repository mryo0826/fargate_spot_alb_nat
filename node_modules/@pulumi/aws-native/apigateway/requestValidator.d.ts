import * as pulumi from "@pulumi/pulumi";
/**
 * The ``AWS::ApiGateway::RequestValidator`` resource sets up basic validation rules for incoming requests to your API. For more information, see [Enable Basic Request Validation for an API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-request-validation.html) in the *API Gateway Developer Guide*.
 */
export declare class RequestValidator extends pulumi.CustomResource {
    /**
     * Get an existing RequestValidator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RequestValidator;
    /**
     * Returns true if the given object is an instance of RequestValidator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RequestValidator;
    /**
     * The name of this RequestValidator
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The ID for the request validator. For example: `abc123` .
     */
    readonly requestValidatorId: pulumi.Output<string>;
    /**
     * The string identifier of the associated RestApi.
     */
    readonly restApiId: pulumi.Output<string>;
    /**
     * A Boolean flag to indicate whether to validate a request body according to the configured Model schema.
     */
    readonly validateRequestBody: pulumi.Output<boolean | undefined>;
    /**
     * A Boolean flag to indicate whether to validate request parameters ( `true` ) or not ( `false` ).
     */
    readonly validateRequestParameters: pulumi.Output<boolean | undefined>;
    /**
     * Create a RequestValidator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RequestValidatorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RequestValidator resource.
 */
export interface RequestValidatorArgs {
    /**
     * The name of this RequestValidator
     */
    name?: pulumi.Input<string>;
    /**
     * The string identifier of the associated RestApi.
     */
    restApiId: pulumi.Input<string>;
    /**
     * A Boolean flag to indicate whether to validate a request body according to the configured Model schema.
     */
    validateRequestBody?: pulumi.Input<boolean>;
    /**
     * A Boolean flag to indicate whether to validate request parameters ( `true` ) or not ( `false` ).
     */
    validateRequestParameters?: pulumi.Input<boolean>;
}
