"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStage = exports.getRestApiOutput = exports.getRestApi = exports.getResourceOutput = exports.getResource = exports.getRequestValidatorOutput = exports.getRequestValidator = exports.getModelOutput = exports.getModel = exports.getMethodOutput = exports.getMethod = exports.getGatewayResponseOutput = exports.getGatewayResponse = exports.getDomainNameV2Output = exports.getDomainNameV2 = exports.getDomainNameAccessAssociationOutput = exports.getDomainNameAccessAssociation = exports.getDomainNameOutput = exports.getDomainName = exports.getDocumentationVersionOutput = exports.getDocumentationVersion = exports.getDocumentationPartOutput = exports.getDocumentationPart = exports.getDeploymentOutput = exports.getDeployment = exports.getClientCertificateOutput = exports.getClientCertificate = exports.getBasePathMappingV2Output = exports.getBasePathMappingV2 = exports.getBasePathMappingOutput = exports.getBasePathMapping = exports.getAuthorizerOutput = exports.getAuthorizer = exports.getApiKeyOutput = exports.getApiKey = exports.getAccountOutput = exports.getAccount = exports.GatewayResponse = exports.DomainNameV2 = exports.DomainNameAccessAssociation = exports.DomainName = exports.DocumentationVersion = exports.DocumentationPart = exports.Deployment = exports.ClientCertificate = exports.BasePathMappingV2 = exports.BasePathMapping = exports.Authorizer = exports.ApiKey = exports.Account = void 0;
exports.VpcLink = exports.UsagePlanKey = exports.UsagePlan = exports.Stage = exports.RestApi = exports.Resource = exports.RequestValidator = exports.Model = exports.Method = exports.getVpcLinkOutput = exports.getVpcLink = exports.getUsagePlanKeyOutput = exports.getUsagePlanKey = exports.getUsagePlanOutput = exports.getUsagePlan = exports.getStageOutput = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Account = null;
utilities.lazyLoad(exports, ["Account"], () => require("./account"));
exports.ApiKey = null;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));
exports.Authorizer = null;
utilities.lazyLoad(exports, ["Authorizer"], () => require("./authorizer"));
exports.BasePathMapping = null;
utilities.lazyLoad(exports, ["BasePathMapping"], () => require("./basePathMapping"));
exports.BasePathMappingV2 = null;
utilities.lazyLoad(exports, ["BasePathMappingV2"], () => require("./basePathMappingV2"));
exports.ClientCertificate = null;
utilities.lazyLoad(exports, ["ClientCertificate"], () => require("./clientCertificate"));
exports.Deployment = null;
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
exports.DocumentationPart = null;
utilities.lazyLoad(exports, ["DocumentationPart"], () => require("./documentationPart"));
exports.DocumentationVersion = null;
utilities.lazyLoad(exports, ["DocumentationVersion"], () => require("./documentationVersion"));
exports.DomainName = null;
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
exports.DomainNameAccessAssociation = null;
utilities.lazyLoad(exports, ["DomainNameAccessAssociation"], () => require("./domainNameAccessAssociation"));
exports.DomainNameV2 = null;
utilities.lazyLoad(exports, ["DomainNameV2"], () => require("./domainNameV2"));
exports.GatewayResponse = null;
utilities.lazyLoad(exports, ["GatewayResponse"], () => require("./gatewayResponse"));
exports.getAccount = null;
exports.getAccountOutput = null;
utilities.lazyLoad(exports, ["getAccount", "getAccountOutput"], () => require("./getAccount"));
exports.getApiKey = null;
exports.getApiKeyOutput = null;
utilities.lazyLoad(exports, ["getApiKey", "getApiKeyOutput"], () => require("./getApiKey"));
exports.getAuthorizer = null;
exports.getAuthorizerOutput = null;
utilities.lazyLoad(exports, ["getAuthorizer", "getAuthorizerOutput"], () => require("./getAuthorizer"));
exports.getBasePathMapping = null;
exports.getBasePathMappingOutput = null;
utilities.lazyLoad(exports, ["getBasePathMapping", "getBasePathMappingOutput"], () => require("./getBasePathMapping"));
exports.getBasePathMappingV2 = null;
exports.getBasePathMappingV2Output = null;
utilities.lazyLoad(exports, ["getBasePathMappingV2", "getBasePathMappingV2Output"], () => require("./getBasePathMappingV2"));
exports.getClientCertificate = null;
exports.getClientCertificateOutput = null;
utilities.lazyLoad(exports, ["getClientCertificate", "getClientCertificateOutput"], () => require("./getClientCertificate"));
exports.getDeployment = null;
exports.getDeploymentOutput = null;
utilities.lazyLoad(exports, ["getDeployment", "getDeploymentOutput"], () => require("./getDeployment"));
exports.getDocumentationPart = null;
exports.getDocumentationPartOutput = null;
utilities.lazyLoad(exports, ["getDocumentationPart", "getDocumentationPartOutput"], () => require("./getDocumentationPart"));
exports.getDocumentationVersion = null;
exports.getDocumentationVersionOutput = null;
utilities.lazyLoad(exports, ["getDocumentationVersion", "getDocumentationVersionOutput"], () => require("./getDocumentationVersion"));
exports.getDomainName = null;
exports.getDomainNameOutput = null;
utilities.lazyLoad(exports, ["getDomainName", "getDomainNameOutput"], () => require("./getDomainName"));
exports.getDomainNameAccessAssociation = null;
exports.getDomainNameAccessAssociationOutput = null;
utilities.lazyLoad(exports, ["getDomainNameAccessAssociation", "getDomainNameAccessAssociationOutput"], () => require("./getDomainNameAccessAssociation"));
exports.getDomainNameV2 = null;
exports.getDomainNameV2Output = null;
utilities.lazyLoad(exports, ["getDomainNameV2", "getDomainNameV2Output"], () => require("./getDomainNameV2"));
exports.getGatewayResponse = null;
exports.getGatewayResponseOutput = null;
utilities.lazyLoad(exports, ["getGatewayResponse", "getGatewayResponseOutput"], () => require("./getGatewayResponse"));
exports.getMethod = null;
exports.getMethodOutput = null;
utilities.lazyLoad(exports, ["getMethod", "getMethodOutput"], () => require("./getMethod"));
exports.getModel = null;
exports.getModelOutput = null;
utilities.lazyLoad(exports, ["getModel", "getModelOutput"], () => require("./getModel"));
exports.getRequestValidator = null;
exports.getRequestValidatorOutput = null;
utilities.lazyLoad(exports, ["getRequestValidator", "getRequestValidatorOutput"], () => require("./getRequestValidator"));
exports.getResource = null;
exports.getResourceOutput = null;
utilities.lazyLoad(exports, ["getResource", "getResourceOutput"], () => require("./getResource"));
exports.getRestApi = null;
exports.getRestApiOutput = null;
utilities.lazyLoad(exports, ["getRestApi", "getRestApiOutput"], () => require("./getRestApi"));
exports.getStage = null;
exports.getStageOutput = null;
utilities.lazyLoad(exports, ["getStage", "getStageOutput"], () => require("./getStage"));
exports.getUsagePlan = null;
exports.getUsagePlanOutput = null;
utilities.lazyLoad(exports, ["getUsagePlan", "getUsagePlanOutput"], () => require("./getUsagePlan"));
exports.getUsagePlanKey = null;
exports.getUsagePlanKeyOutput = null;
utilities.lazyLoad(exports, ["getUsagePlanKey", "getUsagePlanKeyOutput"], () => require("./getUsagePlanKey"));
exports.getVpcLink = null;
exports.getVpcLinkOutput = null;
utilities.lazyLoad(exports, ["getVpcLink", "getVpcLinkOutput"], () => require("./getVpcLink"));
exports.Method = null;
utilities.lazyLoad(exports, ["Method"], () => require("./method"));
exports.Model = null;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
exports.RequestValidator = null;
utilities.lazyLoad(exports, ["RequestValidator"], () => require("./requestValidator"));
exports.Resource = null;
utilities.lazyLoad(exports, ["Resource"], () => require("./resource"));
exports.RestApi = null;
utilities.lazyLoad(exports, ["RestApi"], () => require("./restApi"));
exports.Stage = null;
utilities.lazyLoad(exports, ["Stage"], () => require("./stage"));
exports.UsagePlan = null;
utilities.lazyLoad(exports, ["UsagePlan"], () => require("./usagePlan"));
exports.UsagePlanKey = null;
utilities.lazyLoad(exports, ["UsagePlanKey"], () => require("./usagePlanKey"));
exports.VpcLink = null;
utilities.lazyLoad(exports, ["VpcLink"], () => require("./vpcLink"));
// Export enums:
__exportStar(require("../types/enums/apigateway"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:apigateway:Account":
                return new exports.Account(name, undefined, { urn });
            case "aws-native:apigateway:ApiKey":
                return new exports.ApiKey(name, undefined, { urn });
            case "aws-native:apigateway:Authorizer":
                return new exports.Authorizer(name, undefined, { urn });
            case "aws-native:apigateway:BasePathMapping":
                return new exports.BasePathMapping(name, undefined, { urn });
            case "aws-native:apigateway:BasePathMappingV2":
                return new exports.BasePathMappingV2(name, undefined, { urn });
            case "aws-native:apigateway:ClientCertificate":
                return new exports.ClientCertificate(name, undefined, { urn });
            case "aws-native:apigateway:Deployment":
                return new exports.Deployment(name, undefined, { urn });
            case "aws-native:apigateway:DocumentationPart":
                return new exports.DocumentationPart(name, undefined, { urn });
            case "aws-native:apigateway:DocumentationVersion":
                return new exports.DocumentationVersion(name, undefined, { urn });
            case "aws-native:apigateway:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws-native:apigateway:DomainNameAccessAssociation":
                return new exports.DomainNameAccessAssociation(name, undefined, { urn });
            case "aws-native:apigateway:DomainNameV2":
                return new exports.DomainNameV2(name, undefined, { urn });
            case "aws-native:apigateway:GatewayResponse":
                return new exports.GatewayResponse(name, undefined, { urn });
            case "aws-native:apigateway:Method":
                return new exports.Method(name, undefined, { urn });
            case "aws-native:apigateway:Model":
                return new exports.Model(name, undefined, { urn });
            case "aws-native:apigateway:RequestValidator":
                return new exports.RequestValidator(name, undefined, { urn });
            case "aws-native:apigateway:Resource":
                return new exports.Resource(name, undefined, { urn });
            case "aws-native:apigateway:RestApi":
                return new exports.RestApi(name, undefined, { urn });
            case "aws-native:apigateway:Stage":
                return new exports.Stage(name, undefined, { urn });
            case "aws-native:apigateway:UsagePlan":
                return new exports.UsagePlan(name, undefined, { urn });
            case "aws-native:apigateway:UsagePlanKey":
                return new exports.UsagePlanKey(name, undefined, { urn });
            case "aws-native:apigateway:VpcLink":
                return new exports.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "apigateway", _module);
//# sourceMappingURL=index.js.map