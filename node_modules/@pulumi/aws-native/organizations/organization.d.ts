import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::Organizations::Organization
 */
export declare class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Organization;
    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Organization;
    /**
     * The Amazon Resource Name (ARN) of an organization.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of an organization.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
     */
    readonly featureSet: pulumi.Output<enums.organizations.OrganizationFeatureSet | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the account that is designated as the management account for the organization.
     */
    readonly managementAccountArn: pulumi.Output<string>;
    /**
     * The email address that is associated with the AWS account that is designated as the management account for the organization.
     */
    readonly managementAccountEmail: pulumi.Output<string>;
    /**
     * The unique identifier (ID) of the management account of an organization.
     */
    readonly managementAccountId: pulumi.Output<string>;
    /**
     * The unique identifier (ID) for the root.
     */
    readonly rootId: pulumi.Output<string>;
    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
    /**
     * Specifies the feature set supported by the new organization. Each feature set supports different levels of functionality.
     */
    featureSet?: pulumi.Input<enums.organizations.OrganizationFeatureSet>;
}
