import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::AccessAnalyzer::Analyzer type specifies an analyzer of the user's account
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const analyzer = new aws_native.accessanalyzer.Analyzer("analyzer", {
 *     analyzerName: "DevAccountAnalyzer",
 *     archiveRules: [
 *         {
 *             filter: [{
 *                 eq: ["123456789012"],
 *                 property: "principal.AWS",
 *             }],
 *             ruleName: "ArchiveTrustedAccountAccess",
 *         },
 *         {
 *             filter: [{
 *                 contains: [
 *                     "arn:aws:s3:::docs-bucket",
 *                     "arn:aws:s3:::clients-bucket",
 *                 ],
 *                 property: "resource",
 *             }],
 *             ruleName: "ArchivePublicS3BucketsAccess",
 *         },
 *     ],
 *     tags: [{
 *         key: "Kind",
 *         value: "Dev",
 *     }],
 *     type: "ACCOUNT",
 * });
 *
 * ```
 */
export declare class Analyzer extends pulumi.CustomResource {
    /**
     * Get an existing Analyzer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Analyzer;
    /**
     * Returns true if the given object is an instance of Analyzer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Analyzer;
    /**
     * The configuration for the analyzer
     */
    readonly analyzerConfiguration: pulumi.Output<outputs.accessanalyzer.AnalyzerConfigurationProperties | undefined>;
    /**
     * Analyzer name
     */
    readonly analyzerName: pulumi.Output<string | undefined>;
    /**
     * Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.
     */
    readonly archiveRules: pulumi.Output<outputs.accessanalyzer.AnalyzerArchiveRule[] | undefined>;
    /**
     * Amazon Resource Name (ARN) of the analyzer
     */
    readonly arn: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The type of the analyzer, must be one of ACCOUNT, ORGANIZATION, ACCOUNT_UNUSED_ACCESS or ORGANIZATION_UNUSED_ACCESS
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a Analyzer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnalyzerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Analyzer resource.
 */
export interface AnalyzerArgs {
    /**
     * The configuration for the analyzer
     */
    analyzerConfiguration?: pulumi.Input<inputs.accessanalyzer.AnalyzerConfigurationPropertiesArgs>;
    /**
     * Analyzer name
     */
    analyzerName?: pulumi.Input<string>;
    /**
     * Specifies the archive rules to add for the analyzer. Archive rules automatically archive findings that meet the criteria you define for the rule.
     */
    archiveRules?: pulumi.Input<pulumi.Input<inputs.accessanalyzer.AnalyzerArchiveRuleArgs>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The type of the analyzer, must be one of ACCOUNT, ORGANIZATION, ACCOUNT_UNUSED_ACCESS or ORGANIZATION_UNUSED_ACCESS
     */
    type: pulumi.Input<string>;
}
