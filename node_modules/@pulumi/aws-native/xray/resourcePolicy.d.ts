import * as pulumi from "@pulumi/pulumi";
/**
 * This schema provides construct and validation rules for AWS-XRay Resource Policy resource parameters.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myResourcePolicy = new aws_native.xray.ResourcePolicy("myResourcePolicy", {
 *     bypassPolicyLockoutCheck: false,
 *     policyDocument: "{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"SNSAccess\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"sns.amazonaws.com\" }, \"Action\": [ \"xray:PutTraceSegments\", \"xray:GetSamplingRules\", \"xray:GetSamplingTargets\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"aws:SourceAccount\": \"my-account-id\" }, \"StringLike\": { \"aws:SourceArn\": \"arn:$my-partition:sns:$my-region:$my-account-id:my-topic-name\" } } } ] }",
 *     policyName: "MySnsActiveTracingPolicy",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myResourcePolicy = new aws_native.xray.ResourcePolicy("myResourcePolicy", {
 *     bypassPolicyLockoutCheck: false,
 *     policyDocument: "{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"SNSAccess\", \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"sns.amazonaws.com\" }, \"Action\": [ \"xray:PutTraceSegments\", \"xray:GetSamplingRules\", \"xray:GetSamplingTargets\" ], \"Resource\": \"*\", \"Condition\": { \"StringEquals\": { \"aws:SourceAccount\": \"my-account-id\" }, \"StringLike\": { \"aws:SourceArn\": \"arn:$my-partition:sns:$my-region:$my-account-id:my-topic-name\" } } } ] }",
 *     policyName: "MySNSActiveTracingPolicy",
 * });
 *
 * ```
 */
export declare class ResourcePolicy extends pulumi.CustomResource {
    /**
     * Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourcePolicy;
    /**
     * Returns true if the given object is an instance of ResourcePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourcePolicy;
    /**
     * A flag to indicate whether to bypass the resource policy lockout safety check
     */
    readonly bypassPolicyLockoutCheck: pulumi.Output<boolean | undefined>;
    /**
     * The resource policy document, which can be up to 5kb in size.
     */
    readonly policyDocument: pulumi.Output<string>;
    /**
     * The name of the resource policy. Must be unique within a specific AWS account.
     */
    readonly policyName: pulumi.Output<string>;
    /**
     * Create a ResourcePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourcePolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResourcePolicy resource.
 */
export interface ResourcePolicyArgs {
    /**
     * A flag to indicate whether to bypass the resource policy lockout safety check
     */
    bypassPolicyLockoutCheck?: pulumi.Input<boolean>;
    /**
     * The resource policy document, which can be up to 5kb in size.
     */
    policyDocument: pulumi.Input<string>;
    /**
     * The name of the resource policy. Must be unique within a specific AWS account.
     */
    policyName?: pulumi.Input<string>;
}
