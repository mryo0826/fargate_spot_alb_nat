"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledQuery = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.
 */
class ScheduledQuery extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledQuery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ScheduledQuery(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ScheduledQuery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledQuery.__pulumiType;
    }
    /**
     * Create a ScheduledQuery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.errorReportConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'errorReportConfiguration'");
            }
            if ((!args || args.notificationConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notificationConfiguration'");
            }
            if ((!args || args.queryString === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryString'");
            }
            if ((!args || args.scheduleConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduleConfiguration'");
            }
            if ((!args || args.scheduledQueryExecutionRoleArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scheduledQueryExecutionRoleArn'");
            }
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["errorReportConfiguration"] = args ? args.errorReportConfiguration : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["notificationConfiguration"] = args ? args.notificationConfiguration : undefined;
            resourceInputs["queryString"] = args ? args.queryString : undefined;
            resourceInputs["scheduleConfiguration"] = args ? args.scheduleConfiguration : undefined;
            resourceInputs["scheduledQueryExecutionRoleArn"] = args ? args.scheduledQueryExecutionRoleArn : undefined;
            resourceInputs["scheduledQueryName"] = args ? args.scheduledQueryName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetConfiguration"] = args ? args.targetConfiguration : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["sqErrorReportConfiguration"] = undefined /*out*/;
            resourceInputs["sqKmsKeyId"] = undefined /*out*/;
            resourceInputs["sqName"] = undefined /*out*/;
            resourceInputs["sqNotificationConfiguration"] = undefined /*out*/;
            resourceInputs["sqQueryString"] = undefined /*out*/;
            resourceInputs["sqScheduleConfiguration"] = undefined /*out*/;
            resourceInputs["sqScheduledQueryExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["sqTargetConfiguration"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["clientToken"] = undefined /*out*/;
            resourceInputs["errorReportConfiguration"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["notificationConfiguration"] = undefined /*out*/;
            resourceInputs["queryString"] = undefined /*out*/;
            resourceInputs["scheduleConfiguration"] = undefined /*out*/;
            resourceInputs["scheduledQueryExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["scheduledQueryName"] = undefined /*out*/;
            resourceInputs["sqErrorReportConfiguration"] = undefined /*out*/;
            resourceInputs["sqKmsKeyId"] = undefined /*out*/;
            resourceInputs["sqName"] = undefined /*out*/;
            resourceInputs["sqNotificationConfiguration"] = undefined /*out*/;
            resourceInputs["sqQueryString"] = undefined /*out*/;
            resourceInputs["sqScheduleConfiguration"] = undefined /*out*/;
            resourceInputs["sqScheduledQueryExecutionRoleArn"] = undefined /*out*/;
            resourceInputs["sqTargetConfiguration"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["targetConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["clientToken", "errorReportConfiguration", "kmsKeyId", "notificationConfiguration", "queryString", "scheduleConfiguration", "scheduledQueryExecutionRoleArn", "scheduledQueryName", "targetConfiguration"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ScheduledQuery.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ScheduledQuery = ScheduledQuery;
/** @internal */
ScheduledQuery.__pulumiType = 'aws-native:timestream:ScheduledQuery';
//# sourceMappingURL=scheduledQuery.js.map