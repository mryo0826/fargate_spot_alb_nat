import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * The AWS::Timestream::Table resource creates a Timestream Table.
 */
export declare function getTable(args: GetTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTableResult>;
export interface GetTableArgs {
    /**
     * The name for the database which the table to be created belongs to.
     */
    databaseName: string;
    /**
     * The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     */
    tableName: string;
}
export interface GetTableResult {
    /**
     * The `arn` of the table.
     */
    readonly arn?: string;
    /**
     * The properties that determine whether magnetic store writes are enabled.
     */
    readonly magneticStoreWriteProperties?: outputs.timestream.MagneticStoreWritePropertiesProperties;
    /**
     * The table name exposed as a read-only attribute.
     */
    readonly name?: string;
    /**
     * The retention duration of the memory store and the magnetic store.
     */
    readonly retentionProperties?: outputs.timestream.RetentionPropertiesProperties;
    /**
     * A Schema specifies the expected data model of the table.
     */
    readonly schema?: outputs.timestream.SchemaProperties;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * The AWS::Timestream::Table resource creates a Timestream Table.
 */
export declare function getTableOutput(args: GetTableOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTableResult>;
export interface GetTableOutputArgs {
    /**
     * The name for the database which the table to be created belongs to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     */
    tableName: pulumi.Input<string>;
}
