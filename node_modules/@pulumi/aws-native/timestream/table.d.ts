import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::Timestream::Table resource creates a Timestream Table.
 */
export declare class Table extends pulumi.CustomResource {
    /**
     * Get an existing Table resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Table;
    /**
     * Returns true if the given object is an instance of Table.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Table;
    /**
     * The `arn` of the table.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name for the database which the table to be created belongs to.
     */
    readonly databaseName: pulumi.Output<string>;
    /**
     * The properties that determine whether magnetic store writes are enabled.
     */
    readonly magneticStoreWriteProperties: pulumi.Output<outputs.timestream.MagneticStoreWritePropertiesProperties | undefined>;
    /**
     * The table name exposed as a read-only attribute.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The retention duration of the memory store and the magnetic store.
     */
    readonly retentionProperties: pulumi.Output<outputs.timestream.RetentionPropertiesProperties | undefined>;
    /**
     * A Schema specifies the expected data model of the table.
     */
    readonly schema: pulumi.Output<outputs.timestream.SchemaProperties | undefined>;
    /**
     * The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     */
    readonly tableName: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Table resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TableArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Table resource.
 */
export interface TableArgs {
    /**
     * The name for the database which the table to be created belongs to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The properties that determine whether magnetic store writes are enabled.
     */
    magneticStoreWriteProperties?: pulumi.Input<inputs.timestream.MagneticStoreWritePropertiesPropertiesArgs>;
    /**
     * The retention duration of the memory store and the magnetic store.
     */
    retentionProperties?: pulumi.Input<inputs.timestream.RetentionPropertiesPropertiesArgs>;
    /**
     * A Schema specifies the expected data model of the table.
     */
    schema?: pulumi.Input<inputs.timestream.SchemaPropertiesArgs>;
    /**
     * The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
     */
    tableName?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
