import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Definition of AWS::AmplifyUIBuilder::Theme Resource Type
 */
export declare function getTheme(args: GetThemeArgs, opts?: pulumi.InvokeOptions): Promise<GetThemeResult>;
export interface GetThemeArgs {
    /**
     * The unique ID for the Amplify app associated with the theme.
     */
    appId: string;
    /**
     * The name of the backend environment that is a part of the Amplify app.
     */
    environmentName: string;
    /**
     * The ID for the theme.
     */
    id: string;
}
export interface GetThemeResult {
    /**
     * The time that the theme was created.
     */
    readonly createdAt?: string;
    /**
     * The ID for the theme.
     */
    readonly id?: string;
    /**
     * The time that the theme was modified.
     */
    readonly modifiedAt?: string;
    /**
     * The name of the theme.
     */
    readonly name?: string;
    /**
     * Describes the properties that can be overriden to customize a theme.
     */
    readonly overrides?: outputs.amplifyuibuilder.ThemeValues[];
    /**
     * One or more key-value pairs to use when tagging the theme.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * A list of key-value pairs that defines the properties of the theme.
     */
    readonly values?: outputs.amplifyuibuilder.ThemeValues[];
}
/**
 * Definition of AWS::AmplifyUIBuilder::Theme Resource Type
 */
export declare function getThemeOutput(args: GetThemeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetThemeResult>;
export interface GetThemeOutputArgs {
    /**
     * The unique ID for the Amplify app associated with the theme.
     */
    appId: pulumi.Input<string>;
    /**
     * The name of the backend environment that is a part of the Amplify app.
     */
    environmentName: pulumi.Input<string>;
    /**
     * The ID for the theme.
     */
    id: pulumi.Input<string>;
}
