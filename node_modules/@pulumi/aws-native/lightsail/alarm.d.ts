import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::Lightsail::Alarm
 */
export declare class Alarm extends pulumi.CustomResource {
    /**
     * Get an existing Alarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Alarm;
    /**
     * Returns true if the given object is an instance of Alarm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Alarm;
    /**
     * The Amazon Resource Name (ARN) of the alarm.
     */
    readonly alarmArn: pulumi.Output<string>;
    /**
     * The name for the alarm. Specify the name of an existing alarm to update, and overwrite the previous configuration of the alarm.
     */
    readonly alarmName: pulumi.Output<string>;
    /**
     * The arithmetic operation to use when comparing the specified statistic to the threshold. The specified statistic value is used as the first operand.
     */
    readonly comparisonOperator: pulumi.Output<string>;
    /**
     * The contact protocols to use for the alarm, such as Email, SMS (text messaging), or both.
     */
    readonly contactProtocols: pulumi.Output<string[] | undefined>;
    /**
     * The number of data points that must be not within the specified threshold to trigger the alarm. If you are setting an "M out of N" alarm, this value (datapointsToAlarm) is the M.
     */
    readonly datapointsToAlarm: pulumi.Output<number | undefined>;
    /**
     * The number of most recent periods over which data is compared to the specified threshold. If you are setting an "M out of N" alarm, this value (evaluationPeriods) is the N.
     */
    readonly evaluationPeriods: pulumi.Output<number>;
    /**
     * The name of the metric to associate with the alarm.
     */
    readonly metricName: pulumi.Output<string>;
    /**
     * The name of the Lightsail resource that the alarm monitors.
     */
    readonly monitoredResourceName: pulumi.Output<string>;
    /**
     * Indicates whether the alarm is enabled. Notifications are enabled by default if you don't specify this parameter.
     */
    readonly notificationEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The alarm states that trigger a notification.
     */
    readonly notificationTriggers: pulumi.Output<string[] | undefined>;
    /**
     * The current state of the alarm.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The value against which the specified statistic is compared.
     */
    readonly threshold: pulumi.Output<number>;
    /**
     * Sets how this alarm will handle missing data points.
     */
    readonly treatMissingData: pulumi.Output<string | undefined>;
    /**
     * Create a Alarm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Alarm resource.
 */
export interface AlarmArgs {
    /**
     * The name for the alarm. Specify the name of an existing alarm to update, and overwrite the previous configuration of the alarm.
     */
    alarmName?: pulumi.Input<string>;
    /**
     * The arithmetic operation to use when comparing the specified statistic to the threshold. The specified statistic value is used as the first operand.
     */
    comparisonOperator: pulumi.Input<string>;
    /**
     * The contact protocols to use for the alarm, such as Email, SMS (text messaging), or both.
     */
    contactProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The number of data points that must be not within the specified threshold to trigger the alarm. If you are setting an "M out of N" alarm, this value (datapointsToAlarm) is the M.
     */
    datapointsToAlarm?: pulumi.Input<number>;
    /**
     * The number of most recent periods over which data is compared to the specified threshold. If you are setting an "M out of N" alarm, this value (evaluationPeriods) is the N.
     */
    evaluationPeriods: pulumi.Input<number>;
    /**
     * The name of the metric to associate with the alarm.
     */
    metricName: pulumi.Input<string>;
    /**
     * The name of the Lightsail resource that the alarm monitors.
     */
    monitoredResourceName: pulumi.Input<string>;
    /**
     * Indicates whether the alarm is enabled. Notifications are enabled by default if you don't specify this parameter.
     */
    notificationEnabled?: pulumi.Input<boolean>;
    /**
     * The alarm states that trigger a notification.
     */
    notificationTriggers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value against which the specified statistic is compared.
     */
    threshold: pulumi.Input<number>;
    /**
     * Sets how this alarm will handle missing data points.
     */
    treatMissingData?: pulumi.Input<string>;
}
