import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::Container
 */
export declare class Container extends pulumi.CustomResource {
    /**
     * Get an existing Container resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Container;
    /**
     * Returns true if the given object is an instance of Container.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Container;
    /**
     * The Amazon Resource Name (ARN) of the container.
     */
    readonly containerArn: pulumi.Output<string>;
    /**
     * Describes a container deployment configuration of an Amazon Lightsail container service.
     */
    readonly containerServiceDeployment: pulumi.Output<outputs.lightsail.ContainerServiceDeployment | undefined>;
    /**
     * A Boolean value to indicate whether the container service is disabled.
     */
    readonly isDisabled: pulumi.Output<boolean | undefined>;
    /**
     * The power specification for the container service.
     */
    readonly power: pulumi.Output<string>;
    /**
     * The principal ARN of the container service.
     */
    readonly principalArn: pulumi.Output<string>;
    /**
     * A Boolean value to indicate whether the container service has access to private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.
     */
    readonly privateRegistryAccess: pulumi.Output<outputs.lightsail.ContainerPrivateRegistryAccess | undefined>;
    /**
     * The public domain names to use with the container service, such as example.com and www.example.com.
     */
    readonly publicDomainNames: pulumi.Output<outputs.lightsail.ContainerPublicDomainName[] | undefined>;
    /**
     * The scale specification for the container service.
     */
    readonly scale: pulumi.Output<number>;
    /**
     * The name for the container service.
     */
    readonly serviceName: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The publicly accessible URL of the container service.
     */
    readonly url: pulumi.Output<string>;
    /**
     * Create a Container resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Container resource.
 */
export interface ContainerArgs {
    /**
     * Describes a container deployment configuration of an Amazon Lightsail container service.
     */
    containerServiceDeployment?: pulumi.Input<inputs.lightsail.ContainerServiceDeploymentArgs>;
    /**
     * A Boolean value to indicate whether the container service is disabled.
     */
    isDisabled?: pulumi.Input<boolean>;
    /**
     * The power specification for the container service.
     */
    power: pulumi.Input<string>;
    /**
     * A Boolean value to indicate whether the container service has access to private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.
     */
    privateRegistryAccess?: pulumi.Input<inputs.lightsail.ContainerPrivateRegistryAccessArgs>;
    /**
     * The public domain names to use with the container service, such as example.com and www.example.com.
     */
    publicDomainNames?: pulumi.Input<pulumi.Input<inputs.lightsail.ContainerPublicDomainNameArgs>[]>;
    /**
     * The scale specification for the container service.
     */
    scale: pulumi.Input<number>;
    /**
     * The name for the container service.
     */
    serviceName: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
