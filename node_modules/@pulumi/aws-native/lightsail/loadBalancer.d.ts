import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::LoadBalancer
 */
export declare class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LoadBalancer;
    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LoadBalancer;
    /**
     * The names of the instances attached to the load balancer.
     */
    readonly attachedInstances: pulumi.Output<string[] | undefined>;
    /**
     * The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., "/").
     */
    readonly healthCheckPath: pulumi.Output<string | undefined>;
    /**
     * The instance port where you're creating your load balancer.
     */
    readonly instancePort: pulumi.Output<number>;
    /**
     * The IP address type for the load balancer. The possible values are ipv4 for IPv4 only, and dualstack for IPv4 and IPv6. The default value is dualstack.
     */
    readonly ipAddressType: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the load balancer.
     */
    readonly loadBalancerArn: pulumi.Output<string>;
    /**
     * The name of your load balancer.
     */
    readonly loadBalancerName: pulumi.Output<string>;
    /**
     * Configuration option to enable session stickiness.
     */
    readonly sessionStickinessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Configuration option to adjust session stickiness cookie duration parameter.
     */
    readonly sessionStickinessLbCookieDurationSeconds: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The name of the TLS policy to apply to the load balancer.
     */
    readonly tlsPolicyName: pulumi.Output<string | undefined>;
    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * The names of the instances attached to the load balancer.
     */
    attachedInstances?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., "/").
     */
    healthCheckPath?: pulumi.Input<string>;
    /**
     * The instance port where you're creating your load balancer.
     */
    instancePort: pulumi.Input<number>;
    /**
     * The IP address type for the load balancer. The possible values are ipv4 for IPv4 only, and dualstack for IPv4 and IPv6. The default value is dualstack.
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * The name of your load balancer.
     */
    loadBalancerName?: pulumi.Input<string>;
    /**
     * Configuration option to enable session stickiness.
     */
    sessionStickinessEnabled?: pulumi.Input<boolean>;
    /**
     * Configuration option to adjust session stickiness cookie duration parameter.
     */
    sessionStickinessLbCookieDurationSeconds?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The name of the TLS policy to apply to the load balancer.
     */
    tlsPolicyName?: pulumi.Input<string>;
}
