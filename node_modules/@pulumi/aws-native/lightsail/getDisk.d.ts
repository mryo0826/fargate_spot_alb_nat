import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lightsail::Disk
 */
export declare function getDisk(args: GetDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetDiskResult>;
export interface GetDiskArgs {
    /**
     * The names to use for your new Lightsail disk.
     */
    diskName: string;
}
export interface GetDiskResult {
    /**
     * An array of objects representing the add-ons to enable for the new instance.
     */
    readonly addOns?: outputs.lightsail.DiskAddOn[];
    /**
     * Name of the attached Lightsail Instance
     */
    readonly attachedTo?: string;
    /**
     * Attachment State of the Lightsail disk
     */
    readonly attachmentState?: string;
    /**
     * The Amazon Resource Name (ARN) of the disk.
     */
    readonly diskArn?: string;
    /**
     * Iops of the Lightsail disk
     */
    readonly iops?: number;
    /**
     * Check is Disk is attached state
     */
    readonly isAttached?: boolean;
    /**
     * The AWS Region and Availability Zone where the disk is located.
     */
    readonly location?: outputs.lightsail.DiskLocation;
    /**
     * Path of the  attached Disk
     */
    readonly path?: string;
    /**
     * Resource type of Lightsail instance.
     */
    readonly resourceType?: string;
    /**
     * State of the Lightsail disk
     */
    readonly state?: string;
    /**
     * Support code to help identify any issues
     */
    readonly supportCode?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Lightsail::Disk
 */
export declare function getDiskOutput(args: GetDiskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiskResult>;
export interface GetDiskOutputArgs {
    /**
     * The names to use for your new Lightsail disk.
     */
    diskName: pulumi.Input<string>;
}
