import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Bedrock::KnowledgeBase Resource Type
 */
export declare class KnowledgeBase extends pulumi.CustomResource {
    /**
     * Get an existing KnowledgeBase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KnowledgeBase;
    /**
     * Returns true if the given object is an instance of KnowledgeBase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KnowledgeBase;
    /**
     * The time at which the knowledge base was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Description of the Resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A list of reasons that the API operation on the knowledge base failed.
     */
    readonly failureReasons: pulumi.Output<string[]>;
    /**
     * The ARN of the knowledge base.
     */
    readonly knowledgeBaseArn: pulumi.Output<string>;
    /**
     * Contains details about the embeddings configuration of the knowledge base.
     */
    readonly knowledgeBaseConfiguration: pulumi.Output<outputs.bedrock.KnowledgeBaseConfiguration>;
    /**
     * The unique identifier of the knowledge base.
     */
    readonly knowledgeBaseId: pulumi.Output<string>;
    /**
     * The name of the knowledge base.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * The status of the knowledge base.
     */
    readonly status: pulumi.Output<enums.bedrock.KnowledgeBaseStatus>;
    /**
     * Contains details about the storage configuration of the knowledge base.
     */
    readonly storageConfiguration: pulumi.Output<outputs.bedrock.KnowledgeBaseStorageConfiguration>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The time at which the knowledge base was last updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a KnowledgeBase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KnowledgeBaseArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KnowledgeBase resource.
 */
export interface KnowledgeBaseArgs {
    /**
     * Description of the Resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Contains details about the embeddings configuration of the knowledge base.
     */
    knowledgeBaseConfiguration: pulumi.Input<inputs.bedrock.KnowledgeBaseConfigurationArgs>;
    /**
     * The name of the knowledge base.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
     */
    roleArn: pulumi.Input<string>;
    /**
     * Contains details about the storage configuration of the knowledge base.
     */
    storageConfiguration: pulumi.Input<inputs.bedrock.KnowledgeBaseStorageConfigurationArgs>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
