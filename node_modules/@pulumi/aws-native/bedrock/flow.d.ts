import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Bedrock::Flow Resource Type
 */
export declare class Flow extends pulumi.CustomResource {
    /**
     * Get an existing Flow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Flow;
    /**
     * Returns true if the given object is an instance of Flow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Flow;
    /**
     * Arn representation of the Flow
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Identifier for a Flow
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Time Stamp.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * A KMS key ARN
     */
    readonly customerEncryptionKeyArn: pulumi.Output<string | undefined>;
    /**
     * The definition of the nodes and connections between the nodes in the flow.
     */
    readonly definition: pulumi.Output<outputs.bedrock.FlowDefinition | undefined>;
    /**
     * The Amazon S3 location of the flow definition.
     */
    readonly definitionS3Location: pulumi.Output<outputs.bedrock.FlowS3Location | undefined>;
    /**
     * A JSON string containing a Definition with the same schema as the Definition property of this resource
     */
    readonly definitionString: pulumi.Output<string | undefined>;
    /**
     * A map that specifies the mappings for placeholder variables in the prompt flow definition. This enables the customer to inject values obtained at runtime. Variables can be template parameter names, resource logical IDs, resource attributes, or a variable in a key-value map. Only supported with the `DefinitionString` and `DefinitionS3Location` fields.
     *
     * Substitutions must follow the syntax: `${key_name}` or `${variable_1,variable_2,...}` .
     */
    readonly definitionSubstitutions: pulumi.Output<{
        [key: string]: string | number | boolean;
    } | undefined>;
    /**
     * Description of the flow
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * ARN of a IAM role
     */
    readonly executionRoleArn: pulumi.Output<string>;
    /**
     * Name for the flow
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the flow. The following statuses are possible:
     *
     * - NotPrepared – The flow has been created or updated, but hasn't been prepared. If you just created the flow, you can't test it. If you updated the flow, the `DRAFT` version won't contain the latest changes for testing. Send a [PrepareFlow](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PrepareFlow.html) request to package the latest changes into the `DRAFT` version.
     * - Preparing – The flow is being prepared so that the `DRAFT` version contains the latest changes for testing.
     * - Prepared – The flow is prepared and the `DRAFT` version contains the latest changes for testing.
     * - Failed – The last API operation that you invoked on the flow failed. Send a [GetFlow](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_GetFlow.html) request and check the error message in the `validations` field.
     */
    readonly status: pulumi.Output<enums.bedrock.FlowStatus>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    readonly testAliasTags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Time Stamp.
     */
    readonly updatedAt: pulumi.Output<string>;
    readonly validations: pulumi.Output<outputs.bedrock.FlowValidation[]>;
    /**
     * Draft Version.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Flow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Flow resource.
 */
export interface FlowArgs {
    /**
     * A KMS key ARN
     */
    customerEncryptionKeyArn?: pulumi.Input<string>;
    /**
     * The definition of the nodes and connections between the nodes in the flow.
     */
    definition?: pulumi.Input<inputs.bedrock.FlowDefinitionArgs>;
    /**
     * The Amazon S3 location of the flow definition.
     */
    definitionS3Location?: pulumi.Input<inputs.bedrock.FlowS3LocationArgs>;
    /**
     * A JSON string containing a Definition with the same schema as the Definition property of this resource
     */
    definitionString?: pulumi.Input<string>;
    /**
     * A map that specifies the mappings for placeholder variables in the prompt flow definition. This enables the customer to inject values obtained at runtime. Variables can be template parameter names, resource logical IDs, resource attributes, or a variable in a key-value map. Only supported with the `DefinitionString` and `DefinitionS3Location` fields.
     *
     * Substitutions must follow the syntax: `${key_name}` or `${variable_1,variable_2,...}` .
     */
    definitionSubstitutions?: pulumi.Input<{
        [key: string]: pulumi.Input<string | number | boolean>;
    }>;
    /**
     * Description of the flow
     */
    description?: pulumi.Input<string>;
    /**
     * ARN of a IAM role
     */
    executionRoleArn: pulumi.Input<string>;
    /**
     * Name for the flow
     */
    name?: pulumi.Input<string>;
    /**
     * Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
     *
     * - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
     * - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    testAliasTags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
