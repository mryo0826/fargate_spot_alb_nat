import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Bedrock::FlowVersion Resource Type
 */
export declare class FlowVersion extends pulumi.CustomResource {
    /**
     * Get an existing FlowVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FlowVersion;
    /**
     * Returns true if the given object is an instance of FlowVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FlowVersion;
    /**
     * Time Stamp.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * A KMS key ARN
     */
    readonly customerEncryptionKeyArn: pulumi.Output<string>;
    readonly definition: pulumi.Output<outputs.bedrock.FlowVersionFlowDefinition>;
    /**
     * Description of the flow version
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * ARN of a IAM role
     */
    readonly executionRoleArn: pulumi.Output<string>;
    /**
     * Arn representation of the Flow
     */
    readonly flowArn: pulumi.Output<string>;
    /**
     * Identifier for a Flow
     */
    readonly flowId: pulumi.Output<string>;
    /**
     * Name for the flow
     */
    readonly name: pulumi.Output<string>;
    /**
     * The status of the flow.
     */
    readonly status: pulumi.Output<enums.bedrock.FlowVersionFlowStatus>;
    /**
     * Numerical Version.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a FlowVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FlowVersion resource.
 */
export interface FlowVersionArgs {
    /**
     * Description of the flow version
     */
    description?: pulumi.Input<string>;
    /**
     * Arn representation of the Flow
     */
    flowArn: pulumi.Input<string>;
}
