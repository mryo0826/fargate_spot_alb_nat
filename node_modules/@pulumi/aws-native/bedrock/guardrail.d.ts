import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::Bedrock::Guardrail Resource Type
 */
export declare class Guardrail extends pulumi.CustomResource {
    /**
     * Get an existing Guardrail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Guardrail;
    /**
     * Returns true if the given object is an instance of Guardrail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Guardrail;
    /**
     * Messaging for when violations are detected in text
     */
    readonly blockedInputMessaging: pulumi.Output<string>;
    /**
     * Messaging for when violations are detected in text
     */
    readonly blockedOutputsMessaging: pulumi.Output<string>;
    /**
     * The content filter policies to configure for the guardrail.
     */
    readonly contentPolicyConfig: pulumi.Output<outputs.bedrock.GuardrailContentPolicyConfig | undefined>;
    readonly contextualGroundingPolicyConfig: pulumi.Output<outputs.bedrock.GuardrailContextualGroundingPolicyConfig | undefined>;
    /**
     * Time Stamp
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Description of the guardrail or its version
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * List of failure recommendations
     */
    readonly failureRecommendations: pulumi.Output<string[]>;
    /**
     * Arn representation for the guardrail
     */
    readonly guardrailArn: pulumi.Output<string>;
    /**
     * Unique id for the guardrail
     */
    readonly guardrailId: pulumi.Output<string>;
    /**
     * The KMS key with which the guardrail was encrypted at rest
     */
    readonly kmsKeyArn: pulumi.Output<string | undefined>;
    /**
     * Name of the guardrail
     */
    readonly name: pulumi.Output<string>;
    /**
     * The sensitive information policy to configure for the guardrail.
     */
    readonly sensitiveInformationPolicyConfig: pulumi.Output<outputs.bedrock.GuardrailSensitiveInformationPolicyConfig | undefined>;
    /**
     * The status of the guardrail.
     */
    readonly status: pulumi.Output<enums.bedrock.GuardrailStatus>;
    /**
     * List of status reasons
     */
    readonly statusReasons: pulumi.Output<string[]>;
    /**
     * List of Tags
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The topic policies to configure for the guardrail.
     */
    readonly topicPolicyConfig: pulumi.Output<outputs.bedrock.GuardrailTopicPolicyConfig | undefined>;
    /**
     * Time Stamp
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Guardrail version
     */
    readonly version: pulumi.Output<string>;
    /**
     * The word policy you configure for the guardrail.
     */
    readonly wordPolicyConfig: pulumi.Output<outputs.bedrock.GuardrailWordPolicyConfig | undefined>;
    /**
     * Create a Guardrail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GuardrailArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Guardrail resource.
 */
export interface GuardrailArgs {
    /**
     * Messaging for when violations are detected in text
     */
    blockedInputMessaging: pulumi.Input<string>;
    /**
     * Messaging for when violations are detected in text
     */
    blockedOutputsMessaging: pulumi.Input<string>;
    /**
     * The content filter policies to configure for the guardrail.
     */
    contentPolicyConfig?: pulumi.Input<inputs.bedrock.GuardrailContentPolicyConfigArgs>;
    contextualGroundingPolicyConfig?: pulumi.Input<inputs.bedrock.GuardrailContextualGroundingPolicyConfigArgs>;
    /**
     * Description of the guardrail or its version
     */
    description?: pulumi.Input<string>;
    /**
     * The KMS key with which the guardrail was encrypted at rest
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * Name of the guardrail
     */
    name?: pulumi.Input<string>;
    /**
     * The sensitive information policy to configure for the guardrail.
     */
    sensitiveInformationPolicyConfig?: pulumi.Input<inputs.bedrock.GuardrailSensitiveInformationPolicyConfigArgs>;
    /**
     * List of Tags
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The topic policies to configure for the guardrail.
     */
    topicPolicyConfig?: pulumi.Input<inputs.bedrock.GuardrailTopicPolicyConfigArgs>;
    /**
     * The word policy you configure for the guardrail.
     */
    wordPolicyConfig?: pulumi.Input<inputs.bedrock.GuardrailWordPolicyConfigArgs>;
}
