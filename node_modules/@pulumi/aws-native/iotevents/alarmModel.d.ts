import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Represents an alarm model to monitor an ITE input attribute. You can use the alarm to get notified when the value is outside a specified range. For more information, see [Create an alarm model](https://docs.aws.amazon.com/iotevents/latest/developerguide/create-alarms.html) in the *Developer Guide*.
 */
export declare class AlarmModel extends pulumi.CustomResource {
    /**
     * Get an existing AlarmModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AlarmModel;
    /**
     * Returns true if the given object is an instance of AlarmModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AlarmModel;
    /**
     * Contains the configuration information of alarm state changes.
     */
    readonly alarmCapabilities: pulumi.Output<outputs.iotevents.AlarmModelAlarmCapabilities | undefined>;
    /**
     * Contains information about one or more alarm actions.
     */
    readonly alarmEventActions: pulumi.Output<outputs.iotevents.AlarmModelAlarmEventActions | undefined>;
    /**
     * The description of the alarm model.
     */
    readonly alarmModelDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the alarm model.
     */
    readonly alarmModelName: pulumi.Output<string | undefined>;
    /**
     * Defines when your alarm is invoked.
     */
    readonly alarmRule: pulumi.Output<outputs.iotevents.AlarmModelAlarmRule>;
    /**
     * An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
     */
    readonly key: pulumi.Output<string | undefined>;
    /**
     * The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * A non-negative integer that reflects the severity level of the alarm.
     */
    readonly severity: pulumi.Output<number | undefined>;
    /**
     * A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
     *  You can create up to 50 tags for one alarm model.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a AlarmModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlarmModelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AlarmModel resource.
 */
export interface AlarmModelArgs {
    /**
     * Contains the configuration information of alarm state changes.
     */
    alarmCapabilities?: pulumi.Input<inputs.iotevents.AlarmModelAlarmCapabilitiesArgs>;
    /**
     * Contains information about one or more alarm actions.
     */
    alarmEventActions?: pulumi.Input<inputs.iotevents.AlarmModelAlarmEventActionsArgs>;
    /**
     * The description of the alarm model.
     */
    alarmModelDescription?: pulumi.Input<string>;
    /**
     * The name of the alarm model.
     */
    alarmModelName?: pulumi.Input<string>;
    /**
     * Defines when your alarm is invoked.
     */
    alarmRule: pulumi.Input<inputs.iotevents.AlarmModelAlarmRuleArgs>;
    /**
     * An input attribute used as a key to create an alarm. ITE routes [inputs](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html) associated with this key to the alarm.
     */
    key?: pulumi.Input<string>;
    /**
     * The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
     */
    roleArn: pulumi.Input<string>;
    /**
     * A non-negative integer that reflects the severity level of the alarm.
     */
    severity?: pulumi.Input<number>;
    /**
     * A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see [Tagging your resources](https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html) in the *Developer Guide*.
     *  You can create up to 50 tags for one alarm model.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
