import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * AWS::PCS::Cluster resource creates an AWS PCS cluster.
 */
export declare function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult>;
export interface GetClusterArgs {
    /**
     * The unique Amazon Resource Name (ARN) of the cluster.
     */
    arn: string;
}
export interface GetClusterResult {
    /**
     * The unique Amazon Resource Name (ARN) of the cluster.
     */
    readonly arn?: string;
    /**
     * The list of endpoints available for interaction with the scheduler.
     */
    readonly endpoints?: outputs.pcs.ClusterEndpoint[];
    /**
     * The list of errors that occurred during cluster provisioning.
     */
    readonly errorInfo?: outputs.pcs.ClusterErrorInfo[];
    /**
     * The generated unique ID of the cluster.
     */
    readonly id?: string;
    /**
     * The provisioning status of the cluster. The provisioning status doesn't indicate the overall health of the cluster.
     */
    readonly status?: enums.pcs.ClusterStatus;
    /**
     * 1 or more tags added to the resource. Each tag consists of a tag key and tag value. The tag value is optional and can be an empty string.
     */
    readonly tags?: {
        [key: string]: string;
    };
}
/**
 * AWS::PCS::Cluster resource creates an AWS PCS cluster.
 */
export declare function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClusterResult>;
export interface GetClusterOutputArgs {
    /**
     * The unique Amazon Resource Name (ARN) of the cluster.
     */
    arn: pulumi.Input<string>;
}
