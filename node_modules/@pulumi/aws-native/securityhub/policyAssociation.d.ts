import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * The AWS::SecurityHub::PolicyAssociation resource represents the AWS Security Hub Central Configuration Policy associations in your Target. Only the AWS Security Hub delegated administrator can create the resouce from the home region.
 */
export declare class PolicyAssociation extends pulumi.CustomResource {
    /**
     * Get an existing PolicyAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PolicyAssociation;
    /**
     * Returns true if the given object is an instance of PolicyAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PolicyAssociation;
    /**
     * A unique identifier to indicates if the target has an association
     */
    readonly associationIdentifier: pulumi.Output<string>;
    /**
     * The current status of the association between the specified target and the configuration
     */
    readonly associationStatus: pulumi.Output<enums.securityhub.PolicyAssociationAssociationStatus>;
    /**
     * An explanation for a FAILED value for AssociationStatus
     */
    readonly associationStatusMessage: pulumi.Output<string>;
    /**
     * Indicates whether the association between the specified target and the configuration was directly applied by the Security Hub delegated administrator or inherited from a parent
     */
    readonly associationType: pulumi.Output<enums.securityhub.PolicyAssociationAssociationType>;
    /**
     * The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
     */
    readonly configurationPolicyId: pulumi.Output<string>;
    /**
     * The identifier of the target account, organizational unit, or the root
     */
    readonly targetId: pulumi.Output<string>;
    /**
     * Indicates whether the target is an AWS account, organizational unit, or the organization root
     */
    readonly targetType: pulumi.Output<enums.securityhub.PolicyAssociationTargetType>;
    /**
     * The date and time, in UTC and ISO 8601 format, that the configuration policy association was last updated
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a PolicyAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PolicyAssociation resource.
 */
export interface PolicyAssociationArgs {
    /**
     * The universally unique identifier (UUID) of the configuration policy or a value of SELF_MANAGED_SECURITY_HUB for a self-managed configuration
     */
    configurationPolicyId: pulumi.Input<string>;
    /**
     * The identifier of the target account, organizational unit, or the root
     */
    targetId: pulumi.Input<string>;
    /**
     * Indicates whether the target is an AWS account, organizational unit, or the organization root
     */
    targetType: pulumi.Input<enums.securityhub.PolicyAssociationTargetType>;
}
