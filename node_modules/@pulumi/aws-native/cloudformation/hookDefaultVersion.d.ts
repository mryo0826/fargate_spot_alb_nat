import * as pulumi from "@pulumi/pulumi";
/**
 * Set a version as default version for a hook in CloudFormation Registry.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const hookDefaultVersion = new aws_native.cloudformation.HookDefaultVersion("hookDefaultVersion", {typeVersionArn: "arn:aws:cloudformation:us-west-2:123456789012:type/hook/My-Sample-Hook/00000001"});
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const hookDefaultVersion = new aws_native.cloudformation.HookDefaultVersion("hookDefaultVersion", {typeVersionArn: "arn:aws:cloudformation:us-west-2:123456789012:type/hook/My-Sample-Hook/00000001"});
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const hookDefaultVersion = new aws_native.cloudformation.HookDefaultVersion("hookDefaultVersion", {
 *     typeName: "My::Sample::Hook",
 *     versionId: "1",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const hookDefaultVersion = new aws_native.cloudformation.HookDefaultVersion("hookDefaultVersion", {
 *     typeName: "My::Sample::Hook",
 *     versionId: "1",
 * });
 *
 * ```
 */
export declare class HookDefaultVersion extends pulumi.CustomResource {
    /**
     * Get an existing HookDefaultVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HookDefaultVersion;
    /**
     * Returns true if the given object is an instance of HookDefaultVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HookDefaultVersion;
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the type version.
     */
    readonly typeVersionArn: pulumi.Output<string | undefined>;
    /**
     * The ID of an existing version of the hook to set as the default.
     */
    readonly versionId: pulumi.Output<string | undefined>;
    /**
     * Create a HookDefaultVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HookDefaultVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a HookDefaultVersion resource.
 */
export interface HookDefaultVersionArgs {
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    typeName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the type version.
     */
    typeVersionArn?: pulumi.Input<string>;
    /**
     * The ID of an existing version of the hook to set as the default.
     */
    versionId?: pulumi.Input<string>;
}
