"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeActivation = exports.StackSet = exports.Stack = exports.ResourceVersion = exports.ResourceDefaultVersion = exports.Publisher = exports.PublicTypeVersion = exports.ModuleVersion = exports.ModuleDefaultVersion = exports.LambdaHook = exports.HookVersion = exports.HookTypeConfig = exports.HookDefaultVersion = exports.GuardHook = exports.getTypeActivationOutput = exports.getTypeActivation = exports.getStackSetOutput = exports.getStackSet = exports.getStackOutput = exports.getStack = exports.getResourceVersionOutput = exports.getResourceVersion = exports.getResourceDefaultVersionOutput = exports.getResourceDefaultVersion = exports.getPublisherOutput = exports.getPublisher = exports.getPublicTypeVersionOutput = exports.getPublicTypeVersion = exports.getModuleVersionOutput = exports.getModuleVersion = exports.getLambdaHookOutput = exports.getLambdaHook = exports.getHookVersionOutput = exports.getHookVersion = exports.getHookTypeConfigOutput = exports.getHookTypeConfig = exports.getHookDefaultVersionOutput = exports.getHookDefaultVersion = exports.getGuardHookOutput = exports.getGuardHook = exports.CustomResourceEmulator = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.CustomResourceEmulator = null;
utilities.lazyLoad(exports, ["CustomResourceEmulator"], () => require("./customResourceEmulator"));
exports.getGuardHook = null;
exports.getGuardHookOutput = null;
utilities.lazyLoad(exports, ["getGuardHook", "getGuardHookOutput"], () => require("./getGuardHook"));
exports.getHookDefaultVersion = null;
exports.getHookDefaultVersionOutput = null;
utilities.lazyLoad(exports, ["getHookDefaultVersion", "getHookDefaultVersionOutput"], () => require("./getHookDefaultVersion"));
exports.getHookTypeConfig = null;
exports.getHookTypeConfigOutput = null;
utilities.lazyLoad(exports, ["getHookTypeConfig", "getHookTypeConfigOutput"], () => require("./getHookTypeConfig"));
exports.getHookVersion = null;
exports.getHookVersionOutput = null;
utilities.lazyLoad(exports, ["getHookVersion", "getHookVersionOutput"], () => require("./getHookVersion"));
exports.getLambdaHook = null;
exports.getLambdaHookOutput = null;
utilities.lazyLoad(exports, ["getLambdaHook", "getLambdaHookOutput"], () => require("./getLambdaHook"));
exports.getModuleVersion = null;
exports.getModuleVersionOutput = null;
utilities.lazyLoad(exports, ["getModuleVersion", "getModuleVersionOutput"], () => require("./getModuleVersion"));
exports.getPublicTypeVersion = null;
exports.getPublicTypeVersionOutput = null;
utilities.lazyLoad(exports, ["getPublicTypeVersion", "getPublicTypeVersionOutput"], () => require("./getPublicTypeVersion"));
exports.getPublisher = null;
exports.getPublisherOutput = null;
utilities.lazyLoad(exports, ["getPublisher", "getPublisherOutput"], () => require("./getPublisher"));
exports.getResourceDefaultVersion = null;
exports.getResourceDefaultVersionOutput = null;
utilities.lazyLoad(exports, ["getResourceDefaultVersion", "getResourceDefaultVersionOutput"], () => require("./getResourceDefaultVersion"));
exports.getResourceVersion = null;
exports.getResourceVersionOutput = null;
utilities.lazyLoad(exports, ["getResourceVersion", "getResourceVersionOutput"], () => require("./getResourceVersion"));
exports.getStack = null;
exports.getStackOutput = null;
utilities.lazyLoad(exports, ["getStack", "getStackOutput"], () => require("./getStack"));
exports.getStackSet = null;
exports.getStackSetOutput = null;
utilities.lazyLoad(exports, ["getStackSet", "getStackSetOutput"], () => require("./getStackSet"));
exports.getTypeActivation = null;
exports.getTypeActivationOutput = null;
utilities.lazyLoad(exports, ["getTypeActivation", "getTypeActivationOutput"], () => require("./getTypeActivation"));
exports.GuardHook = null;
utilities.lazyLoad(exports, ["GuardHook"], () => require("./guardHook"));
exports.HookDefaultVersion = null;
utilities.lazyLoad(exports, ["HookDefaultVersion"], () => require("./hookDefaultVersion"));
exports.HookTypeConfig = null;
utilities.lazyLoad(exports, ["HookTypeConfig"], () => require("./hookTypeConfig"));
exports.HookVersion = null;
utilities.lazyLoad(exports, ["HookVersion"], () => require("./hookVersion"));
exports.LambdaHook = null;
utilities.lazyLoad(exports, ["LambdaHook"], () => require("./lambdaHook"));
exports.ModuleDefaultVersion = null;
utilities.lazyLoad(exports, ["ModuleDefaultVersion"], () => require("./moduleDefaultVersion"));
exports.ModuleVersion = null;
utilities.lazyLoad(exports, ["ModuleVersion"], () => require("./moduleVersion"));
exports.PublicTypeVersion = null;
utilities.lazyLoad(exports, ["PublicTypeVersion"], () => require("./publicTypeVersion"));
exports.Publisher = null;
utilities.lazyLoad(exports, ["Publisher"], () => require("./publisher"));
exports.ResourceDefaultVersion = null;
utilities.lazyLoad(exports, ["ResourceDefaultVersion"], () => require("./resourceDefaultVersion"));
exports.ResourceVersion = null;
utilities.lazyLoad(exports, ["ResourceVersion"], () => require("./resourceVersion"));
exports.Stack = null;
utilities.lazyLoad(exports, ["Stack"], () => require("./stack"));
exports.StackSet = null;
utilities.lazyLoad(exports, ["StackSet"], () => require("./stackSet"));
exports.TypeActivation = null;
utilities.lazyLoad(exports, ["TypeActivation"], () => require("./typeActivation"));
// Export enums:
__exportStar(require("../types/enums/cloudformation"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:cloudformation:CustomResourceEmulator":
                return new exports.CustomResourceEmulator(name, undefined, { urn });
            case "aws-native:cloudformation:GuardHook":
                return new exports.GuardHook(name, undefined, { urn });
            case "aws-native:cloudformation:HookDefaultVersion":
                return new exports.HookDefaultVersion(name, undefined, { urn });
            case "aws-native:cloudformation:HookTypeConfig":
                return new exports.HookTypeConfig(name, undefined, { urn });
            case "aws-native:cloudformation:HookVersion":
                return new exports.HookVersion(name, undefined, { urn });
            case "aws-native:cloudformation:LambdaHook":
                return new exports.LambdaHook(name, undefined, { urn });
            case "aws-native:cloudformation:ModuleDefaultVersion":
                return new exports.ModuleDefaultVersion(name, undefined, { urn });
            case "aws-native:cloudformation:ModuleVersion":
                return new exports.ModuleVersion(name, undefined, { urn });
            case "aws-native:cloudformation:PublicTypeVersion":
                return new exports.PublicTypeVersion(name, undefined, { urn });
            case "aws-native:cloudformation:Publisher":
                return new exports.Publisher(name, undefined, { urn });
            case "aws-native:cloudformation:ResourceDefaultVersion":
                return new exports.ResourceDefaultVersion(name, undefined, { urn });
            case "aws-native:cloudformation:ResourceVersion":
                return new exports.ResourceVersion(name, undefined, { urn });
            case "aws-native:cloudformation:Stack":
                return new exports.Stack(name, undefined, { urn });
            case "aws-native:cloudformation:StackSet":
                return new exports.StackSet(name, undefined, { urn });
            case "aws-native:cloudformation:TypeActivation":
                return new exports.TypeActivation(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "cloudformation", _module);
//# sourceMappingURL=index.js.map