import * as pulumi from "@pulumi/pulumi";
/**
 * Specifies the configuration data for a registered hook in CloudFormation Registry.
 */
export declare function getHookTypeConfig(args: GetHookTypeConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetHookTypeConfigResult>;
export interface GetHookTypeConfigArgs {
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    configurationArn: string;
}
export interface GetHookTypeConfigResult {
    /**
     * The configuration data for the extension, in this account and region.
     */
    readonly configuration?: string;
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    readonly configurationArn?: string;
    /**
     * The Amazon Resource Name (ARN) of the type without version number.
     */
    readonly typeArn?: string;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName?: string;
}
/**
 * Specifies the configuration data for a registered hook in CloudFormation Registry.
 */
export declare function getHookTypeConfigOutput(args: GetHookTypeConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetHookTypeConfigResult>;
export interface GetHookTypeConfigOutputArgs {
    /**
     * The Amazon Resource Name (ARN) for the configuration data, in this account and region.
     */
    configurationArn: pulumi.Input<string>;
}
