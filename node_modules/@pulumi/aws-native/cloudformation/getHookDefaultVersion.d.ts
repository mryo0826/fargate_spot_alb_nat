import * as pulumi from "@pulumi/pulumi";
/**
 * Set a version as default version for a hook in CloudFormation Registry.
 */
export declare function getHookDefaultVersion(args: GetHookDefaultVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetHookDefaultVersionResult>;
export interface GetHookDefaultVersionArgs {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
     */
    arn: string;
}
export interface GetHookDefaultVersionResult {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
     */
    readonly arn?: string;
    /**
     * The name of the type being registered.
     *
     * We recommend that type names adhere to the following pattern: company_or_organization::service::type.
     */
    readonly typeName?: string;
    /**
     * The Amazon Resource Name (ARN) of the type version.
     */
    readonly typeVersionArn?: string;
    /**
     * The ID of an existing version of the hook to set as the default.
     */
    readonly versionId?: string;
}
/**
 * Set a version as default version for a hook in CloudFormation Registry.
 */
export declare function getHookDefaultVersionOutput(args: GetHookDefaultVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetHookDefaultVersionResult>;
export interface GetHookDefaultVersionOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
     */
    arn: pulumi.Input<string>;
}
