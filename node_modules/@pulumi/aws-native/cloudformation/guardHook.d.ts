import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * This is a CloudFormation resource for activating the first-party AWS::Hooks::GuardHook.
 */
export declare class GuardHook extends pulumi.CustomResource {
    /**
     * Get an existing GuardHook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): GuardHook;
    /**
     * Returns true if the given object is an instance of GuardHook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is GuardHook;
    /**
     * The typename alias for the hook.
     */
    readonly alias: pulumi.Output<string>;
    /**
     * The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
     */
    readonly executionRole: pulumi.Output<string>;
    /**
     * Attribute to specify CloudFormation behavior on hook failure.
     */
    readonly failureMode: pulumi.Output<enums.cloudformation.GuardHookFailureMode>;
    /**
     * The Amazon Resource Name (ARN) of the activated hook
     */
    readonly hookArn: pulumi.Output<string>;
    /**
     * Attribute to specify which stacks this hook applies to or should get invoked for
     */
    readonly hookStatus: pulumi.Output<enums.cloudformation.GuardHookHookStatus>;
    /**
     * S3 Bucket where the guard validate report will be uploaded to
     */
    readonly logBucket: pulumi.Output<string | undefined>;
    /**
     * Specifies the S3 location of your input parameters.
     */
    readonly options: pulumi.Output<outputs.cloudformation.OptionsProperties | undefined>;
    /**
     * Specifies the S3 location of your Guard rules.
     */
    readonly ruleLocation: pulumi.Output<outputs.cloudformation.GuardHookS3Location>;
    /**
     * Filters to allow hooks to target specific stack attributes
     */
    readonly stackFilters: pulumi.Output<outputs.cloudformation.StackFiltersProperties | undefined>;
    /**
     * Attribute to specify which targets should invoke the hook
     */
    readonly targetFilters: pulumi.Output<outputs.cloudformation.TargetFilters0Properties | outputs.cloudformation.TargetFilters1Properties | undefined>;
    /**
     * Which operations should this Hook run against? Resource changes, stacks or change sets.
     */
    readonly targetOperations: pulumi.Output<enums.cloudformation.GuardHookTargetOperation[]>;
    /**
     * Create a GuardHook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GuardHookArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a GuardHook resource.
 */
export interface GuardHookArgs {
    /**
     * The typename alias for the hook.
     */
    alias: pulumi.Input<string>;
    /**
     * The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
     */
    executionRole: pulumi.Input<string>;
    /**
     * Attribute to specify CloudFormation behavior on hook failure.
     */
    failureMode: pulumi.Input<enums.cloudformation.GuardHookFailureMode>;
    /**
     * Attribute to specify which stacks this hook applies to or should get invoked for
     */
    hookStatus: pulumi.Input<enums.cloudformation.GuardHookHookStatus>;
    /**
     * S3 Bucket where the guard validate report will be uploaded to
     */
    logBucket?: pulumi.Input<string>;
    /**
     * Specifies the S3 location of your input parameters.
     */
    options?: pulumi.Input<inputs.cloudformation.OptionsPropertiesArgs>;
    /**
     * Specifies the S3 location of your Guard rules.
     */
    ruleLocation: pulumi.Input<inputs.cloudformation.GuardHookS3LocationArgs>;
    /**
     * Filters to allow hooks to target specific stack attributes
     */
    stackFilters?: pulumi.Input<inputs.cloudformation.StackFiltersPropertiesArgs>;
    /**
     * Attribute to specify which targets should invoke the hook
     */
    targetFilters?: pulumi.Input<inputs.cloudformation.TargetFilters0PropertiesArgs | inputs.cloudformation.TargetFilters1PropertiesArgs>;
    /**
     * Which operations should this Hook run against? Resource changes, stacks or change sets.
     */
    targetOperations: pulumi.Input<pulumi.Input<enums.cloudformation.GuardHookTargetOperation>[]>;
}
