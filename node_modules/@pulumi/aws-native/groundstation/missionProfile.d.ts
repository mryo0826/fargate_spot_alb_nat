import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * AWS Ground Station Mission Profile resource type for CloudFormation.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myMissionProfile = new aws_native.groundstation.MissionProfile("myMissionProfile", {
 *     name: "My Mission Profile",
 *     contactPrePassDurationSeconds: 120,
 *     contactPostPassDurationSeconds: 180,
 *     minimumViableContactDurationSeconds: 300,
 *     trackingConfigArn: "arn:aws:groundstation:us-east-2:1234567890:config/tracking/00000000-0000-0000-0000-000000000000",
 *     dataflowEdges: [
 *         {
 *             source: "arn:aws:groundstation:us-east-2:1234567890:config/antenna-downlink/11111111-1111-1111-1111-111111111111",
 *             destination: "arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/22222222-2222-2222-2222-222222222222",
 *         },
 *         {
 *             source: "arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/33333333-3333-3333-3333-333333333333",
 *             destination: "arn:aws:groundstation:us-east-2:1234567890:config/antenna-uplink/44444444-4444-4444-4444-444444444444",
 *         },
 *     ],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myMissionProfile = new aws_native.groundstation.MissionProfile("myMissionProfile", {
 *     name: "Mission Profile",
 *     contactPrePassDurationSeconds: 120,
 *     contactPostPassDurationSeconds: 180,
 *     minimumViableContactDurationSeconds: 300,
 *     trackingConfigArn: "arn:aws:groundstation:us-east-2:1234567890:config/tracking/00000000-0000-0000-0000-000000000000",
 *     dataflowEdges: [
 *         {
 *             source: "arn:aws:groundstation:us-east-2:1234567890:config/antenna-downlink/11111111-1111-1111-1111-111111111111",
 *             destination: "arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/22222222-2222-2222-2222-222222222222",
 *         },
 *         {
 *             source: "arn:aws:groundstation:us-east-2:1234567890:config/dataflow-endpoint/33333333-3333-3333-3333-333333333333",
 *             destination: "arn:aws:groundstation:us-east-2:1234567890:config/antenna-uplink/44444444-4444-4444-4444-444444444444",
 *         },
 *     ],
 * });
 *
 * ```
 */
export declare class MissionProfile extends pulumi.CustomResource {
    /**
     * Get an existing MissionProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MissionProfile;
    /**
     * Returns true if the given object is an instance of MissionProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MissionProfile;
    /**
     * The ARN of the mission profile, such as `arn:aws:groundstation:us-east-2:1234567890:mission-profile/9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ID of the mission profile, such as `9940bf3b-d2ba-427e-9906-842b5e5d2296` .
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Post-pass time needed after the contact.
     */
    readonly contactPostPassDurationSeconds: pulumi.Output<number | undefined>;
    /**
     * Pre-pass time needed before the contact.
     */
    readonly contactPrePassDurationSeconds: pulumi.Output<number | undefined>;
    /**
     * A list containing lists of config ARNs. Each list of config ARNs is an edge, with a "from" config and a "to" config.
     */
    readonly dataflowEdges: pulumi.Output<outputs.groundstation.MissionProfileDataflowEdge[]>;
    /**
     * Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     */
    readonly minimumViableContactDurationSeconds: pulumi.Output<number>;
    /**
     * A name used to identify a mission profile.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The region of the mission profile.
     */
    readonly region: pulumi.Output<string>;
    /**
     * The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
     */
    readonly streamsKmsKey: pulumi.Output<outputs.groundstation.MissionProfileStreamsKmsKey | undefined>;
    /**
     * The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
     */
    readonly streamsKmsRole: pulumi.Output<string | undefined>;
    /**
     * Tags assigned to the mission profile.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
     */
    readonly trackingConfigArn: pulumi.Output<string>;
    /**
     * Create a MissionProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MissionProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MissionProfile resource.
 */
export interface MissionProfileArgs {
    /**
     * Post-pass time needed after the contact.
     */
    contactPostPassDurationSeconds?: pulumi.Input<number>;
    /**
     * Pre-pass time needed before the contact.
     */
    contactPrePassDurationSeconds?: pulumi.Input<number>;
    /**
     * A list containing lists of config ARNs. Each list of config ARNs is an edge, with a "from" config and a "to" config.
     */
    dataflowEdges: pulumi.Input<pulumi.Input<inputs.groundstation.MissionProfileDataflowEdgeArgs>[]>;
    /**
     * Visibilities with shorter duration than the specified minimum viable contact duration will be ignored when searching for available contacts.
     */
    minimumViableContactDurationSeconds: pulumi.Input<number>;
    /**
     * A name used to identify a mission profile.
     */
    name?: pulumi.Input<string>;
    /**
     * The ARN of a KMS Key used for encrypting data during transmission from the source to destination locations.
     */
    streamsKmsKey?: pulumi.Input<inputs.groundstation.MissionProfileStreamsKmsKeyArgs>;
    /**
     * The ARN of the KMS Key or Alias Key role used to define permissions on KMS Key usage.
     */
    streamsKmsRole?: pulumi.Input<string>;
    /**
     * Tags assigned to the mission profile.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ARN of a tracking config objects that defines how to track the satellite through the sky during a contact.
     */
    trackingConfigArn: pulumi.Input<string>;
}
