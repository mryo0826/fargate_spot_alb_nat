import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Schema of AWS::EMRContainers::VirtualCluster Type
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testVirtualCluster = new aws_native.emrcontainers.VirtualCluster("testVirtualCluster", {
 *     name: "VirtualClusterName",
 *     containerProvider: {
 *         type: "EKS",
 *         id: "EKSClusterName",
 *         info: {
 *             eksInfo: {
 *                 namespace: "EKSNamespace",
 *             },
 *         },
 *     },
 *     tags: [{
 *         key: "Key1",
 *         value: "Value1",
 *     }],
 * });
 * export const primaryId = undefined;
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testVirtualCluster = new aws_native.emrcontainers.VirtualCluster("testVirtualCluster", {
 *     name: "VirtualClusterName",
 *     containerProvider: {
 *         type: "EKS",
 *         id: "EKSClusterName",
 *         info: {
 *             eksInfo: {
 *                 namespace: "EKSNamespace",
 *             },
 *         },
 *     },
 *     tags: [{
 *         key: "Key1",
 *         value: "Value1",
 *     }],
 * });
 * export const primaryId = testVirtualCluster.id;
 *
 * ```
 */
export declare class VirtualCluster extends pulumi.CustomResource {
    /**
     * Get an existing VirtualCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VirtualCluster;
    /**
     * Returns true if the given object is an instance of VirtualCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VirtualCluster;
    /**
     * The Amazon Resource Name (ARN) of the project, such as `arn:aws:emr-containers:us-east-1:123456789012:/virtualclusters/ab4rp1abcs8xz47n3x0example` .
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Id of the virtual cluster.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Container provider of the virtual cluster.
     */
    readonly containerProvider: pulumi.Output<outputs.emrcontainers.VirtualClusterContainerProvider>;
    /**
     * Name of the virtual cluster.
     */
    readonly name: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this virtual cluster.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a VirtualCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VirtualCluster resource.
 */
export interface VirtualClusterArgs {
    /**
     * Container provider of the virtual cluster.
     */
    containerProvider: pulumi.Input<inputs.emrcontainers.VirtualClusterContainerProviderArgs>;
    /**
     * Name of the virtual cluster.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this virtual cluster.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
