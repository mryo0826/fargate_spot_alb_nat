import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * AWS::DeviceFarm::VPCEConfiguration creates a new Device Farm VPCE Configuration
 */
export declare class VpceConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing VpceConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VpceConfiguration;
    /**
     * Returns true if the given object is an instance of VpceConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpceConfiguration;
    /**
     * The Amazon Resource Name (ARN) of the VPC endpoint. See [Amazon resource names](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference guide* .
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The DNS name that Device Farm will use to map to the private service you want to access.
     */
    readonly serviceDnsName: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * An optional description that provides details about your VPC endpoint configuration.
     */
    readonly vpceConfigurationDescription: pulumi.Output<string | undefined>;
    /**
     * The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
     */
    readonly vpceConfigurationName: pulumi.Output<string>;
    /**
     * The name of the VPC endpoint service that you want to access from Device Farm.
     *
     * The name follows the format `com.amazonaws.vpce.us-west-2.vpce-svc-id` .
     */
    readonly vpceServiceName: pulumi.Output<string>;
    /**
     * Create a VpceConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpceConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VpceConfiguration resource.
 */
export interface VpceConfigurationArgs {
    /**
     * The DNS name that Device Farm will use to map to the private service you want to access.
     */
    serviceDnsName: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) in the *guide* .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * An optional description that provides details about your VPC endpoint configuration.
     */
    vpceConfigurationDescription?: pulumi.Input<string>;
    /**
     * The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.
     */
    vpceConfigurationName?: pulumi.Input<string>;
    /**
     * The name of the VPC endpoint service that you want to access from Device Farm.
     *
     * The name follows the format `com.amazonaws.vpce.us-west-2.vpce-svc-id` .
     */
    vpceServiceName: pulumi.Input<string>;
}
