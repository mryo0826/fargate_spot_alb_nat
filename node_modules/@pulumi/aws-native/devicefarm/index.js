"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpceConfiguration = exports.TestGridProject = exports.Project = exports.NetworkProfile = exports.InstanceProfile = exports.getVpceConfigurationOutput = exports.getVpceConfiguration = exports.getTestGridProjectOutput = exports.getTestGridProject = exports.getProjectOutput = exports.getProject = exports.getNetworkProfileOutput = exports.getNetworkProfile = exports.getInstanceProfileOutput = exports.getInstanceProfile = exports.getDevicePoolOutput = exports.getDevicePool = exports.DevicePool = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.DevicePool = null;
utilities.lazyLoad(exports, ["DevicePool"], () => require("./devicePool"));
exports.getDevicePool = null;
exports.getDevicePoolOutput = null;
utilities.lazyLoad(exports, ["getDevicePool", "getDevicePoolOutput"], () => require("./getDevicePool"));
exports.getInstanceProfile = null;
exports.getInstanceProfileOutput = null;
utilities.lazyLoad(exports, ["getInstanceProfile", "getInstanceProfileOutput"], () => require("./getInstanceProfile"));
exports.getNetworkProfile = null;
exports.getNetworkProfileOutput = null;
utilities.lazyLoad(exports, ["getNetworkProfile", "getNetworkProfileOutput"], () => require("./getNetworkProfile"));
exports.getProject = null;
exports.getProjectOutput = null;
utilities.lazyLoad(exports, ["getProject", "getProjectOutput"], () => require("./getProject"));
exports.getTestGridProject = null;
exports.getTestGridProjectOutput = null;
utilities.lazyLoad(exports, ["getTestGridProject", "getTestGridProjectOutput"], () => require("./getTestGridProject"));
exports.getVpceConfiguration = null;
exports.getVpceConfigurationOutput = null;
utilities.lazyLoad(exports, ["getVpceConfiguration", "getVpceConfigurationOutput"], () => require("./getVpceConfiguration"));
exports.InstanceProfile = null;
utilities.lazyLoad(exports, ["InstanceProfile"], () => require("./instanceProfile"));
exports.NetworkProfile = null;
utilities.lazyLoad(exports, ["NetworkProfile"], () => require("./networkProfile"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
exports.TestGridProject = null;
utilities.lazyLoad(exports, ["TestGridProject"], () => require("./testGridProject"));
exports.VpceConfiguration = null;
utilities.lazyLoad(exports, ["VpceConfiguration"], () => require("./vpceConfiguration"));
// Export enums:
__exportStar(require("../types/enums/devicefarm"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:devicefarm:DevicePool":
                return new exports.DevicePool(name, undefined, { urn });
            case "aws-native:devicefarm:InstanceProfile":
                return new exports.InstanceProfile(name, undefined, { urn });
            case "aws-native:devicefarm:NetworkProfile":
                return new exports.NetworkProfile(name, undefined, { urn });
            case "aws-native:devicefarm:Project":
                return new exports.Project(name, undefined, { urn });
            case "aws-native:devicefarm:TestGridProject":
                return new exports.TestGridProject(name, undefined, { urn });
            case "aws-native:devicefarm:VpceConfiguration":
                return new exports.VpceConfiguration(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "devicefarm", _module);
//# sourceMappingURL=index.js.map