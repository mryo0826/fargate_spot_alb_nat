"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Project = exports.Portal = exports.getProjectOutput = exports.getProject = exports.getPortalOutput = exports.getPortal = exports.getGatewayOutput = exports.getGateway = exports.getDashboardOutput = exports.getDashboard = exports.getAssetModelOutput = exports.getAssetModel = exports.getAssetOutput = exports.getAsset = exports.getAccessPolicyOutput = exports.getAccessPolicy = exports.Gateway = exports.Dashboard = exports.AssetModel = exports.Asset = exports.AccessPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AccessPolicy = null;
utilities.lazyLoad(exports, ["AccessPolicy"], () => require("./accessPolicy"));
exports.Asset = null;
utilities.lazyLoad(exports, ["Asset"], () => require("./asset"));
exports.AssetModel = null;
utilities.lazyLoad(exports, ["AssetModel"], () => require("./assetModel"));
exports.Dashboard = null;
utilities.lazyLoad(exports, ["Dashboard"], () => require("./dashboard"));
exports.Gateway = null;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));
exports.getAccessPolicy = null;
exports.getAccessPolicyOutput = null;
utilities.lazyLoad(exports, ["getAccessPolicy", "getAccessPolicyOutput"], () => require("./getAccessPolicy"));
exports.getAsset = null;
exports.getAssetOutput = null;
utilities.lazyLoad(exports, ["getAsset", "getAssetOutput"], () => require("./getAsset"));
exports.getAssetModel = null;
exports.getAssetModelOutput = null;
utilities.lazyLoad(exports, ["getAssetModel", "getAssetModelOutput"], () => require("./getAssetModel"));
exports.getDashboard = null;
exports.getDashboardOutput = null;
utilities.lazyLoad(exports, ["getDashboard", "getDashboardOutput"], () => require("./getDashboard"));
exports.getGateway = null;
exports.getGatewayOutput = null;
utilities.lazyLoad(exports, ["getGateway", "getGatewayOutput"], () => require("./getGateway"));
exports.getPortal = null;
exports.getPortalOutput = null;
utilities.lazyLoad(exports, ["getPortal", "getPortalOutput"], () => require("./getPortal"));
exports.getProject = null;
exports.getProjectOutput = null;
utilities.lazyLoad(exports, ["getProject", "getProjectOutput"], () => require("./getProject"));
exports.Portal = null;
utilities.lazyLoad(exports, ["Portal"], () => require("./portal"));
exports.Project = null;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));
// Export enums:
__exportStar(require("../types/enums/iotsitewise"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:iotsitewise:AccessPolicy":
                return new exports.AccessPolicy(name, undefined, { urn });
            case "aws-native:iotsitewise:Asset":
                return new exports.Asset(name, undefined, { urn });
            case "aws-native:iotsitewise:AssetModel":
                return new exports.AssetModel(name, undefined, { urn });
            case "aws-native:iotsitewise:Dashboard":
                return new exports.Dashboard(name, undefined, { urn });
            case "aws-native:iotsitewise:Gateway":
                return new exports.Gateway(name, undefined, { urn });
            case "aws-native:iotsitewise:Portal":
                return new exports.Portal(name, undefined, { urn });
            case "aws-native:iotsitewise:Project":
                return new exports.Project(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "iotsitewise", _module);
//# sourceMappingURL=index.js.map