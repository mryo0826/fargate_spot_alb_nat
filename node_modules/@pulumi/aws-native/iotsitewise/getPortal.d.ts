import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::IoTSiteWise::Portal
 */
export declare function getPortal(args: GetPortalArgs, opts?: pulumi.InvokeOptions): Promise<GetPortalResult>;
export interface GetPortalArgs {
    /**
     * The ID of the portal.
     */
    portalId: string;
}
export interface GetPortalResult {
    /**
     * Contains the configuration information of an alarm created in an AWS IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range.
     */
    readonly alarms?: outputs.iotsitewise.AlarmsProperties;
    /**
     * The email address that sends alarm notifications.
     */
    readonly notificationSenderEmail?: string;
    /**
     * The ARN of the portal, which has the following format.
     */
    readonly portalArn?: string;
    /**
     * The AWS SSO application generated client ID (used with AWS SSO APIs).
     */
    readonly portalClientId?: string;
    /**
     * The AWS administrator's contact email address.
     */
    readonly portalContactEmail?: string;
    /**
     * A description for the portal.
     */
    readonly portalDescription?: string;
    /**
     * The ID of the portal.
     */
    readonly portalId?: string;
    /**
     * A friendly name for the portal.
     */
    readonly portalName?: string;
    /**
     * The public root URL for the AWS IoT AWS IoT SiteWise Monitor application portal.
     */
    readonly portalStartUrl?: string;
    readonly portalTypeConfiguration?: {
        [key: string]: outputs.iotsitewise.PortalTypeEntry;
    };
    /**
     * The ARN of a service role that allows the portal's users to access your AWS IoT SiteWise resources on your behalf.
     */
    readonly roleArn?: string;
    /**
     * A list of key-value pairs that contain metadata for the portal.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::IoTSiteWise::Portal
 */
export declare function getPortalOutput(args: GetPortalOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPortalResult>;
export interface GetPortalOutputArgs {
    /**
     * The ID of the portal.
     */
    portalId: pulumi.Input<string>;
}
