import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::IoTSiteWise::Asset
 */
export declare function getAsset(args: GetAssetArgs, opts?: pulumi.InvokeOptions): Promise<GetAssetResult>;
export interface GetAssetArgs {
    /**
     * The ID of the asset
     */
    assetId: string;
}
export interface GetAssetResult {
    /**
     * The ARN of the asset
     */
    readonly assetArn?: string;
    /**
     * A description for the asset
     */
    readonly assetDescription?: string;
    /**
     * The External ID of the asset
     */
    readonly assetExternalId?: string;
    /**
     * A list of asset hierarchies that each contain a `hierarchyId` . A hierarchy specifies allowed parent/child asset relationships.
     */
    readonly assetHierarchies?: outputs.iotsitewise.AssetHierarchy[];
    /**
     * The ID of the asset
     */
    readonly assetId?: string;
    /**
     * The ID of the asset model from which to create the asset.
     */
    readonly assetModelId?: string;
    /**
     * A unique, friendly name for the asset.
     */
    readonly assetName?: string;
    /**
     * The list of asset properties for the asset.
     *
     * This object doesn't include properties that you define in composite models. You can find composite model properties in the `assetCompositeModels` object.
     */
    readonly assetProperties?: outputs.iotsitewise.AssetProperty[];
    /**
     * A list of key-value pairs that contain metadata for the asset.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource schema for AWS::IoTSiteWise::Asset
 */
export declare function getAssetOutput(args: GetAssetOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAssetResult>;
export interface GetAssetOutputArgs {
    /**
     * The ID of the asset
     */
    assetId: pulumi.Input<string>;
}
