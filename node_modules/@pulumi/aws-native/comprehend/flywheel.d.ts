import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * The AWS::Comprehend::Flywheel resource creates an Amazon Comprehend Flywheel that enables customer to train their model.
 */
export declare class Flywheel extends pulumi.CustomResource {
    /**
     * Get an existing Flywheel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Flywheel;
    /**
     * Returns true if the given object is an instance of Flywheel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Flywheel;
    /**
     * The Amazon Resource Number (ARN) of the active model version.
     */
    readonly activeModelArn: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the flywheel.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants Amazon Comprehend permission to access the flywheel data.
     */
    readonly dataAccessRoleArn: pulumi.Output<string>;
    /**
     * Amazon S3 URI of the data lake location.
     */
    readonly dataLakeS3Uri: pulumi.Output<string>;
    /**
     * Data security configuration.
     */
    readonly dataSecurityConfig: pulumi.Output<outputs.comprehend.FlywheelDataSecurityConfig | undefined>;
    /**
     * Name for the flywheel.
     */
    readonly flywheelName: pulumi.Output<string>;
    /**
     * Model type of the flywheel's model.
     */
    readonly modelType: pulumi.Output<enums.comprehend.FlywheelModelType | undefined>;
    /**
     * Tags associated with the endpoint being created. A tag is a key-value pair that adds metadata to the endpoint. For example, a tag with "Sales" as the key might be added to an endpoint to indicate its use by the sales department.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Configuration about the model associated with a flywheel.
     */
    readonly taskConfig: pulumi.Output<outputs.comprehend.FlywheelTaskConfig | undefined>;
    /**
     * Create a Flywheel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlywheelArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Flywheel resource.
 */
export interface FlywheelArgs {
    /**
     * The Amazon Resource Number (ARN) of the active model version.
     */
    activeModelArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role that grants Amazon Comprehend permission to access the flywheel data.
     */
    dataAccessRoleArn: pulumi.Input<string>;
    /**
     * Amazon S3 URI of the data lake location.
     */
    dataLakeS3Uri: pulumi.Input<string>;
    /**
     * Data security configuration.
     */
    dataSecurityConfig?: pulumi.Input<inputs.comprehend.FlywheelDataSecurityConfigArgs>;
    /**
     * Name for the flywheel.
     */
    flywheelName?: pulumi.Input<string>;
    /**
     * Model type of the flywheel's model.
     */
    modelType?: pulumi.Input<enums.comprehend.FlywheelModelType>;
    /**
     * Tags associated with the endpoint being created. A tag is a key-value pair that adds metadata to the endpoint. For example, a tag with "Sales" as the key might be added to an endpoint to indicate its use by the sales department.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Configuration about the model associated with a flywheel.
     */
    taskConfig?: pulumi.Input<inputs.comprehend.FlywheelTaskConfigArgs>;
}
