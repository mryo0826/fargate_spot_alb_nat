import * as pulumi from "@pulumi/pulumi";
/**
 * Resource schema for AWS::IoTTwinMaker::Scene
 */
export declare function getScene(args: GetSceneArgs, opts?: pulumi.InvokeOptions): Promise<GetSceneResult>;
export interface GetSceneArgs {
    /**
     * The ID of the scene.
     */
    sceneId: string;
    /**
     * The ID of the scene.
     */
    workspaceId: string;
}
export interface GetSceneResult {
    /**
     * The ARN of the scene.
     */
    readonly arn?: string;
    /**
     * A list of capabilities that the scene uses to render.
     */
    readonly capabilities?: string[];
    /**
     * The relative path that specifies the location of the content definition file.
     */
    readonly contentLocation?: string;
    /**
     * The date and time when the scene was created.
     */
    readonly creationDateTime?: string;
    /**
     * The description of the scene.
     */
    readonly description?: string;
    /**
     * A key-value pair of generated scene metadata for the scene.
     */
    readonly generatedSceneMetadata?: {
        [key: string]: string;
    };
    /**
     * A key-value pair of scene metadata for the scene.
     */
    readonly sceneMetadata?: {
        [key: string]: string;
    };
    /**
     * A key-value pair to associate with a resource.
     */
    readonly tags?: {
        [key: string]: string;
    };
    /**
     * The date and time of the current update.
     */
    readonly updateDateTime?: string;
}
/**
 * Resource schema for AWS::IoTTwinMaker::Scene
 */
export declare function getSceneOutput(args: GetSceneOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSceneResult>;
export interface GetSceneOutputArgs {
    /**
     * The ID of the scene.
     */
    sceneId: pulumi.Input<string>;
    /**
     * The ID of the scene.
     */
    workspaceId: pulumi.Input<string>;
}
