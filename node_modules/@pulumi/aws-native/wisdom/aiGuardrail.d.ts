import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::Wisdom::AIGuardrail Resource Type
 */
export declare class AiGuardrail extends pulumi.CustomResource {
    /**
     * Get an existing AiGuardrail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AiGuardrail;
    /**
     * Returns true if the given object is an instance of AiGuardrail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AiGuardrail;
    /**
     * The Amazon Resource Name (ARN) of the AI Guardrail.
     */
    readonly aiGuardrailArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Q in Connect AI Guardrail.
     */
    readonly aiGuardrailId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the Amazon Q in Connect assistant.
     */
    readonly assistantArn: pulumi.Output<string>;
    /**
     * The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
     */
    readonly assistantId: pulumi.Output<string>;
    /**
     * Messaging for when violations are detected in text
     */
    readonly blockedInputMessaging: pulumi.Output<string>;
    /**
     * Messaging for when violations are detected in text
     */
    readonly blockedOutputsMessaging: pulumi.Output<string>;
    /**
     * Contains details about how to handle harmful content.
     */
    readonly contentPolicyConfig: pulumi.Output<outputs.wisdom.AiGuardrailAiGuardrailContentPolicyConfig | undefined>;
    /**
     * The policy configuration details for the AI Guardrail's contextual grounding policy.
     */
    readonly contextualGroundingPolicyConfig: pulumi.Output<outputs.wisdom.AiGuardrailAiGuardrailContextualGroundingPolicyConfig | undefined>;
    /**
     * Description of the guardrail or its version
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the AI Guardrail.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Contains details about PII entities and regular expressions to configure for the AI Guardrail.
     */
    readonly sensitiveInformationPolicyConfig: pulumi.Output<outputs.wisdom.AiGuardrailAiGuardrailSensitiveInformationPolicyConfig | undefined>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Contains details about topics that the AI Guardrail should identify and deny.
     */
    readonly topicPolicyConfig: pulumi.Output<outputs.wisdom.AiGuardrailAiGuardrailTopicPolicyConfig | undefined>;
    /**
     * Contains details about the word policy to configured for the AI Guardrail.
     */
    readonly wordPolicyConfig: pulumi.Output<outputs.wisdom.AiGuardrailAiGuardrailWordPolicyConfig | undefined>;
    /**
     * Create a AiGuardrail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiGuardrailArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AiGuardrail resource.
 */
export interface AiGuardrailArgs {
    /**
     * The identifier of the Amazon Q in Connect assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
     */
    assistantId: pulumi.Input<string>;
    /**
     * Messaging for when violations are detected in text
     */
    blockedInputMessaging: pulumi.Input<string>;
    /**
     * Messaging for when violations are detected in text
     */
    blockedOutputsMessaging: pulumi.Input<string>;
    /**
     * Contains details about how to handle harmful content.
     */
    contentPolicyConfig?: pulumi.Input<inputs.wisdom.AiGuardrailAiGuardrailContentPolicyConfigArgs>;
    /**
     * The policy configuration details for the AI Guardrail's contextual grounding policy.
     */
    contextualGroundingPolicyConfig?: pulumi.Input<inputs.wisdom.AiGuardrailAiGuardrailContextualGroundingPolicyConfigArgs>;
    /**
     * Description of the guardrail or its version
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the AI Guardrail.
     */
    name?: pulumi.Input<string>;
    /**
     * Contains details about PII entities and regular expressions to configure for the AI Guardrail.
     */
    sensitiveInformationPolicyConfig?: pulumi.Input<inputs.wisdom.AiGuardrailAiGuardrailSensitiveInformationPolicyConfigArgs>;
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Contains details about topics that the AI Guardrail should identify and deny.
     */
    topicPolicyConfig?: pulumi.Input<inputs.wisdom.AiGuardrailAiGuardrailTopicPolicyConfigArgs>;
    /**
     * Contains details about the word policy to configured for the AI Guardrail.
     */
    wordPolicyConfig?: pulumi.Input<inputs.wisdom.AiGuardrailAiGuardrailWordPolicyConfigArgs>;
}
