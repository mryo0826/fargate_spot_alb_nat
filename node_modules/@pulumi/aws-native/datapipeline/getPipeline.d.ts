import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare function getPipeline(args: GetPipelineArgs, opts?: pulumi.InvokeOptions): Promise<GetPipelineResult>;
export interface GetPipelineArgs {
    /**
     * The ID of the pipeline.
     */
    pipelineId: string;
}
export interface GetPipelineResult {
    /**
     * Indicates whether to validate and start the pipeline or stop an active pipeline. By default, the value is set to true.
     */
    readonly activate?: boolean;
    /**
     * The parameter objects used with the pipeline.
     */
    readonly parameterObjects?: outputs.datapipeline.PipelineParameterObject[];
    /**
     * The parameter values used with the pipeline.
     */
    readonly parameterValues?: outputs.datapipeline.PipelineParameterValue[];
    /**
     * The ID of the pipeline.
     */
    readonly pipelineId?: string;
    /**
     * The objects that define the pipeline. These objects overwrite the existing pipeline definition. Not all objects, fields, and values can be updated. For information about restrictions, see Editing Your Pipeline in the AWS Data Pipeline Developer Guide.
     */
    readonly pipelineObjects?: outputs.datapipeline.PipelineObject[];
    /**
     * A list of arbitrary tags (key-value pairs) to associate with the pipeline, which you can use to control permissions. For more information, see Controlling Access to Pipelines and Resources in the AWS Data Pipeline Developer Guide.
     */
    readonly pipelineTags?: outputs.Tag[];
}
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare function getPipelineOutput(args: GetPipelineOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPipelineResult>;
export interface GetPipelineOutputArgs {
    /**
     * The ID of the pipeline.
     */
    pipelineId: pulumi.Input<string>;
}
