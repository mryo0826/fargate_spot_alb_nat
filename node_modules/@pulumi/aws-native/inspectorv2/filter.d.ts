import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Inspector Filter resource schema
 */
export declare class Filter extends pulumi.CustomResource {
    /**
     * Get an existing Filter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Filter;
    /**
     * Returns true if the given object is an instance of Filter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Filter;
    /**
     * Findings filter ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Findings filter description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Findings filter action.
     */
    readonly filterAction: pulumi.Output<enums.inspectorv2.FilterAction>;
    /**
     * Findings filter criteria.
     */
    readonly filterCriteria: pulumi.Output<outputs.inspectorv2.FilterCriteria>;
    /**
     * Findings filter name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a Filter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FilterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Filter resource.
 */
export interface FilterArgs {
    /**
     * Findings filter description.
     */
    description?: pulumi.Input<string>;
    /**
     * Findings filter action.
     */
    filterAction: pulumi.Input<enums.inspectorv2.FilterAction>;
    /**
     * Findings filter criteria.
     */
    filterCriteria: pulumi.Input<inputs.inspectorv2.FilterCriteriaArgs>;
    /**
     * Findings filter name.
     */
    name?: pulumi.Input<string>;
}
