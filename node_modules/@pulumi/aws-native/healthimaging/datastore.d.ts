import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Definition of AWS::HealthImaging::Datastore Resource Type
 */
export declare class Datastore extends pulumi.CustomResource {
    /**
     * Get an existing Datastore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Datastore;
    /**
     * Returns true if the given object is an instance of Datastore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Datastore;
    /**
     * The timestamp when the data store was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) for the data store.
     */
    readonly datastoreArn: pulumi.Output<string>;
    /**
     * The data store identifier.
     */
    readonly datastoreId: pulumi.Output<string>;
    /**
     * The data store name.
     */
    readonly datastoreName: pulumi.Output<string | undefined>;
    /**
     * The data store status.
     */
    readonly datastoreStatus: pulumi.Output<enums.healthimaging.DatastoreStatus>;
    /**
     * The Amazon Resource Name (ARN) assigned to the Key Management Service (KMS) key for accessing encrypted data.
     */
    readonly kmsKeyArn: pulumi.Output<string | undefined>;
    /**
     * The tags provided when creating a data store.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The timestamp when the data store was last updated.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a Datastore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatastoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Datastore resource.
 */
export interface DatastoreArgs {
    /**
     * The data store name.
     */
    datastoreName?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) assigned to the Key Management Service (KMS) key for accessing encrypted data.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The tags provided when creating a data store.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
