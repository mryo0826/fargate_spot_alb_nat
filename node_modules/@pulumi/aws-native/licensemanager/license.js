"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.License = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::LicenseManager::License
 */
class License extends pulumi.CustomResource {
    /**
     * Get an existing License resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new License(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of License.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === License.__pulumiType;
    }
    /**
     * Create a License resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.consumptionConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'consumptionConfiguration'");
            }
            if ((!args || args.entitlements === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entitlements'");
            }
            if ((!args || args.homeRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'homeRegion'");
            }
            if ((!args || args.issuer === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuer'");
            }
            if ((!args || args.productName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productName'");
            }
            if ((!args || args.validity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validity'");
            }
            resourceInputs["beneficiary"] = args ? args.beneficiary : undefined;
            resourceInputs["consumptionConfiguration"] = args ? args.consumptionConfiguration : undefined;
            resourceInputs["entitlements"] = args ? args.entitlements : undefined;
            resourceInputs["homeRegion"] = args ? args.homeRegion : undefined;
            resourceInputs["issuer"] = args ? args.issuer : undefined;
            resourceInputs["licenseMetadata"] = args ? args.licenseMetadata : undefined;
            resourceInputs["licenseName"] = args ? args.licenseName : undefined;
            resourceInputs["productName"] = args ? args.productName : undefined;
            resourceInputs["productSku"] = args ? args.productSku : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["validity"] = args ? args.validity : undefined;
            resourceInputs["licenseArn"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        else {
            resourceInputs["beneficiary"] = undefined /*out*/;
            resourceInputs["consumptionConfiguration"] = undefined /*out*/;
            resourceInputs["entitlements"] = undefined /*out*/;
            resourceInputs["homeRegion"] = undefined /*out*/;
            resourceInputs["issuer"] = undefined /*out*/;
            resourceInputs["licenseArn"] = undefined /*out*/;
            resourceInputs["licenseMetadata"] = undefined /*out*/;
            resourceInputs["licenseName"] = undefined /*out*/;
            resourceInputs["productName"] = undefined /*out*/;
            resourceInputs["productSku"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["validity"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(License.__pulumiType, name, resourceInputs, opts);
    }
}
exports.License = License;
/** @internal */
License.__pulumiType = 'aws-native:licensemanager:License';
//# sourceMappingURL=license.js.map