import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * The resource schema for AWSLogs QueryDefinition
 */
export declare function getQueryDefinition(args: GetQueryDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetQueryDefinitionResult>;
export interface GetQueryDefinitionArgs {
    /**
     * Unique identifier of a query definition
     */
    queryDefinitionId: string;
}
export interface GetQueryDefinitionResult {
    /**
     * Optionally define specific log groups as part of your query definition
     */
    readonly logGroupNames?: string[];
    /**
     * A name for the saved query definition
     */
    readonly name?: string;
    /**
     * Unique identifier of a query definition
     */
    readonly queryDefinitionId?: string;
    /**
     * Query language of the query string. Possible values are CWLI, SQL, PPL, with CWLI being the default.
     */
    readonly queryLanguage?: enums.logs.QueryDefinitionQueryLanguage;
    /**
     * The query string to use for this definition
     */
    readonly queryString?: string;
}
/**
 * The resource schema for AWSLogs QueryDefinition
 */
export declare function getQueryDefinitionOutput(args: GetQueryDefinitionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetQueryDefinitionResult>;
export interface GetQueryDefinitionOutputArgs {
    /**
     * Unique identifier of a query definition
     */
    queryDefinitionId: pulumi.Input<string>;
}
