"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMetricFilterOutput = exports.getMetricFilter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
 *  The maximum number of metric filters that can be associated with a log group is 100.
 */
function getMetricFilter(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:logs:getMetricFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}
exports.getMetricFilter = getMetricFilter;
/**
 * The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
 *  The maximum number of metric filters that can be associated with a log group is 100.
 */
function getMetricFilterOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:logs:getMetricFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}
exports.getMetricFilterOutput = getMetricFilterOutput;
//# sourceMappingURL=getMetricFilter.js.map