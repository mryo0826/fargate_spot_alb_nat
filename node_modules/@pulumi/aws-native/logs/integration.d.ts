import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Schema for Logs Integration Resource
 */
export declare class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Integration;
    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Integration;
    /**
     * User provided identifier for integration, unique to the user account.
     */
    readonly integrationName: pulumi.Output<string>;
    /**
     * Status of creation for the Integration and its resources
     */
    readonly integrationStatus: pulumi.Output<enums.logs.IntegrationStatus>;
    /**
     * The type of the Integration.
     */
    readonly integrationType: pulumi.Output<enums.logs.IntegrationType>;
    /**
     * OpenSearchResourceConfig for the given Integration
     */
    readonly resourceConfig: pulumi.Output<outputs.logs.ResourceConfigProperties>;
    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * User provided identifier for integration, unique to the user account.
     */
    integrationName?: pulumi.Input<string>;
    /**
     * The type of the Integration.
     */
    integrationType: pulumi.Input<enums.logs.IntegrationType>;
    /**
     * OpenSearchResourceConfig for the given Integration
     */
    resourceConfig: pulumi.Input<inputs.logs.ResourceConfigPropertiesArgs>;
}
