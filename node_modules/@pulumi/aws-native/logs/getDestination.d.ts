import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::Logs::Destination resource specifies a CloudWatch Logs destination. A destination encapsulates a physical resource (such as an Amazon Kinesis data stream) and enables you to subscribe that resource to a stream of log events.
 */
export declare function getDestination(args: GetDestinationArgs, opts?: pulumi.InvokeOptions): Promise<GetDestinationResult>;
export interface GetDestinationArgs {
    /**
     * The name of the destination resource
     */
    destinationName: string;
}
export interface GetDestinationResult {
    /**
     * The ARN of the CloudWatch Logs destination, such as `arn:aws:logs:us-west-1:123456789012:destination:MyDestination` .
     */
    readonly arn?: string;
    /**
     * An IAM policy document that governs which AWS accounts can create subscription filters against this destination.
     */
    readonly destinationPolicy?: string;
    /**
     * The ARN of an IAM role that permits CloudWatch Logs to send data to the specified AWS resource
     */
    readonly roleArn?: string;
    /**
     * The ARN of the physical target where the log events are delivered (for example, a Kinesis stream)
     */
    readonly targetArn?: string;
}
/**
 * The AWS::Logs::Destination resource specifies a CloudWatch Logs destination. A destination encapsulates a physical resource (such as an Amazon Kinesis data stream) and enables you to subscribe that resource to a stream of log events.
 */
export declare function getDestinationOutput(args: GetDestinationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDestinationResult>;
export interface GetDestinationOutputArgs {
    /**
     * The name of the destination resource
     */
    destinationName: pulumi.Input<string>;
}
