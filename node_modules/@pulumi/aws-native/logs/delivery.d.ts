import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * This structure contains information about one delivery in your account.
 *
 * A delivery is a connection between a logical delivery source and a logical delivery destination.
 *
 * For more information, see [CreateDelivery](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_CreateDelivery.html).
 */
export declare class Delivery extends pulumi.CustomResource {
    /**
     * Get an existing Delivery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Delivery;
    /**
     * Returns true if the given object is an instance of Delivery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Delivery;
    /**
     * The Amazon Resource Name (ARN) that uniquely identifies this delivery.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ARN of the delivery destination that is associated with this delivery.
     */
    readonly deliveryDestinationArn: pulumi.Output<string>;
    /**
     * Displays whether the delivery destination associated with this delivery is CloudWatch Logs, Amazon S3, or Kinesis Data Firehose.
     */
    readonly deliveryDestinationType: pulumi.Output<string>;
    /**
     * The unique ID that identifies this delivery in your account.
     */
    readonly deliveryId: pulumi.Output<string>;
    /**
     * The name of the delivery source that is associated with this delivery.
     */
    readonly deliverySourceName: pulumi.Output<string>;
    /**
     * The field delimiter to use between record fields when the final output format of a delivery is in Plain , W3C , or Raw format.
     */
    readonly fieldDelimiter: pulumi.Output<string | undefined>;
    /**
     * The list of record fields to be delivered to the destination, in order. If the delivery's log source has mandatory fields, they must be included in this list.
     */
    readonly recordFields: pulumi.Output<string[] | undefined>;
    /**
     * This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
     */
    readonly s3EnableHiveCompatiblePath: pulumi.Output<boolean | undefined>;
    /**
     * This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source. See ConfigurationTemplate$allowedSuffixPathFields for more info on what values are supported in the suffix path for each log source.
     */
    readonly s3SuffixPath: pulumi.Output<string | undefined>;
    /**
     * The tags that have been assigned to this delivery.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Delivery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeliveryArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Delivery resource.
 */
export interface DeliveryArgs {
    /**
     * The ARN of the delivery destination that is associated with this delivery.
     */
    deliveryDestinationArn: pulumi.Input<string>;
    /**
     * The name of the delivery source that is associated with this delivery.
     */
    deliverySourceName: pulumi.Input<string>;
    /**
     * The field delimiter to use between record fields when the final output format of a delivery is in Plain , W3C , or Raw format.
     */
    fieldDelimiter?: pulumi.Input<string>;
    /**
     * The list of record fields to be delivered to the destination, in order. If the delivery's log source has mandatory fields, they must be included in this list.
     */
    recordFields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * This parameter causes the S3 objects that contain delivered logs to use a prefix structure that allows for integration with Apache Hive.
     */
    s3EnableHiveCompatiblePath?: pulumi.Input<boolean>;
    /**
     * This string allows re-configuring the S3 object prefix to contain either static or variable sections. The valid variables to use in the suffix path will vary by each log source. See ConfigurationTemplate$allowedSuffixPathFields for more info on what values are supported in the suffix path for each log source.
     */
    s3SuffixPath?: pulumi.Input<string>;
    /**
     * The tags that have been assigned to this delivery.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
