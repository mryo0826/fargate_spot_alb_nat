"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSubscriptionFilterOutput = exports.getSubscriptionFilter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The ``AWS::Logs::SubscriptionFilter`` resource specifies a subscription filter and associates it with the specified log group. Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination. Currently, the supported destinations are:
 *   +  An Amazon Kinesis data stream belonging to the same account as the subscription filter, for same-account delivery.
 *   +  A logical destination that belongs to a different account, for cross-account delivery.
 *   +  An Amazon Kinesis Firehose delivery stream that belongs to the same account as the subscription filter, for same-account delivery.
 *   +  An LAMlong function that belongs to the same account as the subscription filter, for same-account delivery.
 *
 *  There can be as many as two subscription filters associated with a log group.
 */
function getSubscriptionFilter(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:logs:getSubscriptionFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}
exports.getSubscriptionFilter = getSubscriptionFilter;
/**
 * The ``AWS::Logs::SubscriptionFilter`` resource specifies a subscription filter and associates it with the specified log group. Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination. Currently, the supported destinations are:
 *   +  An Amazon Kinesis data stream belonging to the same account as the subscription filter, for same-account delivery.
 *   +  A logical destination that belongs to a different account, for cross-account delivery.
 *   +  An Amazon Kinesis Firehose delivery stream that belongs to the same account as the subscription filter, for same-account delivery.
 *   +  An LAMlong function that belongs to the same account as the subscription filter, for same-account delivery.
 *
 *  There can be as many as two subscription filters associated with a log group.
 */
function getSubscriptionFilterOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:logs:getSubscriptionFilter", {
        "filterName": args.filterName,
        "logGroupName": args.logGroupName,
    }, opts);
}
exports.getSubscriptionFilterOutput = getSubscriptionFilterOutput;
//# sourceMappingURL=getSubscriptionFilter.js.map