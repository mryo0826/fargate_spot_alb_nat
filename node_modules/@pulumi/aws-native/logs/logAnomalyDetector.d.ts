import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * The AWS::Logs::LogAnomalyDetector resource specifies a CloudWatch Logs LogAnomalyDetector.
 */
export declare class LogAnomalyDetector extends pulumi.CustomResource {
    /**
     * Get an existing LogAnomalyDetector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LogAnomalyDetector;
    /**
     * Returns true if the given object is an instance of LogAnomalyDetector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LogAnomalyDetector;
    /**
     * Account ID for owner of detector
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * ARN of LogAnomalyDetector
     */
    readonly anomalyDetectorArn: pulumi.Output<string>;
    /**
     * Current status of detector.
     */
    readonly anomalyDetectorStatus: pulumi.Output<string>;
    /**
     * The number of days to have visibility on an anomaly. After this time period has elapsed for an anomaly, it will be automatically baselined and the anomaly detector will treat new occurrences of a similar anomaly as normal. Therefore, if you do not correct the cause of an anomaly during the time period specified in `AnomalyVisibilityTime` , it will be considered normal going forward and will not be detected as an anomaly.
     */
    readonly anomalyVisibilityTime: pulumi.Output<number | undefined>;
    /**
     * When detector was created.
     */
    readonly creationTimeStamp: pulumi.Output<number>;
    /**
     * Name of detector
     */
    readonly detectorName: pulumi.Output<string | undefined>;
    /**
     * How often log group is evaluated
     */
    readonly evaluationFrequency: pulumi.Output<enums.logs.LogAnomalyDetectorEvaluationFrequency | undefined>;
    /**
     * You can use this parameter to limit the anomaly detection model to examine only log events that match the pattern you specify here. For more information, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html) .
     */
    readonly filterPattern: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * When detector was lsat modified.
     */
    readonly lastModifiedTimeStamp: pulumi.Output<number>;
    /**
     * List of Arns for the given log group
     */
    readonly logGroupArnList: pulumi.Output<string[] | undefined>;
    /**
     * Create a LogAnomalyDetector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogAnomalyDetectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LogAnomalyDetector resource.
 */
export interface LogAnomalyDetectorArgs {
    /**
     * Account ID for owner of detector
     */
    accountId?: pulumi.Input<string>;
    /**
     * The number of days to have visibility on an anomaly. After this time period has elapsed for an anomaly, it will be automatically baselined and the anomaly detector will treat new occurrences of a similar anomaly as normal. Therefore, if you do not correct the cause of an anomaly during the time period specified in `AnomalyVisibilityTime` , it will be considered normal going forward and will not be detected as an anomaly.
     */
    anomalyVisibilityTime?: pulumi.Input<number>;
    /**
     * Name of detector
     */
    detectorName?: pulumi.Input<string>;
    /**
     * How often log group is evaluated
     */
    evaluationFrequency?: pulumi.Input<enums.logs.LogAnomalyDetectorEvaluationFrequency>;
    /**
     * You can use this parameter to limit the anomaly detection model to examine only log events that match the pattern you specify here. For more information, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html) .
     */
    filterPattern?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * List of Arns for the given log group
     */
    logGroupArnList?: pulumi.Input<pulumi.Input<string>[]>;
}
