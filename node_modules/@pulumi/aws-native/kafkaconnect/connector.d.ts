import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::KafkaConnect::Connector
 */
export declare class Connector extends pulumi.CustomResource {
    /**
     * Get an existing Connector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Connector;
    /**
     * Returns true if the given object is an instance of Connector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Connector;
    /**
     * The connector's compute capacity settings.
     */
    readonly capacity: pulumi.Output<outputs.kafkaconnect.ConnectorCapacity>;
    /**
     * Amazon Resource Name for the created Connector.
     */
    readonly connectorArn: pulumi.Output<string>;
    /**
     * The configuration for the connector.
     */
    readonly connectorConfiguration: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A summary description of the connector.
     */
    readonly connectorDescription: pulumi.Output<string | undefined>;
    /**
     * The name of the connector.
     */
    readonly connectorName: pulumi.Output<string>;
    /**
     * The details of the Apache Kafka cluster to which the connector is connected.
     */
    readonly kafkaCluster: pulumi.Output<outputs.kafkaconnect.ConnectorKafkaCluster>;
    /**
     * The type of client authentication used to connect to the Apache Kafka cluster. The value is NONE when no client authentication is used.
     */
    readonly kafkaClusterClientAuthentication: pulumi.Output<outputs.kafkaconnect.ConnectorKafkaClusterClientAuthentication>;
    /**
     * Details of encryption in transit to the Apache Kafka cluster.
     */
    readonly kafkaClusterEncryptionInTransit: pulumi.Output<outputs.kafkaconnect.ConnectorKafkaClusterEncryptionInTransit>;
    /**
     * The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
     */
    readonly kafkaConnectVersion: pulumi.Output<string>;
    /**
     * The settings for delivering connector logs to Amazon CloudWatch Logs.
     */
    readonly logDelivery: pulumi.Output<outputs.kafkaconnect.ConnectorLogDelivery | undefined>;
    /**
     * List of plugins to use with the connector.
     */
    readonly plugins: pulumi.Output<outputs.kafkaconnect.ConnectorPlugin[]>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
     */
    readonly serviceExecutionRoleArn: pulumi.Output<string>;
    /**
     * A collection of tags associated with a resource
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The worker configurations that are in use with the connector.
     */
    readonly workerConfiguration: pulumi.Output<outputs.kafkaconnect.ConnectorWorkerConfiguration | undefined>;
    /**
     * Create a Connector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Connector resource.
 */
export interface ConnectorArgs {
    /**
     * The connector's compute capacity settings.
     */
    capacity: pulumi.Input<inputs.kafkaconnect.ConnectorCapacityArgs>;
    /**
     * The configuration for the connector.
     */
    connectorConfiguration: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A summary description of the connector.
     */
    connectorDescription?: pulumi.Input<string>;
    /**
     * The name of the connector.
     */
    connectorName?: pulumi.Input<string>;
    /**
     * The details of the Apache Kafka cluster to which the connector is connected.
     */
    kafkaCluster: pulumi.Input<inputs.kafkaconnect.ConnectorKafkaClusterArgs>;
    /**
     * The type of client authentication used to connect to the Apache Kafka cluster. The value is NONE when no client authentication is used.
     */
    kafkaClusterClientAuthentication: pulumi.Input<inputs.kafkaconnect.ConnectorKafkaClusterClientAuthenticationArgs>;
    /**
     * Details of encryption in transit to the Apache Kafka cluster.
     */
    kafkaClusterEncryptionInTransit: pulumi.Input<inputs.kafkaconnect.ConnectorKafkaClusterEncryptionInTransitArgs>;
    /**
     * The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
     */
    kafkaConnectVersion: pulumi.Input<string>;
    /**
     * The settings for delivering connector logs to Amazon CloudWatch Logs.
     */
    logDelivery?: pulumi.Input<inputs.kafkaconnect.ConnectorLogDeliveryArgs>;
    /**
     * List of plugins to use with the connector.
     */
    plugins: pulumi.Input<pulumi.Input<inputs.kafkaconnect.ConnectorPluginArgs>[]>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
     */
    serviceExecutionRoleArn: pulumi.Input<string>;
    /**
     * A collection of tags associated with a resource
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The worker configurations that are in use with the connector.
     */
    workerConfiguration?: pulumi.Input<inputs.kafkaconnect.ConnectorWorkerConfigurationArgs>;
}
