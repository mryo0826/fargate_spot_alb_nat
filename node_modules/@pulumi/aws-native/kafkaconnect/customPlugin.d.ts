import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
export declare class CustomPlugin extends pulumi.CustomResource {
    /**
     * Get an existing CustomPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomPlugin;
    /**
     * Returns true if the given object is an instance of CustomPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is CustomPlugin;
    /**
     * The type of the plugin file.
     */
    readonly contentType: pulumi.Output<enums.kafkaconnect.CustomPluginContentType>;
    /**
     * The Amazon Resource Name (ARN) of the custom plugin to use.
     */
    readonly customPluginArn: pulumi.Output<string>;
    /**
     * A summary description of the custom plugin.
     */
    readonly description: pulumi.Output<string | undefined>;
    readonly fileDescription: pulumi.Output<outputs.kafkaconnect.CustomPluginFileDescription>;
    /**
     * Information about the location of the custom plugin.
     */
    readonly location: pulumi.Output<outputs.kafkaconnect.CustomPluginLocation>;
    /**
     * The name of the custom plugin.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The revision of the custom plugin.
     */
    readonly revision: pulumi.Output<number>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a CustomPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomPluginArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a CustomPlugin resource.
 */
export interface CustomPluginArgs {
    /**
     * The type of the plugin file.
     */
    contentType: pulumi.Input<enums.kafkaconnect.CustomPluginContentType>;
    /**
     * A summary description of the custom plugin.
     */
    description?: pulumi.Input<string>;
    /**
     * Information about the location of the custom plugin.
     */
    location: pulumi.Input<inputs.kafkaconnect.CustomPluginLocationArgs>;
    /**
     * The name of the custom plugin.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
