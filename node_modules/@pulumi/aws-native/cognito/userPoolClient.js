"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserPoolClient = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource Type definition for AWS::Cognito::UserPoolClient
 */
class UserPoolClient extends pulumi.CustomResource {
    /**
     * Get an existing UserPoolClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new UserPoolClient(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of UserPoolClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserPoolClient.__pulumiType;
    }
    /**
     * Create a UserPoolClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.userPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPoolId'");
            }
            resourceInputs["accessTokenValidity"] = args ? args.accessTokenValidity : undefined;
            resourceInputs["allowedOAuthFlows"] = args ? args.allowedOAuthFlows : undefined;
            resourceInputs["allowedOAuthFlowsUserPoolClient"] = args ? args.allowedOAuthFlowsUserPoolClient : undefined;
            resourceInputs["allowedOAuthScopes"] = args ? args.allowedOAuthScopes : undefined;
            resourceInputs["analyticsConfiguration"] = args ? args.analyticsConfiguration : undefined;
            resourceInputs["authSessionValidity"] = args ? args.authSessionValidity : undefined;
            resourceInputs["callbackUrls"] = args ? args.callbackUrls : undefined;
            resourceInputs["clientName"] = args ? args.clientName : undefined;
            resourceInputs["defaultRedirectUri"] = args ? args.defaultRedirectUri : undefined;
            resourceInputs["enablePropagateAdditionalUserContextData"] = args ? args.enablePropagateAdditionalUserContextData : undefined;
            resourceInputs["enableTokenRevocation"] = args ? args.enableTokenRevocation : undefined;
            resourceInputs["explicitAuthFlows"] = args ? args.explicitAuthFlows : undefined;
            resourceInputs["generateSecret"] = args ? args.generateSecret : undefined;
            resourceInputs["idTokenValidity"] = args ? args.idTokenValidity : undefined;
            resourceInputs["logoutUrls"] = args ? args.logoutUrls : undefined;
            resourceInputs["preventUserExistenceErrors"] = args ? args.preventUserExistenceErrors : undefined;
            resourceInputs["readAttributes"] = args ? args.readAttributes : undefined;
            resourceInputs["refreshTokenValidity"] = args ? args.refreshTokenValidity : undefined;
            resourceInputs["supportedIdentityProviders"] = args ? args.supportedIdentityProviders : undefined;
            resourceInputs["tokenValidityUnits"] = args ? args.tokenValidityUnits : undefined;
            resourceInputs["userPoolId"] = args ? args.userPoolId : undefined;
            resourceInputs["writeAttributes"] = args ? args.writeAttributes : undefined;
            resourceInputs["clientId"] = undefined /*out*/;
            resourceInputs["clientSecret"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        else {
            resourceInputs["accessTokenValidity"] = undefined /*out*/;
            resourceInputs["allowedOAuthFlows"] = undefined /*out*/;
            resourceInputs["allowedOAuthFlowsUserPoolClient"] = undefined /*out*/;
            resourceInputs["allowedOAuthScopes"] = undefined /*out*/;
            resourceInputs["analyticsConfiguration"] = undefined /*out*/;
            resourceInputs["authSessionValidity"] = undefined /*out*/;
            resourceInputs["callbackUrls"] = undefined /*out*/;
            resourceInputs["clientId"] = undefined /*out*/;
            resourceInputs["clientName"] = undefined /*out*/;
            resourceInputs["clientSecret"] = undefined /*out*/;
            resourceInputs["defaultRedirectUri"] = undefined /*out*/;
            resourceInputs["enablePropagateAdditionalUserContextData"] = undefined /*out*/;
            resourceInputs["enableTokenRevocation"] = undefined /*out*/;
            resourceInputs["explicitAuthFlows"] = undefined /*out*/;
            resourceInputs["generateSecret"] = undefined /*out*/;
            resourceInputs["idTokenValidity"] = undefined /*out*/;
            resourceInputs["logoutUrls"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["preventUserExistenceErrors"] = undefined /*out*/;
            resourceInputs["readAttributes"] = undefined /*out*/;
            resourceInputs["refreshTokenValidity"] = undefined /*out*/;
            resourceInputs["supportedIdentityProviders"] = undefined /*out*/;
            resourceInputs["tokenValidityUnits"] = undefined /*out*/;
            resourceInputs["userPoolId"] = undefined /*out*/;
            resourceInputs["writeAttributes"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["generateSecret", "userPoolId"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(UserPoolClient.__pulumiType, name, resourceInputs, opts);
    }
}
exports.UserPoolClient = UserPoolClient;
/** @internal */
UserPoolClient.__pulumiType = 'aws-native:cognito:UserPoolClient';
//# sourceMappingURL=userPoolClient.js.map