import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Cognito::UserPoolResourceServer
 */
export declare function getUserPoolResourceServer(args: GetUserPoolResourceServerArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolResourceServerResult>;
export interface GetUserPoolResourceServerArgs {
    /**
     * A unique resource server identifier for the resource server. The identifier can be an API friendly name like `solar-system-data` . You can also set an API URL like `https://solar-system-data-api.example.com` as your identifier.
     *
     * Amazon Cognito represents scopes in the access token in the format `$resource-server-identifier/$scope` . Longer scope-identifier strings increase the size of your access tokens.
     */
    identifier: string;
    /**
     * The ID of the user pool where you want to create a resource server.
     */
    userPoolId: string;
}
export interface GetUserPoolResourceServerResult {
    /**
     * A friendly name for the resource server.
     */
    readonly name?: string;
    /**
     * A list of scopes. Each scope is a map with keys `ScopeName` and `ScopeDescription` .
     */
    readonly scopes?: outputs.cognito.UserPoolResourceServerResourceServerScopeType[];
}
/**
 * Resource Type definition for AWS::Cognito::UserPoolResourceServer
 */
export declare function getUserPoolResourceServerOutput(args: GetUserPoolResourceServerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserPoolResourceServerResult>;
export interface GetUserPoolResourceServerOutputArgs {
    /**
     * A unique resource server identifier for the resource server. The identifier can be an API friendly name like `solar-system-data` . You can also set an API URL like `https://solar-system-data-api.example.com` as your identifier.
     *
     * Amazon Cognito represents scopes in the access token in the format `$resource-server-identifier/$scope` . Longer scope-identifier strings increase the size of your access tokens.
     */
    identifier: pulumi.Input<string>;
    /**
     * The ID of the user pool where you want to create a resource server.
     */
    userPoolId: pulumi.Input<string>;
}
