import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Cognito::UserPoolDomain
 */
export declare function getUserPoolDomain(args: GetUserPoolDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetUserPoolDomainResult>;
export interface GetUserPoolDomainArgs {
    /**
     * The resource ID.
     */
    id: string;
}
export interface GetUserPoolDomainResult {
    /**
     * The Amazon CloudFront endpoint that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider.
     */
    readonly cloudFrontDistribution?: string;
    /**
     * The configuration for a custom domain that hosts the sign-up and sign-in pages for your application. Use this object to specify an SSL certificate that is managed by ACM.
     *
     * When you create a custom domain, the passkey RP ID defaults to the custom domain. If you had a prefix domain active, this will cause passkey integration for your prefix domain to stop working due to a mismatch in RP ID. To keep the prefix domain passkey integration working, you can explicitly set RP ID to the prefix domain. Update the RP ID in a [SetUserPoolMfaConfig](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SetUserPoolMfaConfig.html) request.
     */
    readonly customDomainConfig?: outputs.cognito.UserPoolDomainCustomDomainConfigType;
    /**
     * The resource ID.
     */
    readonly id?: string;
    /**
     * A version number that indicates the state of managed login for your domain. Version `1` is hosted UI (classic). Version `2` is the newer managed login with the branding designer. For more information, see [Managed login](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-managed-login.html) .
     */
    readonly managedLoginVersion?: number;
}
/**
 * Resource Type definition for AWS::Cognito::UserPoolDomain
 */
export declare function getUserPoolDomainOutput(args: GetUserPoolDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserPoolDomainResult>;
export interface GetUserPoolDomainOutputArgs {
    /**
     * The resource ID.
     */
    id: pulumi.Input<string>;
}
