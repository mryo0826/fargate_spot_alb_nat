import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Inspector::AssessmentTemplate
 */
export declare class AssessmentTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AssessmentTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AssessmentTemplate;
    /**
     * Returns true if the given object is an instance of AssessmentTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AssessmentTemplate;
    /**
     * The Amazon Resource Name (ARN) that specifies the assessment template that is created.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The ARN of the assessment target to be included in the assessment template.
     */
    readonly assessmentTargetArn: pulumi.Output<string>;
    /**
     * The user-defined name that identifies the assessment template that you want to create. You can create several assessment templates for the same assessment target. The names of the assessment templates that correspond to a particular assessment target must be unique.
     */
    readonly assessmentTemplateName: pulumi.Output<string | undefined>;
    /**
     * The duration of the assessment run in seconds.
     */
    readonly durationInSeconds: pulumi.Output<number>;
    /**
     * The ARNs of the rules packages that you want to use in the assessment template.
     */
    readonly rulesPackageArns: pulumi.Output<string[]>;
    /**
     * The user-defined attributes that are assigned to every finding that is generated by the assessment run that uses this assessment template. Within an assessment template, each key must be unique.
     */
    readonly userAttributesForFindings: pulumi.Output<outputs.inspector.AssessmentTemplateTag[] | undefined>;
    /**
     * Create a AssessmentTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AssessmentTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AssessmentTemplate resource.
 */
export interface AssessmentTemplateArgs {
    /**
     * The ARN of the assessment target to be included in the assessment template.
     */
    assessmentTargetArn: pulumi.Input<string>;
    /**
     * The user-defined name that identifies the assessment template that you want to create. You can create several assessment templates for the same assessment target. The names of the assessment templates that correspond to a particular assessment target must be unique.
     */
    assessmentTemplateName?: pulumi.Input<string>;
    /**
     * The duration of the assessment run in seconds.
     */
    durationInSeconds: pulumi.Input<number>;
    /**
     * The ARNs of the rules packages that you want to use in the assessment template.
     */
    rulesPackageArns: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-defined attributes that are assigned to every finding that is generated by the assessment run that uses this assessment template. Within an assessment template, each key must be unique.
     */
    userAttributesForFindings?: pulumi.Input<pulumi.Input<inputs.inspector.AssessmentTemplateTagArgs>[]>;
}
