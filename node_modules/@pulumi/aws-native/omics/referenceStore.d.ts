import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::Omics::ReferenceStore Resource Type
 */
export declare class ReferenceStore extends pulumi.CustomResource {
    /**
     * Get an existing ReferenceStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReferenceStore;
    /**
     * Returns true if the given object is an instance of ReferenceStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ReferenceStore;
    /**
     * The store's ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * When the store was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * A description for the store.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * A name for the store.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The store's ID.
     */
    readonly referenceStoreId: pulumi.Output<string>;
    /**
     * Server-side encryption (SSE) settings for the store.
     */
    readonly sseConfig: pulumi.Output<outputs.omics.ReferenceStoreSseConfig | undefined>;
    /**
     * Tags for the store.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a ReferenceStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ReferenceStoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ReferenceStore resource.
 */
export interface ReferenceStoreArgs {
    /**
     * A description for the store.
     */
    description?: pulumi.Input<string>;
    /**
     * A name for the store.
     */
    name?: pulumi.Input<string>;
    /**
     * Server-side encryption (SSE) settings for the store.
     */
    sseConfig?: pulumi.Input<inputs.omics.ReferenceStoreSseConfigArgs>;
    /**
     * Tags for the store.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
