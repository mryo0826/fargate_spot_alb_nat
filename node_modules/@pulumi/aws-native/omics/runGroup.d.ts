import * as pulumi from "@pulumi/pulumi";
/**
 * Definition of AWS::Omics::RunGroup Resource Type
 */
export declare class RunGroup extends pulumi.CustomResource {
    /**
     * Get an existing RunGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RunGroup;
    /**
     * Returns true if the given object is an instance of RunGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RunGroup;
    /**
     * The run group's ARN.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The run group's ID.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * When the run group was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The group's maximum CPU count setting.
     */
    readonly maxCpus: pulumi.Output<number | undefined>;
    /**
     * The group's maximum duration setting in minutes.
     */
    readonly maxDuration: pulumi.Output<number | undefined>;
    /**
     * The maximum GPUs that can be used by a run group.
     */
    readonly maxGpus: pulumi.Output<number | undefined>;
    /**
     * The group's maximum concurrent run setting.
     */
    readonly maxRuns: pulumi.Output<number | undefined>;
    /**
     * The group's name.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * Tags for the group.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a RunGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RunGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RunGroup resource.
 */
export interface RunGroupArgs {
    /**
     * The group's maximum CPU count setting.
     */
    maxCpus?: pulumi.Input<number>;
    /**
     * The group's maximum duration setting in minutes.
     */
    maxDuration?: pulumi.Input<number>;
    /**
     * The maximum GPUs that can be used by a run group.
     */
    maxGpus?: pulumi.Input<number>;
    /**
     * The group's maximum concurrent run setting.
     */
    maxRuns?: pulumi.Input<number>;
    /**
     * The group's name.
     */
    name?: pulumi.Input<string>;
    /**
     * Tags for the group.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
