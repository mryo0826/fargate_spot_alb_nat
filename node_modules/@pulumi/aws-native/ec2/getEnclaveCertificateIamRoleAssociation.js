"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnclaveCertificateIamRoleAssociationOutput = exports.getEnclaveCertificateIamRoleAssociation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
 */
function getEnclaveCertificateIamRoleAssociation(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ec2:getEnclaveCertificateIamRoleAssociation", {
        "certificateArn": args.certificateArn,
        "roleArn": args.roleArn,
    }, opts);
}
exports.getEnclaveCertificateIamRoleAssociation = getEnclaveCertificateIamRoleAssociation;
/**
 * Associates an AWS Identity and Access Management (IAM) role with an AWS Certificate Manager (ACM) certificate. This association is based on Amazon Resource Names and it enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave.
 */
function getEnclaveCertificateIamRoleAssociationOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ec2:getEnclaveCertificateIamRoleAssociation", {
        "certificateArn": args.certificateArn,
        "roleArn": args.roleArn,
    }, opts);
}
exports.getEnclaveCertificateIamRoleAssociationOutput = getEnclaveCertificateIamRoleAssociationOutput;
//# sourceMappingURL=getEnclaveCertificateIamRoleAssociation.js.map