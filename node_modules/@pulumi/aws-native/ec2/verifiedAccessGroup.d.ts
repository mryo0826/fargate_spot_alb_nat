import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::EC2::VerifiedAccessGroup resource creates an AWS EC2 Verified Access Group.
 */
export declare class VerifiedAccessGroup extends pulumi.CustomResource {
    /**
     * Get an existing VerifiedAccessGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VerifiedAccessGroup;
    /**
     * Returns true if the given object is an instance of VerifiedAccessGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VerifiedAccessGroup;
    /**
     * Time this Verified Access Group was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * A description for the AWS Verified Access group.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Time this Verified Access Group was last updated.
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * The AWS account number that owns the group.
     */
    readonly owner: pulumi.Output<string>;
    /**
     * The AWS Verified Access policy document.
     */
    readonly policyDocument: pulumi.Output<string | undefined>;
    /**
     * The status of the Verified Access policy.
     */
    readonly policyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The configuration options for customer provided KMS encryption.
     */
    readonly sseSpecification: pulumi.Output<outputs.ec2.VerifiedAccessGroupSseSpecification | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ARN of the Verified Access group.
     */
    readonly verifiedAccessGroupArn: pulumi.Output<string>;
    /**
     * The ID of the AWS Verified Access group.
     */
    readonly verifiedAccessGroupId: pulumi.Output<string>;
    /**
     * The ID of the AWS Verified Access instance.
     */
    readonly verifiedAccessInstanceId: pulumi.Output<string>;
    /**
     * Create a VerifiedAccessGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VerifiedAccessGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VerifiedAccessGroup resource.
 */
export interface VerifiedAccessGroupArgs {
    /**
     * A description for the AWS Verified Access group.
     */
    description?: pulumi.Input<string>;
    /**
     * The AWS Verified Access policy document.
     */
    policyDocument?: pulumi.Input<string>;
    /**
     * The status of the Verified Access policy.
     */
    policyEnabled?: pulumi.Input<boolean>;
    /**
     * The configuration options for customer provided KMS encryption.
     */
    sseSpecification?: pulumi.Input<inputs.ec2.VerifiedAccessGroupSseSpecificationArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the AWS Verified Access instance.
     */
    verifiedAccessInstanceId: pulumi.Input<string>;
}
