import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::EC2::PlacementGroup
 */
export declare class PlacementGroup extends pulumi.CustomResource {
    /**
     * Get an existing PlacementGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PlacementGroup;
    /**
     * Returns true if the given object is an instance of PlacementGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PlacementGroup;
    /**
     * The Group Name of Placement Group.
     */
    readonly groupName: pulumi.Output<string>;
    /**
     * The number of partitions. Valid only when **Strategy** is set to `partition`
     */
    readonly partitionCount: pulumi.Output<number | undefined>;
    /**
     * The Spread Level of Placement Group is an enum where it accepts either host or rack when strategy is spread
     */
    readonly spreadLevel: pulumi.Output<string | undefined>;
    /**
     * The placement strategy.
     */
    readonly strategy: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a PlacementGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PlacementGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PlacementGroup resource.
 */
export interface PlacementGroupArgs {
    /**
     * The number of partitions. Valid only when **Strategy** is set to `partition`
     */
    partitionCount?: pulumi.Input<number>;
    /**
     * The Spread Level of Placement Group is an enum where it accepts either host or rack when strategy is spread
     */
    spreadLevel?: pulumi.Input<string>;
    /**
     * The placement strategy.
     */
    strategy?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
