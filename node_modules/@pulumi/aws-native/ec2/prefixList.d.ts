import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema of AWS::EC2::PrefixList Type
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const newPrefixList = new aws_native.ec2.PrefixList("newPrefixList", {
 *     prefixListName: "vpc-1-servers",
 *     addressFamily: aws_native.ec2.PrefixListAddressFamily.IPv4,
 *     maxEntries: 10,
 *     entries: [
 *         {
 *             cidr: "10.0.0.5/32",
 *             description: "Server 1",
 *         },
 *         {
 *             cidr: "10.0.0.10/32",
 *             description: "Server 2",
 *         },
 *     ],
 *     tags: [{
 *         key: "Name",
 *         value: "VPC-1-Servers",
 *     }],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const newPrefixList = new aws_native.ec2.PrefixList("newPrefixList", {
 *     prefixListName: "vpc-1-servers",
 *     addressFamily: aws_native.ec2.PrefixListAddressFamily.IPv4,
 *     maxEntries: 10,
 *     entries: [
 *         {
 *             cidr: "10.0.0.5/32",
 *             description: "Server 1",
 *         },
 *         {
 *             cidr: "10.0.0.10/32",
 *             description: "Server 2",
 *         },
 *     ],
 *     tags: [{
 *         key: "Name",
 *         value: "VPC-1-Servers",
 *     }],
 * });
 *
 * ```
 */
export declare class PrefixList extends pulumi.CustomResource {
    /**
     * Get an existing PrefixList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PrefixList;
    /**
     * Returns true if the given object is an instance of PrefixList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PrefixList;
    /**
     * Ip Version of Prefix List.
     */
    readonly addressFamily: pulumi.Output<enums.ec2.PrefixListAddressFamily>;
    /**
     * The Amazon Resource Name (ARN) of the Prefix List.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Entries of Prefix List.
     */
    readonly entries: pulumi.Output<outputs.ec2.PrefixListEntry[] | undefined>;
    /**
     * Max Entries of Prefix List.
     */
    readonly maxEntries: pulumi.Output<number | undefined>;
    /**
     * Owner Id of Prefix List.
     */
    readonly ownerId: pulumi.Output<string>;
    /**
     * Id of Prefix List.
     */
    readonly prefixListId: pulumi.Output<string>;
    /**
     * Name of Prefix List.
     */
    readonly prefixListName: pulumi.Output<string>;
    /**
     * Tags for Prefix List
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Version of Prefix List.
     */
    readonly version: pulumi.Output<number>;
    /**
     * Create a PrefixList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrefixListArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PrefixList resource.
 */
export interface PrefixListArgs {
    /**
     * Ip Version of Prefix List.
     */
    addressFamily: pulumi.Input<enums.ec2.PrefixListAddressFamily>;
    /**
     * Entries of Prefix List.
     */
    entries?: pulumi.Input<pulumi.Input<inputs.ec2.PrefixListEntryArgs>[]>;
    /**
     * Max Entries of Prefix List.
     */
    maxEntries?: pulumi.Input<number>;
    /**
     * Name of Prefix List.
     */
    prefixListName?: pulumi.Input<string>;
    /**
     * Tags for Prefix List
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
