import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Schema of AWS::EC2::IPAMResourceDiscovery Type
 */
export declare function getIpamResourceDiscovery(args: GetIpamResourceDiscoveryArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamResourceDiscoveryResult>;
export interface GetIpamResourceDiscoveryArgs {
    /**
     * Id of the IPAM Pool.
     */
    ipamResourceDiscoveryId: string;
}
export interface GetIpamResourceDiscoveryResult {
    /**
     * The resource discovery description.
     */
    readonly description?: string;
    /**
     * Amazon Resource Name (Arn) for the Resource Discovery.
     */
    readonly ipamResourceDiscoveryArn?: string;
    /**
     * Id of the IPAM Pool.
     */
    readonly ipamResourceDiscoveryId?: string;
    /**
     * The region the resource discovery is setup in.
     */
    readonly ipamResourceDiscoveryRegion?: string;
    /**
     * Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
     */
    readonly isDefault?: boolean;
    /**
     * The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
     */
    readonly operatingRegions?: outputs.ec2.IpamResourceDiscoveryIpamOperatingRegion[];
    /**
     * Owner Account ID of the Resource Discovery
     */
    readonly ownerId?: string;
    /**
     * The state of this Resource Discovery.
     */
    readonly state?: string;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Schema of AWS::EC2::IPAMResourceDiscovery Type
 */
export declare function getIpamResourceDiscoveryOutput(args: GetIpamResourceDiscoveryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpamResourceDiscoveryResult>;
export interface GetIpamResourceDiscoveryOutputArgs {
    /**
     * Id of the IPAM Pool.
     */
    ipamResourceDiscoveryId: pulumi.Input<string>;
}
