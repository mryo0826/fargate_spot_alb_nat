import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::EC2::SubnetCidrBlock resource creates association between subnet and IPv6 CIDR
 */
export declare class SubnetCidrBlock extends pulumi.CustomResource {
    /**
     * Get an existing SubnetCidrBlock resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubnetCidrBlock;
    /**
     * Returns true if the given object is an instance of SubnetCidrBlock.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SubnetCidrBlock;
    /**
     * Information about the IPv6 association.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The IP Source of an IPv6 Subnet CIDR Block.
     */
    readonly ipSource: pulumi.Output<string>;
    /**
     * The value denoting whether an IPv6 Subnet CIDR Block is public or private.
     */
    readonly ipv6AddressAttribute: pulumi.Output<string>;
    /**
     * The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length
     */
    readonly ipv6CidrBlock: pulumi.Output<string | undefined>;
    /**
     * The ID of an IPv6 Amazon VPC IP Address Manager (IPAM) pool from which to allocate, to get the subnet's CIDR
     */
    readonly ipv6IpamPoolId: pulumi.Output<string | undefined>;
    /**
     * The netmask length of the IPv6 CIDR to allocate to the subnet from an IPAM pool
     */
    readonly ipv6NetmaskLength: pulumi.Output<number | undefined>;
    /**
     * The ID of the subnet
     */
    readonly subnetId: pulumi.Output<string>;
    /**
     * Create a SubnetCidrBlock resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubnetCidrBlockArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SubnetCidrBlock resource.
 */
export interface SubnetCidrBlockArgs {
    /**
     * The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length
     */
    ipv6CidrBlock?: pulumi.Input<string>;
    /**
     * The ID of an IPv6 Amazon VPC IP Address Manager (IPAM) pool from which to allocate, to get the subnet's CIDR
     */
    ipv6IpamPoolId?: pulumi.Input<string>;
    /**
     * The netmask length of the IPv6 CIDR to allocate to the subnet from an IPAM pool
     */
    ipv6NetmaskLength?: pulumi.Input<number>;
    /**
     * The ID of the subnet
     */
    subnetId: pulumi.Input<string>;
}
