import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
 */
export declare function getTransitGatewayMulticastDomainAssociation(args: GetTransitGatewayMulticastDomainAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetTransitGatewayMulticastDomainAssociationResult>;
export interface GetTransitGatewayMulticastDomainAssociationArgs {
    /**
     * The IDs of the subnets to associate with the transit gateway multicast domain.
     */
    subnetId: string;
    /**
     * The ID of the transit gateway attachment.
     */
    transitGatewayAttachmentId: string;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: string;
}
export interface GetTransitGatewayMulticastDomainAssociationResult {
    /**
     * The ID of the resource.
     */
    readonly resourceId?: string;
    /**
     * The type of resource, for example a VPC attachment.
     */
    readonly resourceType?: string;
    /**
     * The state of the subnet association.
     */
    readonly state?: string;
}
/**
 * The AWS::EC2::TransitGatewayMulticastDomainAssociation type
 */
export declare function getTransitGatewayMulticastDomainAssociationOutput(args: GetTransitGatewayMulticastDomainAssociationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTransitGatewayMulticastDomainAssociationResult>;
export interface GetTransitGatewayMulticastDomainAssociationOutputArgs {
    /**
     * The IDs of the subnets to associate with the transit gateway multicast domain.
     */
    subnetId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway attachment.
     */
    transitGatewayAttachmentId: pulumi.Input<string>;
    /**
     * The ID of the transit gateway multicast domain.
     */
    transitGatewayMulticastDomainId: pulumi.Input<string>;
}
