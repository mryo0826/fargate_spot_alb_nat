import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Schema of AWS::EC2::IPAM Type
 */
export declare class Ipam extends pulumi.CustomResource {
    /**
     * Get an existing Ipam resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Ipam;
    /**
     * Returns true if the given object is an instance of Ipam.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Ipam;
    /**
     * The Amazon Resource Name (ARN) of the IPAM.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Id of the default association to the default resource discovery, created with this IPAM.
     */
    readonly defaultResourceDiscoveryAssociationId: pulumi.Output<string>;
    /**
     * The Id of the default resource discovery, created with this IPAM.
     */
    readonly defaultResourceDiscoveryId: pulumi.Output<string>;
    /**
     * The description for the IPAM.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Enable provisioning of GUA space in private pools.
     */
    readonly enablePrivateGua: pulumi.Output<boolean | undefined>;
    /**
     * Id of the IPAM.
     */
    readonly ipamId: pulumi.Output<string>;
    /**
     * The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring
     */
    readonly operatingRegions: pulumi.Output<outputs.ec2.IpamOperatingRegion[] | undefined>;
    /**
     * The Id of the default scope for publicly routable IP space, created with this IPAM.
     */
    readonly privateDefaultScopeId: pulumi.Output<string>;
    /**
     * The Id of the default scope for publicly routable IP space, created with this IPAM.
     */
    readonly publicDefaultScopeId: pulumi.Output<string>;
    /**
     * The count of resource discoveries associated with this IPAM.
     */
    readonly resourceDiscoveryAssociationCount: pulumi.Output<number>;
    /**
     * The number of scopes that currently exist in this IPAM.
     */
    readonly scopeCount: pulumi.Output<number>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The tier of the IPAM.
     */
    readonly tier: pulumi.Output<enums.ec2.IpamTier | undefined>;
    /**
     * Create a Ipam resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpamArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Ipam resource.
 */
export interface IpamArgs {
    /**
     * The description for the IPAM.
     */
    description?: pulumi.Input<string>;
    /**
     * Enable provisioning of GUA space in private pools.
     */
    enablePrivateGua?: pulumi.Input<boolean>;
    /**
     * The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring
     */
    operatingRegions?: pulumi.Input<pulumi.Input<inputs.ec2.IpamOperatingRegionArgs>[]>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The tier of the IPAM.
     */
    tier?: pulumi.Input<enums.ec2.IpamTier>;
}
