import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::EC2::SecurityGroupIngress
 */
export declare class SecurityGroupIngress extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroupIngress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecurityGroupIngress;
    /**
     * Returns true if the given object is an instance of SecurityGroupIngress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SecurityGroupIngress;
    /**
     * The Security Group Rule Id
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The IPv4 ranges
     */
    readonly cidrIp: pulumi.Output<string | undefined>;
    /**
     * [VPC only] The IPv6 ranges
     */
    readonly cidrIpv6: pulumi.Output<string | undefined>;
    /**
     * Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
     *
     * Use this for ICMP and any protocol that uses ports.
     */
    readonly fromPort: pulumi.Output<number | undefined>;
    /**
     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
     *
     * You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property.
     */
    readonly groupId: pulumi.Output<string | undefined>;
    /**
     * The name of the security group.
     */
    readonly groupName: pulumi.Output<string | undefined>;
    /**
     * The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).
     *
     * [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
     */
    readonly ipProtocol: pulumi.Output<string>;
    /**
     * [EC2-VPC only] The ID of a prefix list.
     */
    readonly sourcePrefixListId: pulumi.Output<string | undefined>;
    /**
     * The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.
     */
    readonly sourceSecurityGroupId: pulumi.Output<string | undefined>;
    /**
     * [EC2-Classic, default VPC] The name of the source security group.
     *
     * You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property.
     */
    readonly sourceSecurityGroupName: pulumi.Output<string | undefined>;
    /**
     * [nondefault VPC] The AWS account ID that owns the source security group. You can't specify this property with an IP address range.
     *
     * If you specify SourceSecurityGroupName or SourceSecurityGroupId and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.
     */
    readonly sourceSecurityGroupOwnerId: pulumi.Output<string | undefined>;
    /**
     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.
     *
     * Use this for ICMP and any protocol that uses ports.
     */
    readonly toPort: pulumi.Output<number | undefined>;
    /**
     * Create a SecurityGroupIngress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupIngressArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SecurityGroupIngress resource.
 */
export interface SecurityGroupIngressArgs {
    /**
     * The IPv4 ranges
     */
    cidrIp?: pulumi.Input<string>;
    /**
     * [VPC only] The IPv6 ranges
     */
    cidrIpv6?: pulumi.Input<string>;
    /**
     * Updates the description of an ingress (inbound) security group rule. You can replace an existing description, or add a description to a rule that did not have one previously
     */
    description?: pulumi.Input<string>;
    /**
     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
     *
     * Use this for ICMP and any protocol that uses ports.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
     *
     * You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the security group.
     */
    groupName?: pulumi.Input<string>;
    /**
     * The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers).
     *
     * [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
     */
    ipProtocol: pulumi.Input<string>;
    /**
     * [EC2-VPC only] The ID of a prefix list.
     */
    sourcePrefixListId?: pulumi.Input<string>;
    /**
     * The ID of the security group. You must specify either the security group ID or the security group name. For security groups in a nondefault VPC, you must specify the security group ID.
     */
    sourceSecurityGroupId?: pulumi.Input<string>;
    /**
     * [EC2-Classic, default VPC] The name of the source security group.
     *
     * You must specify the GroupName property or the GroupId property. For security groups that are in a VPC, you must use the GroupId property.
     */
    sourceSecurityGroupName?: pulumi.Input<string>;
    /**
     * [nondefault VPC] The AWS account ID that owns the source security group. You can't specify this property with an IP address range.
     *
     * If you specify SourceSecurityGroupName or SourceSecurityGroupId and that security group is owned by a different account than the account creating the stack, you must specify the SourceSecurityGroupOwnerId; otherwise, this property is optional.
     */
    sourceSecurityGroupOwnerId?: pulumi.Input<string>;
    /**
     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes for the specified ICMP type. If you specify all ICMP/ICMPv6 types, you must specify all codes.
     *
     * Use this for ICMP and any protocol that uses ports.
     */
    toPort?: pulumi.Input<number>;
}
