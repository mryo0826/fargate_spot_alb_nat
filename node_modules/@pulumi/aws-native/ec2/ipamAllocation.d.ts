import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Schema of AWS::EC2::IPAMAllocation Type
 */
export declare class IpamAllocation extends pulumi.CustomResource {
    /**
     * Get an existing IpamAllocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IpamAllocation;
    /**
     * Returns true if the given object is an instance of IpamAllocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IpamAllocation;
    /**
     * The CIDR you would like to allocate from the IPAM pool. Note the following:
     *
     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.
     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.
     *
     * Possible values: Any available IPv4 or IPv6 CIDR.
     */
    readonly cidr: pulumi.Output<string | undefined>;
    /**
     * A description for the allocation.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Id of the allocation.
     */
    readonly ipamPoolAllocationId: pulumi.Output<string>;
    /**
     * Id of the IPAM Pool.
     */
    readonly ipamPoolId: pulumi.Output<string>;
    /**
     * The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     */
    readonly netmaskLength: pulumi.Output<number | undefined>;
    /**
     * Create a IpamAllocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpamAllocationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IpamAllocation resource.
 */
export interface IpamAllocationArgs {
    /**
     * The CIDR you would like to allocate from the IPAM pool. Note the following:
     *
     * - If there is no DefaultNetmaskLength allocation rule set on the pool, you must specify either the NetmaskLength or the CIDR.
     * - If the DefaultNetmaskLength allocation rule is set on the pool, you can specify either the NetmaskLength or the CIDR and the DefaultNetmaskLength allocation rule will be ignored.
     *
     * Possible values: Any available IPv4 or IPv6 CIDR.
     */
    cidr?: pulumi.Input<string>;
    /**
     * A description for the allocation.
     */
    description?: pulumi.Input<string>;
    /**
     * Id of the IPAM Pool.
     */
    ipamPoolId: pulumi.Input<string>;
    /**
     * The desired netmask length of the allocation. If set, IPAM will choose a block of free space with this size and return the CIDR representing it.
     */
    netmaskLength?: pulumi.Input<number>;
}
