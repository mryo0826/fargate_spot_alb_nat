import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::EC2::TransitGatewayPeeringAttachment type
 */
export declare class TransitGatewayPeeringAttachment extends pulumi.CustomResource {
    /**
     * Get an existing TransitGatewayPeeringAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TransitGatewayPeeringAttachment;
    /**
     * Returns true if the given object is an instance of TransitGatewayPeeringAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TransitGatewayPeeringAttachment;
    /**
     * The time the transit gateway peering attachment was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The ID of the peer account
     */
    readonly peerAccountId: pulumi.Output<string>;
    /**
     * Peer Region
     */
    readonly peerRegion: pulumi.Output<string>;
    /**
     * The ID of the peer transit gateway.
     */
    readonly peerTransitGatewayId: pulumi.Output<string>;
    /**
     * The state of the transit gateway peering attachment. Note that the initiating state has been deprecated.
     */
    readonly state: pulumi.Output<string>;
    /**
     * The status of the transit gateway peering attachment.
     */
    readonly status: pulumi.Output<outputs.ec2.TransitGatewayPeeringAttachmentPeeringAttachmentStatus>;
    /**
     * The tags for the transit gateway peering attachment.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the transit gateway peering attachment.
     */
    readonly transitGatewayAttachmentId: pulumi.Output<string>;
    /**
     * The ID of the transit gateway.
     */
    readonly transitGatewayId: pulumi.Output<string>;
    /**
     * Create a TransitGatewayPeeringAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransitGatewayPeeringAttachmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TransitGatewayPeeringAttachment resource.
 */
export interface TransitGatewayPeeringAttachmentArgs {
    /**
     * The ID of the peer account
     */
    peerAccountId: pulumi.Input<string>;
    /**
     * Peer Region
     */
    peerRegion: pulumi.Input<string>;
    /**
     * The ID of the peer transit gateway.
     */
    peerTransitGatewayId: pulumi.Input<string>;
    /**
     * The tags for the transit gateway peering attachment.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ID of the transit gateway.
     */
    transitGatewayId: pulumi.Input<string>;
}
