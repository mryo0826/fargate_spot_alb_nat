import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource Schema of AWS::EC2::IPAMScope Type
 */
export declare class IpamScope extends pulumi.CustomResource {
    /**
     * Get an existing IpamScope resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IpamScope;
    /**
     * Returns true if the given object is an instance of IpamScope.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IpamScope;
    /**
     * The Amazon Resource Name (ARN) of the IPAM scope.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The description of the scope.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
     */
    readonly ipamArn: pulumi.Output<string>;
    /**
     * The Id of the IPAM this scope is a part of.
     */
    readonly ipamId: pulumi.Output<string>;
    /**
     * Id of the IPAM scope.
     */
    readonly ipamScopeId: pulumi.Output<string>;
    /**
     * Determines whether this scope contains publicly routable space or space for a private network
     */
    readonly ipamScopeType: pulumi.Output<enums.ec2.IpamScopeType>;
    /**
     * Is this one of the default scopes created with the IPAM.
     */
    readonly isDefault: pulumi.Output<boolean>;
    /**
     * The number of pools that currently exist in this scope.
     */
    readonly poolCount: pulumi.Output<number>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a IpamScope resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpamScopeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IpamScope resource.
 */
export interface IpamScopeArgs {
    /**
     * The description of the scope.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of the IPAM this scope is a part of.
     */
    ipamId: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
