import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::EC2::NetworkInsightsAccessScopeAnalysis
 */
export declare class NetworkInsightsAccessScopeAnalysis extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInsightsAccessScopeAnalysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkInsightsAccessScopeAnalysis;
    /**
     * Returns true if the given object is an instance of NetworkInsightsAccessScopeAnalysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NetworkInsightsAccessScopeAnalysis;
    /**
     * The number of network interfaces analyzed.
     */
    readonly analyzedEniCount: pulumi.Output<number>;
    /**
     * The end date of the analysis.
     */
    readonly endDate: pulumi.Output<string>;
    /**
     * Indicates whether there are findings (true | false | unknown).
     */
    readonly findingsFound: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisFindingsFound>;
    /**
     * The ARN of the Network Access Scope analysis.
     */
    readonly networkInsightsAccessScopeAnalysisArn: pulumi.Output<string>;
    /**
     * The ID of the Network Access Scope analysis.
     */
    readonly networkInsightsAccessScopeAnalysisId: pulumi.Output<string>;
    /**
     * The ID of the Network Access Scope.
     */
    readonly networkInsightsAccessScopeId: pulumi.Output<string>;
    /**
     * The start date of the analysis.
     */
    readonly startDate: pulumi.Output<string>;
    /**
     * The status of the analysis (running | succeeded | failed).
     */
    readonly status: pulumi.Output<enums.ec2.NetworkInsightsAccessScopeAnalysisStatus>;
    /**
     * The status message.
     */
    readonly statusMessage: pulumi.Output<string>;
    /**
     * The tags.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a NetworkInsightsAccessScopeAnalysis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInsightsAccessScopeAnalysisArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a NetworkInsightsAccessScopeAnalysis resource.
 */
export interface NetworkInsightsAccessScopeAnalysisArgs {
    /**
     * The ID of the Network Access Scope.
     */
    networkInsightsAccessScopeId: pulumi.Input<string>;
    /**
     * The tags.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
