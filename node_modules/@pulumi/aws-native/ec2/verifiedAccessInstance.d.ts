import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::EC2::VerifiedAccessInstance resource creates an AWS EC2 Verified Access Instance.
 */
export declare class VerifiedAccessInstance extends pulumi.CustomResource {
    /**
     * Get an existing VerifiedAccessInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VerifiedAccessInstance;
    /**
     * Returns true if the given object is an instance of VerifiedAccessInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VerifiedAccessInstance;
    /**
     * Time this Verified Access Instance was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * A description for the AWS Verified Access instance.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Indicates whether FIPS is enabled
     */
    readonly fipsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Time this Verified Access Instance was last updated.
     */
    readonly lastUpdatedTime: pulumi.Output<string>;
    /**
     * The configuration options for AWS Verified Access instances.
     */
    readonly loggingConfigurations: pulumi.Output<outputs.ec2.VerifiedAccessInstanceVerifiedAccessLogs | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the AWS Verified Access instance.
     */
    readonly verifiedAccessInstanceId: pulumi.Output<string>;
    /**
     * The IDs of the AWS Verified Access trust providers.
     */
    readonly verifiedAccessTrustProviderIds: pulumi.Output<string[] | undefined>;
    /**
     * AWS Verified Access trust providers.
     */
    readonly verifiedAccessTrustProviders: pulumi.Output<outputs.ec2.VerifiedAccessInstanceVerifiedAccessTrustProvider[] | undefined>;
    /**
     * Create a VerifiedAccessInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VerifiedAccessInstanceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a VerifiedAccessInstance resource.
 */
export interface VerifiedAccessInstanceArgs {
    /**
     * A description for the AWS Verified Access instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether FIPS is enabled
     */
    fipsEnabled?: pulumi.Input<boolean>;
    /**
     * The configuration options for AWS Verified Access instances.
     */
    loggingConfigurations?: pulumi.Input<inputs.ec2.VerifiedAccessInstanceVerifiedAccessLogsArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The IDs of the AWS Verified Access trust providers.
     */
    verifiedAccessTrustProviderIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * AWS Verified Access trust providers.
     */
    verifiedAccessTrustProviders?: pulumi.Input<pulumi.Input<inputs.ec2.VerifiedAccessInstanceVerifiedAccessTrustProviderArgs>[]>;
}
