import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::Personalize::Schema.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const mySchema = new aws_native.personalize.Schema("mySchema", {
 *     name: "my-schema-name",
 *     schema: "{\"type\": \"record\",\"name\": \"Interactions\", \"namespace\": \"com.amazonaws.personalize.schema\", \"fields\": [ { \"name\": \"USER_ID\", \"type\": \"string\" }, { \"name\": \"ITEM_ID\", \"type\": \"string\" }, { \"name\": \"TIMESTAMP\", \"type\": \"long\"}], \"version\": \"1.0\"}",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const mySchema = new aws_native.personalize.Schema("mySchema", {
 *     name: "my-schema-name",
 *     schema: "{\"type\": \"record\",\"name\": \"Interactions\", \"namespace\": \"com.amazonaws.personalize.schema\", \"fields\": [ { \"name\": \"USER_ID\", \"type\": \"string\" }, { \"name\": \"ITEM_ID\", \"type\": \"string\" }, { \"name\": \"TIMESTAMP\", \"type\": \"long\"}], \"version\": \"1.0\"}",
 * });
 *
 * ```
 */
export declare class Schema extends pulumi.CustomResource {
    /**
     * Get an existing Schema resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Schema;
    /**
     * Returns true if the given object is an instance of Schema.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Schema;
    /**
     * The domain of a Domain dataset group.
     */
    readonly domain: pulumi.Output<enums.personalize.SchemaDomain | undefined>;
    /**
     * Name for the schema.
     */
    readonly name: pulumi.Output<string>;
    /**
     * A schema in Avro JSON format.
     */
    readonly schema: pulumi.Output<string>;
    /**
     * Arn for the schema.
     */
    readonly schemaArn: pulumi.Output<string>;
    /**
     * Create a Schema resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SchemaArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Schema resource.
 */
export interface SchemaArgs {
    /**
     * The domain of a Domain dataset group.
     */
    domain?: pulumi.Input<enums.personalize.SchemaDomain>;
    /**
     * Name for the schema.
     */
    name?: pulumi.Input<string>;
    /**
     * A schema in Avro JSON format.
     */
    schema: pulumi.Input<string>;
}
