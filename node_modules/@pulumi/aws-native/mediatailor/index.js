"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VodSource = exports.SourceLocation = exports.PlaybackConfiguration = exports.LiveSource = exports.getVodSourceOutput = exports.getVodSource = exports.getSourceLocationOutput = exports.getSourceLocation = exports.getPlaybackConfigurationOutput = exports.getPlaybackConfiguration = exports.getLiveSourceOutput = exports.getLiveSource = exports.getChannelPolicyOutput = exports.getChannelPolicy = exports.getChannelOutput = exports.getChannel = exports.ChannelPolicy = exports.Channel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Channel = null;
utilities.lazyLoad(exports, ["Channel"], () => require("./channel"));
exports.ChannelPolicy = null;
utilities.lazyLoad(exports, ["ChannelPolicy"], () => require("./channelPolicy"));
exports.getChannel = null;
exports.getChannelOutput = null;
utilities.lazyLoad(exports, ["getChannel", "getChannelOutput"], () => require("./getChannel"));
exports.getChannelPolicy = null;
exports.getChannelPolicyOutput = null;
utilities.lazyLoad(exports, ["getChannelPolicy", "getChannelPolicyOutput"], () => require("./getChannelPolicy"));
exports.getLiveSource = null;
exports.getLiveSourceOutput = null;
utilities.lazyLoad(exports, ["getLiveSource", "getLiveSourceOutput"], () => require("./getLiveSource"));
exports.getPlaybackConfiguration = null;
exports.getPlaybackConfigurationOutput = null;
utilities.lazyLoad(exports, ["getPlaybackConfiguration", "getPlaybackConfigurationOutput"], () => require("./getPlaybackConfiguration"));
exports.getSourceLocation = null;
exports.getSourceLocationOutput = null;
utilities.lazyLoad(exports, ["getSourceLocation", "getSourceLocationOutput"], () => require("./getSourceLocation"));
exports.getVodSource = null;
exports.getVodSourceOutput = null;
utilities.lazyLoad(exports, ["getVodSource", "getVodSourceOutput"], () => require("./getVodSource"));
exports.LiveSource = null;
utilities.lazyLoad(exports, ["LiveSource"], () => require("./liveSource"));
exports.PlaybackConfiguration = null;
utilities.lazyLoad(exports, ["PlaybackConfiguration"], () => require("./playbackConfiguration"));
exports.SourceLocation = null;
utilities.lazyLoad(exports, ["SourceLocation"], () => require("./sourceLocation"));
exports.VodSource = null;
utilities.lazyLoad(exports, ["VodSource"], () => require("./vodSource"));
// Export enums:
__exportStar(require("../types/enums/mediatailor"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:mediatailor:Channel":
                return new exports.Channel(name, undefined, { urn });
            case "aws-native:mediatailor:ChannelPolicy":
                return new exports.ChannelPolicy(name, undefined, { urn });
            case "aws-native:mediatailor:LiveSource":
                return new exports.LiveSource(name, undefined, { urn });
            case "aws-native:mediatailor:PlaybackConfiguration":
                return new exports.PlaybackConfiguration(name, undefined, { urn });
            case "aws-native:mediatailor:SourceLocation":
                return new exports.SourceLocation(name, undefined, { urn });
            case "aws-native:mediatailor:VodSource":
                return new exports.VodSource(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "mediatailor", _module);
//# sourceMappingURL=index.js.map