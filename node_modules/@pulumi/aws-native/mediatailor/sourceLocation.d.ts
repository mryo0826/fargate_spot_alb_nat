import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::MediaTailor::SourceLocation Resource Type
 */
export declare class SourceLocation extends pulumi.CustomResource {
    /**
     * Get an existing SourceLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SourceLocation;
    /**
     * Returns true if the given object is an instance of SourceLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SourceLocation;
    /**
     * The access configuration for the source location.
     */
    readonly accessConfiguration: pulumi.Output<outputs.mediatailor.SourceLocationAccessConfiguration | undefined>;
    /**
     * <p>The ARN of the source location.</p>
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The default segment delivery configuration.
     */
    readonly defaultSegmentDeliveryConfiguration: pulumi.Output<outputs.mediatailor.SourceLocationDefaultSegmentDeliveryConfiguration | undefined>;
    /**
     * The HTTP configuration for the source location.
     */
    readonly httpConfiguration: pulumi.Output<outputs.mediatailor.SourceLocationHttpConfiguration>;
    /**
     * <p>A list of the segment delivery configurations associated with this resource.</p>
     */
    readonly segmentDeliveryConfigurations: pulumi.Output<outputs.mediatailor.SourceLocationSegmentDeliveryConfiguration[] | undefined>;
    /**
     * The name of the source location.
     */
    readonly sourceLocationName: pulumi.Output<string>;
    /**
     * The tags to assign to the source location.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a SourceLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceLocationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SourceLocation resource.
 */
export interface SourceLocationArgs {
    /**
     * The access configuration for the source location.
     */
    accessConfiguration?: pulumi.Input<inputs.mediatailor.SourceLocationAccessConfigurationArgs>;
    /**
     * The default segment delivery configuration.
     */
    defaultSegmentDeliveryConfiguration?: pulumi.Input<inputs.mediatailor.SourceLocationDefaultSegmentDeliveryConfigurationArgs>;
    /**
     * The HTTP configuration for the source location.
     */
    httpConfiguration: pulumi.Input<inputs.mediatailor.SourceLocationHttpConfigurationArgs>;
    /**
     * <p>A list of the segment delivery configurations associated with this resource.</p>
     */
    segmentDeliveryConfigurations?: pulumi.Input<pulumi.Input<inputs.mediatailor.SourceLocationSegmentDeliveryConfigurationArgs>[]>;
    /**
     * The name of the source location.
     */
    sourceLocationName?: pulumi.Input<string>;
    /**
     * The tags to assign to the source location.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
