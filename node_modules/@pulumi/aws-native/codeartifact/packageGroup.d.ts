import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The resource schema to create a CodeArtifact package group.
 */
export declare class PackageGroup extends pulumi.CustomResource {
    /**
     * Get an existing PackageGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PackageGroup;
    /**
     * Returns true if the given object is an instance of PackageGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PackageGroup;
    /**
     * The ARN of the package group.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The contact info of the package group.
     */
    readonly contactInfo: pulumi.Output<string | undefined>;
    /**
     * The text description of the package group.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the domain that contains the package group.
     */
    readonly domainName: pulumi.Output<string>;
    /**
     * The 12-digit account ID of the AWS account that owns the domain.
     */
    readonly domainOwner: pulumi.Output<string | undefined>;
    /**
     * The package origin configuration of the package group.
     */
    readonly originConfiguration: pulumi.Output<outputs.codeartifact.PackageGroupOriginConfiguration | undefined>;
    /**
     * The package group pattern that is used to gather packages.
     */
    readonly pattern: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to the package group.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a PackageGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PackageGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PackageGroup resource.
 */
export interface PackageGroupArgs {
    /**
     * The contact info of the package group.
     */
    contactInfo?: pulumi.Input<string>;
    /**
     * The text description of the package group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the domain that contains the package group.
     */
    domainName: pulumi.Input<string>;
    /**
     * The 12-digit account ID of the AWS account that owns the domain.
     */
    domainOwner?: pulumi.Input<string>;
    /**
     * The package origin configuration of the package group.
     */
    originConfiguration?: pulumi.Input<inputs.codeartifact.PackageGroupOriginConfigurationArgs>;
    /**
     * The package group pattern that is used to gather packages.
     */
    pattern: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to the package group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
