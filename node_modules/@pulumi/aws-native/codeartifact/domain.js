"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Domain = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The resource schema to create a CodeArtifact domain.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {
 *     domainName: "my-domain",
 *     encryptionKey: "arn:aws:kms:us-west-2:123456789012:key/12345678-9abc-def1-2345-6789abcdef12",
 *     permissionsPolicyDocument: {
 *         version: "2012-10-17",
 *         statement: [{
 *             action: [
 *                 "codeartifact:ReadFromRepository",
 *                 "codeartifact:DescribePackageVersion",
 *                 "codeartifact:DescribeRepository",
 *                 "codeartifact:GetPackageVersionReadme",
 *                 "codeartifact:GetRepositoryEndpoint",
 *                 "codeartifact:ListPackageVersionAssets",
 *                 "codeartifact:ListPackageVersionDependencies",
 *                 "codeartifact:ListPackageVersions",
 *                 "codeartifact:ListPackages",
 *                 "codeartifact:ReadFromRepository",
 *             ],
 *             effect: "Allow",
 *             principal: {
 *                 aws: "arn:aws:iam::123456789012:root",
 *             },
 *             resource: "*",
 *         }],
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {
 *     domainName: "my-domain",
 *     encryptionKey: "arn:aws:kms:us-west-2:123456789012:key/12345678-9abc-def1-2345-6789abcdef12",
 *     permissionsPolicyDocument: {
 *         version: "2012-10-17",
 *         statement: [{
 *             action: [
 *                 "codeartifact:ReadFromRepository",
 *                 "codeartifact:DescribePackageVersion",
 *                 "codeartifact:DescribeRepository",
 *                 "codeartifact:GetPackageVersionReadme",
 *                 "codeartifact:GetRepositoryEndpoint",
 *                 "codeartifact:ListPackageVersionAssets",
 *                 "codeartifact:ListPackageVersionDependencies",
 *                 "codeartifact:ListPackageVersions",
 *                 "codeartifact:ListPackages",
 *                 "codeartifact:ReadFromRepository",
 *             ],
 *             effect: "Allow",
 *             principal: {
 *                 aws: "arn:aws:iam::123456789012:root",
 *             },
 *             resource: "*",
 *         }],
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {
 *     domainName: "my-domain",
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {
 *     domainName: "my-domain",
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactUpstreamRepository = new aws_native.codeartifact.Repository("myCodeArtifactUpstreamRepository", {
 *     repositoryName: "my-upstream-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     externalConnections: ["public:npmjs"],
 * });
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     upstreams: [myCodeArtifactUpstreamRepository.name],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactUpstreamRepository = new aws_native.codeartifact.Repository("myCodeArtifactUpstreamRepository", {
 *     repositoryName: "my-upstream-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     externalConnections: ["public:npmjs"],
 * });
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     upstreams: [myCodeArtifactUpstreamRepository.name],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myCodeArtifactDomain = new aws_native.codeartifact.Domain("myCodeArtifactDomain", {domainName: "my-domain"});
 * const myCodeArtifactRepository = new aws_native.codeartifact.Repository("myCodeArtifactRepository", {
 *     repositoryName: "my-repo",
 *     domainName: myCodeArtifactDomain.name,
 *     tags: [
 *         {
 *             key: "keyname1",
 *             value: "value1",
 *         },
 *         {
 *             key: "keyname2",
 *             value: "value2",
 *         },
 *     ],
 * });
 *
 * ```
 */
class Domain extends pulumi.CustomResource {
    /**
     * Get an existing Domain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Domain(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Domain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Domain.__pulumiType;
    }
    /**
     * Create a Domain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["encryptionKey"] = args ? args.encryptionKey : undefined;
            resourceInputs["permissionsPolicyDocument"] = args ? args.permissionsPolicyDocument : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["domainName"] = undefined /*out*/;
            resourceInputs["encryptionKey"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["owner"] = undefined /*out*/;
            resourceInputs["permissionsPolicyDocument"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["domainName", "encryptionKey"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Domain.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Domain = Domain;
/** @internal */
Domain.__pulumiType = 'aws-native:codeartifact:Domain';
//# sourceMappingURL=domain.js.map