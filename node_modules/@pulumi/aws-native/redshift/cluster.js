"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * An example resource schema demonstrating some basic constructs and validation rules.
 */
class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Cluster(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }
    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.clusterType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterType'");
            }
            if ((!args || args.dbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbName'");
            }
            if ((!args || args.masterUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masterUsername'");
            }
            if ((!args || args.nodeType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeType'");
            }
            resourceInputs["allowVersionUpgrade"] = args ? args.allowVersionUpgrade : undefined;
            resourceInputs["aquaConfigurationStatus"] = args ? args.aquaConfigurationStatus : undefined;
            resourceInputs["automatedSnapshotRetentionPeriod"] = args ? args.automatedSnapshotRetentionPeriod : undefined;
            resourceInputs["availabilityZone"] = args ? args.availabilityZone : undefined;
            resourceInputs["availabilityZoneRelocation"] = args ? args.availabilityZoneRelocation : undefined;
            resourceInputs["availabilityZoneRelocationStatus"] = args ? args.availabilityZoneRelocationStatus : undefined;
            resourceInputs["classic"] = args ? args.classic : undefined;
            resourceInputs["clusterIdentifier"] = args ? args.clusterIdentifier : undefined;
            resourceInputs["clusterParameterGroupName"] = args ? args.clusterParameterGroupName : undefined;
            resourceInputs["clusterSecurityGroups"] = args ? args.clusterSecurityGroups : undefined;
            resourceInputs["clusterSubnetGroupName"] = args ? args.clusterSubnetGroupName : undefined;
            resourceInputs["clusterType"] = args ? args.clusterType : undefined;
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["dbName"] = args ? args.dbName : undefined;
            resourceInputs["deferMaintenance"] = args ? args.deferMaintenance : undefined;
            resourceInputs["deferMaintenanceDuration"] = args ? args.deferMaintenanceDuration : undefined;
            resourceInputs["deferMaintenanceEndTime"] = args ? args.deferMaintenanceEndTime : undefined;
            resourceInputs["deferMaintenanceStartTime"] = args ? args.deferMaintenanceStartTime : undefined;
            resourceInputs["destinationRegion"] = args ? args.destinationRegion : undefined;
            resourceInputs["elasticIp"] = args ? args.elasticIp : undefined;
            resourceInputs["encrypted"] = args ? args.encrypted : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["enhancedVpcRouting"] = args ? args.enhancedVpcRouting : undefined;
            resourceInputs["hsmClientCertificateIdentifier"] = args ? args.hsmClientCertificateIdentifier : undefined;
            resourceInputs["hsmConfigurationIdentifier"] = args ? args.hsmConfigurationIdentifier : undefined;
            resourceInputs["iamRoles"] = args ? args.iamRoles : undefined;
            resourceInputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            resourceInputs["loggingProperties"] = args ? args.loggingProperties : undefined;
            resourceInputs["maintenanceTrackName"] = args ? args.maintenanceTrackName : undefined;
            resourceInputs["manageMasterPassword"] = args ? args.manageMasterPassword : undefined;
            resourceInputs["manualSnapshotRetentionPeriod"] = args ? args.manualSnapshotRetentionPeriod : undefined;
            resourceInputs["masterPasswordSecretKmsKeyId"] = args ? args.masterPasswordSecretKmsKeyId : undefined;
            resourceInputs["masterUserPassword"] = args ? args.masterUserPassword : undefined;
            resourceInputs["masterUsername"] = args ? args.masterUsername : undefined;
            resourceInputs["multiAz"] = args ? args.multiAz : undefined;
            resourceInputs["namespaceResourcePolicy"] = args ? args.namespaceResourcePolicy : undefined;
            resourceInputs["nodeType"] = args ? args.nodeType : undefined;
            resourceInputs["numberOfNodes"] = args ? args.numberOfNodes : undefined;
            resourceInputs["ownerAccount"] = args ? args.ownerAccount : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["preferredMaintenanceWindow"] = args ? args.preferredMaintenanceWindow : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["resourceAction"] = args ? args.resourceAction : undefined;
            resourceInputs["revisionTarget"] = args ? args.revisionTarget : undefined;
            resourceInputs["rotateEncryptionKey"] = args ? args.rotateEncryptionKey : undefined;
            resourceInputs["snapshotClusterIdentifier"] = args ? args.snapshotClusterIdentifier : undefined;
            resourceInputs["snapshotCopyGrantName"] = args ? args.snapshotCopyGrantName : undefined;
            resourceInputs["snapshotCopyManual"] = args ? args.snapshotCopyManual : undefined;
            resourceInputs["snapshotCopyRetentionPeriod"] = args ? args.snapshotCopyRetentionPeriod : undefined;
            resourceInputs["snapshotIdentifier"] = args ? args.snapshotIdentifier : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcSecurityGroupIds"] = args ? args.vpcSecurityGroupIds : undefined;
            resourceInputs["clusterNamespaceArn"] = undefined /*out*/;
            resourceInputs["deferMaintenanceIdentifier"] = undefined /*out*/;
            resourceInputs["masterPasswordSecretArn"] = undefined /*out*/;
        }
        else {
            resourceInputs["allowVersionUpgrade"] = undefined /*out*/;
            resourceInputs["aquaConfigurationStatus"] = undefined /*out*/;
            resourceInputs["automatedSnapshotRetentionPeriod"] = undefined /*out*/;
            resourceInputs["availabilityZone"] = undefined /*out*/;
            resourceInputs["availabilityZoneRelocation"] = undefined /*out*/;
            resourceInputs["availabilityZoneRelocationStatus"] = undefined /*out*/;
            resourceInputs["classic"] = undefined /*out*/;
            resourceInputs["clusterIdentifier"] = undefined /*out*/;
            resourceInputs["clusterNamespaceArn"] = undefined /*out*/;
            resourceInputs["clusterParameterGroupName"] = undefined /*out*/;
            resourceInputs["clusterSecurityGroups"] = undefined /*out*/;
            resourceInputs["clusterSubnetGroupName"] = undefined /*out*/;
            resourceInputs["clusterType"] = undefined /*out*/;
            resourceInputs["clusterVersion"] = undefined /*out*/;
            resourceInputs["dbName"] = undefined /*out*/;
            resourceInputs["deferMaintenance"] = undefined /*out*/;
            resourceInputs["deferMaintenanceDuration"] = undefined /*out*/;
            resourceInputs["deferMaintenanceEndTime"] = undefined /*out*/;
            resourceInputs["deferMaintenanceIdentifier"] = undefined /*out*/;
            resourceInputs["deferMaintenanceStartTime"] = undefined /*out*/;
            resourceInputs["destinationRegion"] = undefined /*out*/;
            resourceInputs["elasticIp"] = undefined /*out*/;
            resourceInputs["encrypted"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["enhancedVpcRouting"] = undefined /*out*/;
            resourceInputs["hsmClientCertificateIdentifier"] = undefined /*out*/;
            resourceInputs["hsmConfigurationIdentifier"] = undefined /*out*/;
            resourceInputs["iamRoles"] = undefined /*out*/;
            resourceInputs["kmsKeyId"] = undefined /*out*/;
            resourceInputs["loggingProperties"] = undefined /*out*/;
            resourceInputs["maintenanceTrackName"] = undefined /*out*/;
            resourceInputs["manageMasterPassword"] = undefined /*out*/;
            resourceInputs["manualSnapshotRetentionPeriod"] = undefined /*out*/;
            resourceInputs["masterPasswordSecretArn"] = undefined /*out*/;
            resourceInputs["masterPasswordSecretKmsKeyId"] = undefined /*out*/;
            resourceInputs["masterUserPassword"] = undefined /*out*/;
            resourceInputs["masterUsername"] = undefined /*out*/;
            resourceInputs["multiAz"] = undefined /*out*/;
            resourceInputs["namespaceResourcePolicy"] = undefined /*out*/;
            resourceInputs["nodeType"] = undefined /*out*/;
            resourceInputs["numberOfNodes"] = undefined /*out*/;
            resourceInputs["ownerAccount"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["preferredMaintenanceWindow"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["resourceAction"] = undefined /*out*/;
            resourceInputs["revisionTarget"] = undefined /*out*/;
            resourceInputs["rotateEncryptionKey"] = undefined /*out*/;
            resourceInputs["snapshotClusterIdentifier"] = undefined /*out*/;
            resourceInputs["snapshotCopyGrantName"] = undefined /*out*/;
            resourceInputs["snapshotCopyManual"] = undefined /*out*/;
            resourceInputs["snapshotCopyRetentionPeriod"] = undefined /*out*/;
            resourceInputs["snapshotIdentifier"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["vpcSecurityGroupIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["clusterIdentifier", "clusterSubnetGroupName", "dbName", "masterUsername", "ownerAccount", "snapshotClusterIdentifier", "snapshotIdentifier"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Cluster = Cluster;
/** @internal */
Cluster.__pulumiType = 'aws-native:redshift:Cluster';
//# sourceMappingURL=cluster.js.map