import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for a Redshift-managed VPC endpoint.
 */
export declare function getEndpointAccess(args: GetEndpointAccessArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointAccessResult>;
export interface GetEndpointAccessArgs {
    /**
     * The name of the endpoint.
     */
    endpointName: string;
}
export interface GetEndpointAccessResult {
    /**
     * The DNS address of the endpoint.
     */
    readonly address?: string;
    /**
     * The time (UTC) that the endpoint was created.
     */
    readonly endpointCreateTime?: string;
    /**
     * The status of the endpoint.
     */
    readonly endpointStatus?: string;
    /**
     * The port number on which the cluster accepts incoming connections.
     */
    readonly port?: number;
    /**
     * The connection endpoint for connecting to an Amazon Redshift cluster through the proxy.
     */
    readonly vpcEndpoint?: outputs.redshift.VpcEndpointProperties;
    /**
     * A list of vpc security group ids to apply to the created endpoint access.
     */
    readonly vpcSecurityGroupIds?: string[];
    /**
     * A list of Virtual Private Cloud (VPC) security groups to be associated with the endpoint.
     */
    readonly vpcSecurityGroups?: outputs.redshift.EndpointAccessVpcSecurityGroup[];
}
/**
 * Resource schema for a Redshift-managed VPC endpoint.
 */
export declare function getEndpointAccessOutput(args: GetEndpointAccessOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEndpointAccessResult>;
export interface GetEndpointAccessOutputArgs {
    /**
     * The name of the endpoint.
     */
    endpointName: pulumi.Input<string>;
}
