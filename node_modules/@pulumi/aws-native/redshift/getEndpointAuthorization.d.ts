import * as pulumi from "@pulumi/pulumi";
/**
 * Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across AWS accounts.
 */
export declare function getEndpointAuthorization(args: GetEndpointAuthorizationArgs, opts?: pulumi.InvokeOptions): Promise<GetEndpointAuthorizationResult>;
export interface GetEndpointAuthorizationArgs {
    /**
     * The target AWS account ID to grant or revoke access for.
     */
    account: string;
    /**
     * The cluster identifier.
     */
    clusterIdentifier: string;
}
export interface GetEndpointAuthorizationResult {
    /**
     * Indicates whether all VPCs in the grantee account are allowed access to the cluster.
     */
    readonly allowedAllVpcs?: boolean;
    /**
     * The VPCs allowed access to the cluster.
     */
    readonly allowedVpcs?: string[];
    /**
     * The time (UTC) when the authorization was created.
     */
    readonly authorizeTime?: string;
    /**
     * The status of the cluster.
     */
    readonly clusterStatus?: string;
    /**
     * The number of Redshift-managed VPC endpoints created for the authorization.
     */
    readonly endpointCount?: number;
    /**
     * The AWS account ID of the grantee of the cluster.
     */
    readonly grantee?: string;
    /**
     * The AWS account ID of the cluster owner.
     */
    readonly grantor?: string;
    /**
     * The status of the authorization action.
     */
    readonly status?: string;
    /**
     * The virtual private cloud (VPC) identifiers to grant or revoke access to.
     */
    readonly vpcIds?: string[];
}
/**
 * Describes an endpoint authorization for authorizing Redshift-managed VPC endpoint access to a cluster across AWS accounts.
 */
export declare function getEndpointAuthorizationOutput(args: GetEndpointAuthorizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetEndpointAuthorizationResult>;
export interface GetEndpointAuthorizationOutputArgs {
    /**
     * The target AWS account ID to grant or revoke access for.
     */
    account: pulumi.Input<string>;
    /**
     * The cluster identifier.
     */
    clusterIdentifier: pulumi.Input<string>;
}
