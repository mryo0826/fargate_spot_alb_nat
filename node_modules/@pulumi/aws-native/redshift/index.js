"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledAction = exports.Integration = exports.getScheduledActionOutput = exports.getScheduledAction = exports.getIntegrationOutput = exports.getIntegration = exports.getEventSubscriptionOutput = exports.getEventSubscription = exports.getEndpointAuthorizationOutput = exports.getEndpointAuthorization = exports.getEndpointAccessOutput = exports.getEndpointAccess = exports.getClusterSubnetGroupOutput = exports.getClusterSubnetGroup = exports.getClusterParameterGroupOutput = exports.getClusterParameterGroup = exports.getClusterOutput = exports.getCluster = exports.EventSubscription = exports.EndpointAuthorization = exports.EndpointAccess = exports.ClusterSubnetGroup = exports.ClusterParameterGroup = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.ClusterParameterGroup = null;
utilities.lazyLoad(exports, ["ClusterParameterGroup"], () => require("./clusterParameterGroup"));
exports.ClusterSubnetGroup = null;
utilities.lazyLoad(exports, ["ClusterSubnetGroup"], () => require("./clusterSubnetGroup"));
exports.EndpointAccess = null;
utilities.lazyLoad(exports, ["EndpointAccess"], () => require("./endpointAccess"));
exports.EndpointAuthorization = null;
utilities.lazyLoad(exports, ["EndpointAuthorization"], () => require("./endpointAuthorization"));
exports.EventSubscription = null;
utilities.lazyLoad(exports, ["EventSubscription"], () => require("./eventSubscription"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getClusterParameterGroup = null;
exports.getClusterParameterGroupOutput = null;
utilities.lazyLoad(exports, ["getClusterParameterGroup", "getClusterParameterGroupOutput"], () => require("./getClusterParameterGroup"));
exports.getClusterSubnetGroup = null;
exports.getClusterSubnetGroupOutput = null;
utilities.lazyLoad(exports, ["getClusterSubnetGroup", "getClusterSubnetGroupOutput"], () => require("./getClusterSubnetGroup"));
exports.getEndpointAccess = null;
exports.getEndpointAccessOutput = null;
utilities.lazyLoad(exports, ["getEndpointAccess", "getEndpointAccessOutput"], () => require("./getEndpointAccess"));
exports.getEndpointAuthorization = null;
exports.getEndpointAuthorizationOutput = null;
utilities.lazyLoad(exports, ["getEndpointAuthorization", "getEndpointAuthorizationOutput"], () => require("./getEndpointAuthorization"));
exports.getEventSubscription = null;
exports.getEventSubscriptionOutput = null;
utilities.lazyLoad(exports, ["getEventSubscription", "getEventSubscriptionOutput"], () => require("./getEventSubscription"));
exports.getIntegration = null;
exports.getIntegrationOutput = null;
utilities.lazyLoad(exports, ["getIntegration", "getIntegrationOutput"], () => require("./getIntegration"));
exports.getScheduledAction = null;
exports.getScheduledActionOutput = null;
utilities.lazyLoad(exports, ["getScheduledAction", "getScheduledActionOutput"], () => require("./getScheduledAction"));
exports.Integration = null;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));
exports.ScheduledAction = null;
utilities.lazyLoad(exports, ["ScheduledAction"], () => require("./scheduledAction"));
// Export enums:
__exportStar(require("../types/enums/redshift"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:redshift:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "aws-native:redshift:ClusterParameterGroup":
                return new exports.ClusterParameterGroup(name, undefined, { urn });
            case "aws-native:redshift:ClusterSubnetGroup":
                return new exports.ClusterSubnetGroup(name, undefined, { urn });
            case "aws-native:redshift:EndpointAccess":
                return new exports.EndpointAccess(name, undefined, { urn });
            case "aws-native:redshift:EndpointAuthorization":
                return new exports.EndpointAuthorization(name, undefined, { urn });
            case "aws-native:redshift:EventSubscription":
                return new exports.EventSubscription(name, undefined, { urn });
            case "aws-native:redshift:Integration":
                return new exports.Integration(name, undefined, { urn });
            case "aws-native:redshift:ScheduledAction":
                return new exports.ScheduledAction(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "redshift", _module);
//# sourceMappingURL=index.js.map