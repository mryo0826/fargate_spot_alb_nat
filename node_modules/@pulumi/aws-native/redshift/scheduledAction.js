"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledAction = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The `AWS::Redshift::ScheduledAction` resource creates an Amazon Redshift Scheduled Action.
 */
class ScheduledAction extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ScheduledAction(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ScheduledAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledAction.__pulumiType;
    }
    /**
     * Create a ScheduledAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["iamRole"] = args ? args.iamRole : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["scheduledActionDescription"] = args ? args.scheduledActionDescription : undefined;
            resourceInputs["scheduledActionName"] = args ? args.scheduledActionName : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
            resourceInputs["targetAction"] = args ? args.targetAction : undefined;
            resourceInputs["nextInvocations"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        else {
            resourceInputs["enable"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["iamRole"] = undefined /*out*/;
            resourceInputs["nextInvocations"] = undefined /*out*/;
            resourceInputs["schedule"] = undefined /*out*/;
            resourceInputs["scheduledActionDescription"] = undefined /*out*/;
            resourceInputs["scheduledActionName"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["targetAction"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["scheduledActionName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ScheduledAction.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ScheduledAction = ScheduledAction;
/** @internal */
ScheduledAction.__pulumiType = 'aws-native:redshift:ScheduledAction';
//# sourceMappingURL=scheduledAction.js.map