import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Route53Profiles::ProfileAssociation
 */
export declare class ProfileAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ProfileAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ProfileAssociation;
    /**
     * Returns true if the given object is an instance of ProfileAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ProfileAssociation;
    /**
     * The Amazon Resource Name (ARN) of the profile association.
     */
    readonly arn: pulumi.Output<string | undefined>;
    /**
     * Primary Identifier for  Profile Association
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The name of an association between a  Profile and a VPC.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the  profile that you associated with the resource that is specified by ResourceId.
     */
    readonly profileId: pulumi.Output<string>;
    /**
     * The resource that you associated the  profile with.
     */
    readonly resourceId: pulumi.Output<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ProfileAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileAssociationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ProfileAssociation resource.
 */
export interface ProfileAssociationArgs {
    /**
     * The Amazon Resource Name (ARN) of the profile association.
     */
    arn?: pulumi.Input<string>;
    /**
     * The name of an association between a  Profile and a VPC.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the  profile that you associated with the resource that is specified by ResourceId.
     */
    profileId: pulumi.Input<string>;
    /**
     * The resource that you associated the  profile with.
     */
    resourceId: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
