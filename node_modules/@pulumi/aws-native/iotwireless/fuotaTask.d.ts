import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Create and manage FUOTA tasks.
 */
export declare class FuotaTask extends pulumi.CustomResource {
    /**
     * Get an existing FuotaTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FuotaTask;
    /**
     * Returns true if the given object is an instance of FuotaTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FuotaTask;
    /**
     * FUOTA task arn. Returned after successful create.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Multicast group to associate. Only for update request.
     */
    readonly associateMulticastGroup: pulumi.Output<string | undefined>;
    /**
     * Wireless device to associate. Only for update request.
     */
    readonly associateWirelessDevice: pulumi.Output<string | undefined>;
    /**
     * FUOTA task id. Returned after successful create.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * FUOTA task description
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Multicast group to disassociate. Only for update request.
     */
    readonly disassociateMulticastGroup: pulumi.Output<string | undefined>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    readonly disassociateWirelessDevice: pulumi.Output<string | undefined>;
    /**
     * FUOTA task firmware update image binary S3 link
     */
    readonly firmwareUpdateImage: pulumi.Output<string>;
    /**
     * FUOTA task firmware IAM role for reading S3
     */
    readonly firmwareUpdateRole: pulumi.Output<string>;
    /**
     * FUOTA task status. Returned after successful read.
     */
    readonly fuotaTaskStatus: pulumi.Output<string>;
    /**
     * FUOTA task LoRaWAN
     */
    readonly loRaWan: pulumi.Output<outputs.iotwireless.FuotaTaskLoRaWan>;
    /**
     * Name of FUOTA task
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * A list of key-value pairs that contain metadata for the FUOTA task.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a FuotaTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FuotaTaskArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FuotaTask resource.
 */
export interface FuotaTaskArgs {
    /**
     * Multicast group to associate. Only for update request.
     */
    associateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to associate. Only for update request.
     */
    associateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task description
     */
    description?: pulumi.Input<string>;
    /**
     * Multicast group to disassociate. Only for update request.
     */
    disassociateMulticastGroup?: pulumi.Input<string>;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    disassociateWirelessDevice?: pulumi.Input<string>;
    /**
     * FUOTA task firmware update image binary S3 link
     */
    firmwareUpdateImage: pulumi.Input<string>;
    /**
     * FUOTA task firmware IAM role for reading S3
     */
    firmwareUpdateRole: pulumi.Input<string>;
    /**
     * FUOTA task LoRaWAN
     */
    loRaWan: pulumi.Input<inputs.iotwireless.FuotaTaskLoRaWanArgs>;
    /**
     * Name of FUOTA task
     */
    name?: pulumi.Input<string>;
    /**
     * A list of key-value pairs that contain metadata for the FUOTA task.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
