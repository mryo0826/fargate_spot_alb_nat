"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WirelessGateway = exports.WirelessDevice = exports.TaskDefinition = exports.ServiceProfile = exports.NetworkAnalyzerConfiguration = exports.MulticastGroup = exports.getWirelessGatewayOutput = exports.getWirelessGateway = exports.getWirelessDeviceOutput = exports.getWirelessDevice = exports.getTaskDefinitionOutput = exports.getTaskDefinition = exports.getServiceProfileOutput = exports.getServiceProfile = exports.getNetworkAnalyzerConfigurationOutput = exports.getNetworkAnalyzerConfiguration = exports.getMulticastGroupOutput = exports.getMulticastGroup = exports.getFuotaTaskOutput = exports.getFuotaTask = exports.getDeviceProfileOutput = exports.getDeviceProfile = exports.getDestinationOutput = exports.getDestination = exports.FuotaTask = exports.DeviceProfile = exports.Destination = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Destination = null;
utilities.lazyLoad(exports, ["Destination"], () => require("./destination"));
exports.DeviceProfile = null;
utilities.lazyLoad(exports, ["DeviceProfile"], () => require("./deviceProfile"));
exports.FuotaTask = null;
utilities.lazyLoad(exports, ["FuotaTask"], () => require("./fuotaTask"));
exports.getDestination = null;
exports.getDestinationOutput = null;
utilities.lazyLoad(exports, ["getDestination", "getDestinationOutput"], () => require("./getDestination"));
exports.getDeviceProfile = null;
exports.getDeviceProfileOutput = null;
utilities.lazyLoad(exports, ["getDeviceProfile", "getDeviceProfileOutput"], () => require("./getDeviceProfile"));
exports.getFuotaTask = null;
exports.getFuotaTaskOutput = null;
utilities.lazyLoad(exports, ["getFuotaTask", "getFuotaTaskOutput"], () => require("./getFuotaTask"));
exports.getMulticastGroup = null;
exports.getMulticastGroupOutput = null;
utilities.lazyLoad(exports, ["getMulticastGroup", "getMulticastGroupOutput"], () => require("./getMulticastGroup"));
exports.getNetworkAnalyzerConfiguration = null;
exports.getNetworkAnalyzerConfigurationOutput = null;
utilities.lazyLoad(exports, ["getNetworkAnalyzerConfiguration", "getNetworkAnalyzerConfigurationOutput"], () => require("./getNetworkAnalyzerConfiguration"));
exports.getServiceProfile = null;
exports.getServiceProfileOutput = null;
utilities.lazyLoad(exports, ["getServiceProfile", "getServiceProfileOutput"], () => require("./getServiceProfile"));
exports.getTaskDefinition = null;
exports.getTaskDefinitionOutput = null;
utilities.lazyLoad(exports, ["getTaskDefinition", "getTaskDefinitionOutput"], () => require("./getTaskDefinition"));
exports.getWirelessDevice = null;
exports.getWirelessDeviceOutput = null;
utilities.lazyLoad(exports, ["getWirelessDevice", "getWirelessDeviceOutput"], () => require("./getWirelessDevice"));
exports.getWirelessGateway = null;
exports.getWirelessGatewayOutput = null;
utilities.lazyLoad(exports, ["getWirelessGateway", "getWirelessGatewayOutput"], () => require("./getWirelessGateway"));
exports.MulticastGroup = null;
utilities.lazyLoad(exports, ["MulticastGroup"], () => require("./multicastGroup"));
exports.NetworkAnalyzerConfiguration = null;
utilities.lazyLoad(exports, ["NetworkAnalyzerConfiguration"], () => require("./networkAnalyzerConfiguration"));
exports.ServiceProfile = null;
utilities.lazyLoad(exports, ["ServiceProfile"], () => require("./serviceProfile"));
exports.TaskDefinition = null;
utilities.lazyLoad(exports, ["TaskDefinition"], () => require("./taskDefinition"));
exports.WirelessDevice = null;
utilities.lazyLoad(exports, ["WirelessDevice"], () => require("./wirelessDevice"));
exports.WirelessGateway = null;
utilities.lazyLoad(exports, ["WirelessGateway"], () => require("./wirelessGateway"));
// Export enums:
__exportStar(require("../types/enums/iotwireless"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:iotwireless:Destination":
                return new exports.Destination(name, undefined, { urn });
            case "aws-native:iotwireless:DeviceProfile":
                return new exports.DeviceProfile(name, undefined, { urn });
            case "aws-native:iotwireless:FuotaTask":
                return new exports.FuotaTask(name, undefined, { urn });
            case "aws-native:iotwireless:MulticastGroup":
                return new exports.MulticastGroup(name, undefined, { urn });
            case "aws-native:iotwireless:NetworkAnalyzerConfiguration":
                return new exports.NetworkAnalyzerConfiguration(name, undefined, { urn });
            case "aws-native:iotwireless:ServiceProfile":
                return new exports.ServiceProfile(name, undefined, { urn });
            case "aws-native:iotwireless:TaskDefinition":
                return new exports.TaskDefinition(name, undefined, { urn });
            case "aws-native:iotwireless:WirelessDevice":
                return new exports.WirelessDevice(name, undefined, { urn });
            case "aws-native:iotwireless:WirelessGateway":
                return new exports.WirelessGateway(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "iotwireless", _module);
//# sourceMappingURL=index.js.map