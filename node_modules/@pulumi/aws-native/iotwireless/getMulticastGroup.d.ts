import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Create and manage Multicast groups.
 */
export declare function getMulticastGroup(args: GetMulticastGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetMulticastGroupResult>;
export interface GetMulticastGroupArgs {
    /**
     * Multicast group id. Returned after successful create.
     */
    id: string;
}
export interface GetMulticastGroupResult {
    /**
     * Multicast group arn. Returned after successful create.
     */
    readonly arn?: string;
    /**
     * Wireless device to associate. Only for update request.
     */
    readonly associateWirelessDevice?: string;
    /**
     * Multicast group description
     */
    readonly description?: string;
    /**
     * Wireless device to disassociate. Only for update request.
     */
    readonly disassociateWirelessDevice?: string;
    /**
     * Multicast group id. Returned after successful create.
     */
    readonly id?: string;
    /**
     * Multicast group LoRaWAN
     */
    readonly loRaWan?: outputs.iotwireless.MulticastGroupLoRaWan;
    /**
     * Name of Multicast group
     */
    readonly name?: string;
    /**
     * Multicast group status. Returned after successful read.
     */
    readonly status?: string;
    /**
     * A list of key-value pairs that contain metadata for the Multicast group.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Create and manage Multicast groups.
 */
export declare function getMulticastGroupOutput(args: GetMulticastGroupOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMulticastGroupResult>;
export interface GetMulticastGroupOutputArgs {
    /**
     * Multicast group id. Returned after successful create.
     */
    id: pulumi.Input<string>;
}
