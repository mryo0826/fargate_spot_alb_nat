import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Create and manage wireless gateways, including LoRa gateways.
 */
export declare function getWirelessGateway(args: GetWirelessGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessGatewayResult>;
export interface GetWirelessGatewayArgs {
    /**
     * Id for Wireless Gateway. Returned upon successful create.
     */
    id: string;
}
export interface GetWirelessGatewayResult {
    /**
     * Arn for Wireless Gateway. Returned upon successful create.
     */
    readonly arn?: string;
    /**
     * Description of Wireless Gateway.
     */
    readonly description?: string;
    /**
     * Id for Wireless Gateway. Returned upon successful create.
     */
    readonly id?: string;
    /**
     * The date and time when the most recent uplink was received.
     */
    readonly lastUplinkReceivedAt?: string;
    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Gateway.
     */
    readonly loRaWan?: outputs.iotwireless.WirelessGatewayLoRaWanGateway;
    /**
     * Name of Wireless Gateway.
     */
    readonly name?: string;
    /**
     * A list of key-value pairs that contain metadata for the gateway.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Thing Arn. Passed into Update to associate a Thing with the Wireless Gateway.
     */
    readonly thingArn?: string;
    /**
     * Thing Name. If there is a Thing created, this can be returned with a Get call.
     */
    readonly thingName?: string;
}
/**
 * Create and manage wireless gateways, including LoRa gateways.
 */
export declare function getWirelessGatewayOutput(args: GetWirelessGatewayOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWirelessGatewayResult>;
export interface GetWirelessGatewayOutputArgs {
    /**
     * Id for Wireless Gateway. Returned upon successful create.
     */
    id: pulumi.Input<string>;
}
