import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Create and manage wireless gateways, including LoRa gateways.
 */
export declare function getWirelessDevice(args: GetWirelessDeviceArgs, opts?: pulumi.InvokeOptions): Promise<GetWirelessDeviceResult>;
export interface GetWirelessDeviceArgs {
    /**
     * Wireless device Id. Returned after successful create.
     */
    id: string;
}
export interface GetWirelessDeviceResult {
    /**
     * Wireless device arn. Returned after successful create.
     */
    readonly arn?: string;
    /**
     * Wireless device description
     */
    readonly description?: string;
    /**
     * Wireless device destination name
     */
    readonly destinationName?: string;
    /**
     * Wireless device Id. Returned after successful create.
     */
    readonly id?: string;
    /**
     * The date and time when the most recent uplink was received.
     */
    readonly lastUplinkReceivedAt?: string;
    /**
     * The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
     */
    readonly loRaWan?: outputs.iotwireless.WirelessDeviceLoRaWanDevice;
    /**
     * Wireless device name
     */
    readonly name?: string;
    /**
     * FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
     */
    readonly positioning?: enums.iotwireless.WirelessDevicePositioning;
    /**
     * A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
     */
    readonly tags?: outputs.Tag[];
    /**
     * Thing arn. Passed into update to associate Thing with Wireless device.
     */
    readonly thingArn?: string;
    /**
     * Thing Arn. If there is a Thing created, this can be returned with a Get call.
     */
    readonly thingName?: string;
    /**
     * Wireless device type, currently only Sidewalk and LoRa
     */
    readonly type?: enums.iotwireless.WirelessDeviceType;
}
/**
 * Create and manage wireless gateways, including LoRa gateways.
 */
export declare function getWirelessDeviceOutput(args: GetWirelessDeviceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetWirelessDeviceResult>;
export interface GetWirelessDeviceOutputArgs {
    /**
     * Wireless device Id. Returned after successful create.
     */
    id: pulumi.Input<string>;
}
