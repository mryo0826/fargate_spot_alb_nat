import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::GuardDuty::IPSet
 */
export declare class IpSet extends pulumi.CustomResource {
    /**
     * Get an existing IpSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IpSet;
    /**
     * Returns true if the given object is an instance of IpSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IpSet;
    /**
     * Indicates whether or not GuardDuty uses the `IPSet` .
     */
    readonly activate: pulumi.Output<boolean | undefined>;
    readonly awsId: pulumi.Output<string>;
    /**
     * The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
     *
     * To find the `detectorId` in the current Region, see the
     * Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    readonly detectorId: pulumi.Output<string | undefined>;
    /**
     * The format of the file that contains the IPSet.
     */
    readonly format: pulumi.Output<string>;
    /**
     * The URI of the file that contains the IPSet.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The user-friendly name to identify the IPSet.
     *
     * Allowed characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The tags to be added to a new IP set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a IpSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IpSet resource.
 */
export interface IpSetArgs {
    /**
     * Indicates whether or not GuardDuty uses the `IPSet` .
     */
    activate?: pulumi.Input<boolean>;
    /**
     * The unique ID of the detector of the GuardDuty account for which you want to create an IPSet.
     *
     * To find the `detectorId` in the current Region, see the
     * Settings page in the GuardDuty console, or run the [ListDetectors](https://docs.aws.amazon.com/guardduty/latest/APIReference/API_ListDetectors.html) API.
     */
    detectorId?: pulumi.Input<string>;
    /**
     * The format of the file that contains the IPSet.
     */
    format: pulumi.Input<string>;
    /**
     * The URI of the file that contains the IPSet.
     */
    location: pulumi.Input<string>;
    /**
     * The user-friendly name to identify the IPSet.
     *
     * Allowed characters are alphanumeric, whitespace, dash (-), and underscores (_).
     */
    name?: pulumi.Input<string>;
    /**
     * The tags to be added to a new IP set resource. Each tag consists of a key and an optional value, both of which you define.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
