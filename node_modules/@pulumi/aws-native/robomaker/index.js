"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimulationApplicationVersion = exports.SimulationApplication = exports.RobotApplicationVersion = exports.RobotApplication = exports.Robot = exports.getSimulationApplicationVersionOutput = exports.getSimulationApplicationVersion = exports.getSimulationApplicationOutput = exports.getSimulationApplication = exports.getRobotApplicationVersionOutput = exports.getRobotApplicationVersion = exports.getRobotApplicationOutput = exports.getRobotApplication = exports.getRobotOutput = exports.getRobot = exports.getFleetOutput = exports.getFleet = exports.Fleet = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Fleet = null;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));
exports.getFleet = null;
exports.getFleetOutput = null;
utilities.lazyLoad(exports, ["getFleet", "getFleetOutput"], () => require("./getFleet"));
exports.getRobot = null;
exports.getRobotOutput = null;
utilities.lazyLoad(exports, ["getRobot", "getRobotOutput"], () => require("./getRobot"));
exports.getRobotApplication = null;
exports.getRobotApplicationOutput = null;
utilities.lazyLoad(exports, ["getRobotApplication", "getRobotApplicationOutput"], () => require("./getRobotApplication"));
exports.getRobotApplicationVersion = null;
exports.getRobotApplicationVersionOutput = null;
utilities.lazyLoad(exports, ["getRobotApplicationVersion", "getRobotApplicationVersionOutput"], () => require("./getRobotApplicationVersion"));
exports.getSimulationApplication = null;
exports.getSimulationApplicationOutput = null;
utilities.lazyLoad(exports, ["getSimulationApplication", "getSimulationApplicationOutput"], () => require("./getSimulationApplication"));
exports.getSimulationApplicationVersion = null;
exports.getSimulationApplicationVersionOutput = null;
utilities.lazyLoad(exports, ["getSimulationApplicationVersion", "getSimulationApplicationVersionOutput"], () => require("./getSimulationApplicationVersion"));
exports.Robot = null;
utilities.lazyLoad(exports, ["Robot"], () => require("./robot"));
exports.RobotApplication = null;
utilities.lazyLoad(exports, ["RobotApplication"], () => require("./robotApplication"));
exports.RobotApplicationVersion = null;
utilities.lazyLoad(exports, ["RobotApplicationVersion"], () => require("./robotApplicationVersion"));
exports.SimulationApplication = null;
utilities.lazyLoad(exports, ["SimulationApplication"], () => require("./simulationApplication"));
exports.SimulationApplicationVersion = null;
utilities.lazyLoad(exports, ["SimulationApplicationVersion"], () => require("./simulationApplicationVersion"));
// Export enums:
__exportStar(require("../types/enums/robomaker"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:robomaker:Fleet":
                return new exports.Fleet(name, undefined, { urn });
            case "aws-native:robomaker:Robot":
                return new exports.Robot(name, undefined, { urn });
            case "aws-native:robomaker:RobotApplication":
                return new exports.RobotApplication(name, undefined, { urn });
            case "aws-native:robomaker:RobotApplicationVersion":
                return new exports.RobotApplicationVersion(name, undefined, { urn });
            case "aws-native:robomaker:SimulationApplication":
                return new exports.SimulationApplication(name, undefined, { urn });
            case "aws-native:robomaker:SimulationApplicationVersion":
                return new exports.SimulationApplicationVersion(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "robomaker", _module);
//# sourceMappingURL=index.js.map