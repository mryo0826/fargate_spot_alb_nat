"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RobotApplication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * This schema is for testing purpose only.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = "BasicRobotApplication";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = basicRobotApplication.id;
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = "BasicRobotApplicationVersion";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = basicRobotApplicationVersion.id;
 *
 * ```
 */
class RobotApplication extends pulumi.CustomResource {
    /**
     * Get an existing RobotApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new RobotApplication(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of RobotApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RobotApplication.__pulumiType;
    }
    /**
     * Create a RobotApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.robotSoftwareSuite === undefined) && !opts.urn) {
                throw new Error("Missing required property 'robotSoftwareSuite'");
            }
            resourceInputs["currentRevisionId"] = args ? args.currentRevisionId : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["robotSoftwareSuite"] = args ? args.robotSoftwareSuite : undefined;
            resourceInputs["sources"] = args ? args.sources : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["currentRevisionId"] = undefined /*out*/;
            resourceInputs["environment"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["robotSoftwareSuite"] = undefined /*out*/;
            resourceInputs["sources"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(RobotApplication.__pulumiType, name, resourceInputs, opts);
    }
}
exports.RobotApplication = RobotApplication;
/** @internal */
RobotApplication.__pulumiType = 'aws-native:robomaker:RobotApplication';
//# sourceMappingURL=robotApplication.js.map