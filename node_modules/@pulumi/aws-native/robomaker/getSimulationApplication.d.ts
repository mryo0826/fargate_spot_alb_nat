import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * This schema is for testing purpose only.
 */
export declare function getSimulationApplication(args: GetSimulationApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetSimulationApplicationResult>;
export interface GetSimulationApplicationArgs {
    /**
     * The Amazon Resource Name (ARN) of the simulation application.
     */
    arn: string;
}
export interface GetSimulationApplicationResult {
    /**
     * The Amazon Resource Name (ARN) of the simulation application.
     */
    readonly arn?: string;
    /**
     * The current revision id.
     */
    readonly currentRevisionId?: string;
    /**
     * The URI of the Docker image for the robot application.
     */
    readonly environment?: string;
    /**
     * The robot software suite used by the simulation application.
     */
    readonly robotSoftwareSuite?: outputs.robomaker.SimulationApplicationRobotSoftwareSuite;
    /**
     * The simulation software suite used by the simulation application.
     */
    readonly simulationSoftwareSuite?: outputs.robomaker.SimulationApplicationSimulationSoftwareSuite;
    /**
     * A map that contains tag keys and tag values that are attached to the simulation application.
     */
    readonly tags?: {
        [key: string]: string;
    };
}
/**
 * This schema is for testing purpose only.
 */
export declare function getSimulationApplicationOutput(args: GetSimulationApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSimulationApplicationResult>;
export interface GetSimulationApplicationOutputArgs {
    /**
     * The Amazon Resource Name (ARN) of the simulation application.
     */
    arn: pulumi.Input<string>;
}
