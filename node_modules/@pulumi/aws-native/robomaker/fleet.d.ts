import * as pulumi from "@pulumi/pulumi";
/**
 * AWS::RoboMaker::Fleet resource creates an AWS RoboMaker fleet. Fleets contain robots and can receive deployments.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicFleet = new aws_native.robomaker.Fleet("basicFleet", {
 *     name: "MyFleet",
 *     tags: {
 *         name: "BasicFleet",
 *         type: "CFN",
 *     },
 * });
 * export const fleet = "BasicFleet";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicFleet = new aws_native.robomaker.Fleet("basicFleet", {
 *     name: "MyFleet",
 *     tags: {
 *         name: "BasicFleet",
 *         type: "CFN",
 *     },
 * });
 * export const fleet = basicFleet.id;
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicFleet = new aws_native.robomaker.Fleet("basicFleet", {name: "MyFleet"});
 * const basicRobot = new aws_native.robomaker.Robot("basicRobot", {
 *     name: "MyRobot",
 *     greengrassGroupId: "51229986-abdc-4ca6-94f8-04735a0c9f07",
 *     architecture: aws_native.robomaker.RobotArchitecture.Armhf,
 *     fleet: basicFleet.arn,
 *     tags: {
 *         name: "BasicRobot",
 *         type: "CFN",
 *     },
 * });
 * export const robot = "BasicRobot";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicFleet = new aws_native.robomaker.Fleet("basicFleet", {name: "MyFleet"});
 * const basicRobot = new aws_native.robomaker.Robot("basicRobot", {
 *     name: "MyRobot",
 *     greengrassGroupId: "51229986-abdc-4ca6-94f8-04735a0c9f07",
 *     architecture: aws_native.robomaker.RobotArchitecture.Armhf,
 *     fleet: basicFleet.arn,
 *     tags: {
 *         name: "BasicRobot",
 *         type: "CFN",
 *     },
 * });
 * export const robot = basicRobot.id;
 *
 * ```
 */
export declare class Fleet extends pulumi.CustomResource {
    /**
     * Get an existing Fleet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Fleet;
    /**
     * Returns true if the given object is an instance of Fleet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Fleet;
    /**
     * The Amazon Resource Name (ARN) of the fleet, such as `arn:aws:robomaker:us-west-2:123456789012:deployment-fleet/MyFleet/1539894765711` .
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name of the fleet.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The list of all tags added to the fleet.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a Fleet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FleetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Fleet resource.
 */
export interface FleetArgs {
    /**
     * The name of the fleet.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of all tags added to the fleet.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
