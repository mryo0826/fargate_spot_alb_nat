import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * This schema is for testing purpose only.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = "BasicRobotApplication";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 *     tags: {
 *         name: "BasicRobotApplication",
 *         type: "CFN",
 *     },
 * });
 * export const robotApplication = basicRobotApplication.id;
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = "BasicRobotApplicationVersion";
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const basicRobotApplication = new aws_native.robomaker.RobotApplication("basicRobotApplication", {
 *     name: "MyRobotApplication",
 *     environment: "111122223333.dkr.ecr.us-west-2.amazonaws.com/my-robot-app:latest",
 *     robotSoftwareSuite: {
 *         name: aws_native.robomaker.RobotApplicationRobotSoftwareSuiteName.General,
 *     },
 * });
 * const basicRobotApplicationVersion = new aws_native.robomaker.RobotApplicationVersion("basicRobotApplicationVersion", {
 *     application: basicRobotApplication.arn,
 *     currentRevisionId: basicRobotApplication.currentRevisionId,
 * });
 * export const robotApplicationVersion = basicRobotApplicationVersion.id;
 *
 * ```
 */
export declare class RobotApplication extends pulumi.CustomResource {
    /**
     * Get an existing RobotApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RobotApplication;
    /**
     * Returns true if the given object is an instance of RobotApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RobotApplication;
    /**
     * The Amazon Resource Name (ARN) of the robot application.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The revision ID of robot application.
     */
    readonly currentRevisionId: pulumi.Output<string | undefined>;
    /**
     * The URI of the Docker image for the robot application.
     */
    readonly environment: pulumi.Output<string | undefined>;
    /**
     * The name of the robot application.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The robot software suite used by the robot application.
     */
    readonly robotSoftwareSuite: pulumi.Output<outputs.robomaker.RobotApplicationRobotSoftwareSuite>;
    /**
     * The sources of the robot application.
     */
    readonly sources: pulumi.Output<outputs.robomaker.RobotApplicationSourceConfig[] | undefined>;
    /**
     * A map that contains tag keys and tag values that are attached to the robot application.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Create a RobotApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RobotApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RobotApplication resource.
 */
export interface RobotApplicationArgs {
    /**
     * The revision ID of robot application.
     */
    currentRevisionId?: pulumi.Input<string>;
    /**
     * The URI of the Docker image for the robot application.
     */
    environment?: pulumi.Input<string>;
    /**
     * The name of the robot application.
     */
    name?: pulumi.Input<string>;
    /**
     * The robot software suite used by the robot application.
     */
    robotSoftwareSuite: pulumi.Input<inputs.robomaker.RobotApplicationRobotSoftwareSuiteArgs>;
    /**
     * The sources of the robot application.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.robomaker.RobotApplicationSourceConfigArgs>[]>;
    /**
     * A map that contains tag keys and tag values that are attached to the robot application.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
}
