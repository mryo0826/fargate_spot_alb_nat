import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * <p>Represents an entry point into AWS Elemental MediaPackage for an ABR video content stream sent from an upstream encoder such as AWS Elemental MediaLive. The channel continuously analyzes the content that it receives and prepares it to be distributed to consumers via one or more origin endpoints.</p>
 */
export declare function getChannel(args: GetChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetChannelResult>;
export interface GetChannelArgs {
    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    arn: string;
}
export interface GetChannelResult {
    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    readonly arn?: string;
    /**
     * <p>The date and time the channel was created.</p>
     */
    readonly createdAt?: string;
    /**
     * <p>Enter any descriptive text that helps you to identify the channel.</p>
     */
    readonly description?: string;
    readonly ingestEndpointUrls?: string[];
    /**
     * <p>The list of ingest endpoints.</p>
     */
    readonly ingestEndpoints?: outputs.mediapackagev2.ChannelIngestEndpoint[];
    /**
     * <p>The date and time the channel was modified.</p>
     */
    readonly modifiedAt?: string;
    /**
     * The tags associated with the channel.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * <p>Represents an entry point into AWS Elemental MediaPackage for an ABR video content stream sent from an upstream encoder such as AWS Elemental MediaLive. The channel continuously analyzes the content that it receives and prepares it to be distributed to consumers via one or more origin endpoints.</p>
 */
export declare function getChannelOutput(args: GetChannelOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetChannelResult>;
export interface GetChannelOutputArgs {
    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    arn: pulumi.Input<string>;
}
