import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * <p>Represents a channel group that facilitates the grouping of multiple channels.</p>
 */
export declare class ChannelGroup extends pulumi.CustomResource {
    /**
     * Get an existing ChannelGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ChannelGroup;
    /**
     * Returns true if the given object is an instance of ChannelGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ChannelGroup;
    /**
     * <p>The Amazon Resource Name (ARN) associated with the resource.</p>
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The name of the channel group.
     */
    readonly channelGroupName: pulumi.Output<string>;
    /**
     * <p>The date and time the channel group was created.</p>
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * <p>Enter any descriptive text that helps you to identify the channel group.</p>
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * <p>The output domain where the source stream should be sent. Integrate the domain with a downstream CDN (such as Amazon CloudFront) or playback device.</p>
     */
    readonly egressDomain: pulumi.Output<string>;
    /**
     * <p>The date and time the channel group was modified.</p>
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * The tags associated with the channel group.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ChannelGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ChannelGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ChannelGroup resource.
 */
export interface ChannelGroupArgs {
    /**
     * The name of the channel group.
     */
    channelGroupName?: pulumi.Input<string>;
    /**
     * <p>Enter any descriptive text that helps you to identify the channel group.</p>
     */
    description?: pulumi.Input<string>;
    /**
     * The tags associated with the channel group.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
