import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::BackupGateway::Hypervisor Resource Type
 */
export declare class Hypervisor extends pulumi.CustomResource {
    /**
     * Get an existing Hypervisor resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Hypervisor;
    /**
     * Returns true if the given object is an instance of Hypervisor.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Hypervisor;
    /**
     * The server host of the hypervisor. This can be either an IP address or a fully-qualified domain name (FQDN).
     */
    readonly host: pulumi.Output<string | undefined>;
    /**
     * Returns `HypervisorArn` , an Amazon Resource Name (ARN) that uniquely identifies a Hypervisor. For example: `arn:aws:backup-gateway:us-east-1:123456789012:hypervisor/hype-1234D67D`
     */
    readonly hypervisorArn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS Key Management Service used to encrypt the hypervisor.
     */
    readonly kmsKeyArn: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the group of gateways within the requested log.
     */
    readonly logGroupArn: pulumi.Output<string | undefined>;
    /**
     * The name of the hypervisor.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The password for the hypervisor.
     */
    readonly password: pulumi.Output<string | undefined>;
    /**
     * The tags of the hypervisor configuration to import.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * The username for the hypervisor.
     */
    readonly username: pulumi.Output<string | undefined>;
    /**
     * Create a Hypervisor resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HypervisorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Hypervisor resource.
 */
export interface HypervisorArgs {
    /**
     * The server host of the hypervisor. This can be either an IP address or a fully-qualified domain name (FQDN).
     */
    host?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the AWS Key Management Service used to encrypt the hypervisor.
     */
    kmsKeyArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the group of gateways within the requested log.
     */
    logGroupArn?: pulumi.Input<string>;
    /**
     * The name of the hypervisor.
     */
    name?: pulumi.Input<string>;
    /**
     * The password for the hypervisor.
     */
    password?: pulumi.Input<string>;
    /**
     * The tags of the hypervisor configuration to import.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
    /**
     * The username for the hypervisor.
     */
    username?: pulumi.Input<string>;
}
