"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workspace = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Definition of AWS::Grafana::Workspace Resource Type
 */
class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Workspace(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspace.__pulumiType;
    }
    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.accountAccessType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountAccessType'");
            }
            if ((!args || args.authenticationProviders === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationProviders'");
            }
            if ((!args || args.permissionType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissionType'");
            }
            resourceInputs["accountAccessType"] = args ? args.accountAccessType : undefined;
            resourceInputs["authenticationProviders"] = args ? args.authenticationProviders : undefined;
            resourceInputs["clientToken"] = args ? args.clientToken : undefined;
            resourceInputs["dataSources"] = args ? args.dataSources : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["grafanaVersion"] = args ? args.grafanaVersion : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkAccessControl"] = args ? args.networkAccessControl : undefined;
            resourceInputs["notificationDestinations"] = args ? args.notificationDestinations : undefined;
            resourceInputs["organizationRoleName"] = args ? args.organizationRoleName : undefined;
            resourceInputs["organizationalUnits"] = args ? args.organizationalUnits : undefined;
            resourceInputs["permissionType"] = args ? args.permissionType : undefined;
            resourceInputs["pluginAdminEnabled"] = args ? args.pluginAdminEnabled : undefined;
            resourceInputs["roleArn"] = args ? args.roleArn : undefined;
            resourceInputs["samlConfiguration"] = args ? args.samlConfiguration : undefined;
            resourceInputs["stackSetName"] = args ? args.stackSetName : undefined;
            resourceInputs["vpcConfiguration"] = args ? args.vpcConfiguration : undefined;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["modificationTimestamp"] = undefined /*out*/;
            resourceInputs["samlConfigurationStatus"] = undefined /*out*/;
            resourceInputs["ssoClientId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        else {
            resourceInputs["accountAccessType"] = undefined /*out*/;
            resourceInputs["authenticationProviders"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["clientToken"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["dataSources"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["endpoint"] = undefined /*out*/;
            resourceInputs["grafanaVersion"] = undefined /*out*/;
            resourceInputs["modificationTimestamp"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["networkAccessControl"] = undefined /*out*/;
            resourceInputs["notificationDestinations"] = undefined /*out*/;
            resourceInputs["organizationRoleName"] = undefined /*out*/;
            resourceInputs["organizationalUnits"] = undefined /*out*/;
            resourceInputs["permissionType"] = undefined /*out*/;
            resourceInputs["pluginAdminEnabled"] = undefined /*out*/;
            resourceInputs["roleArn"] = undefined /*out*/;
            resourceInputs["samlConfiguration"] = undefined /*out*/;
            resourceInputs["samlConfigurationStatus"] = undefined /*out*/;
            resourceInputs["ssoClientId"] = undefined /*out*/;
            resourceInputs["stackSetName"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vpcConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["clientToken"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Workspace.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Workspace = Workspace;
/** @internal */
Workspace.__pulumiType = 'aws-native:grafana:Workspace';
//# sourceMappingURL=workspace.js.map