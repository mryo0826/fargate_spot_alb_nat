import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::VerifiedPermissions::IdentitySource Resource Type
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const policyStoreId = config.require("policyStoreId");
 * const userPoolArn = config.require("userPoolArn");
 * const clientIds = config.requireObject<Array<string>>("clientIds");
 * const principalEntityType = config.require("principalEntityType");
 * const identitySource = new aws_native.verifiedpermissions.IdentitySource("identitySource", {
 *     policyStoreId: policyStoreId,
 *     configuration: {
 *         cognitoUserPoolConfiguration: {
 *             userPoolArn: userPoolArn,
 *             clientIds: clientIds,
 *         },
 *     },
 *     principalEntityType: principalEntityType,
 * });
 * export const identitySourceId = identitySource.identitySourceId;
 *
 * ```
 */
export declare class IdentitySource extends pulumi.CustomResource {
    /**
     * Get an existing IdentitySource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IdentitySource;
    /**
     * Returns true if the given object is an instance of IdentitySource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is IdentitySource;
    /**
     * Contains configuration information used when creating a new identity source.
     */
    readonly configuration: pulumi.Output<outputs.verifiedpermissions.IdentitySourceConfiguration0Properties | outputs.verifiedpermissions.IdentitySourceConfiguration1Properties>;
    readonly details: pulumi.Output<outputs.verifiedpermissions.IdentitySourceDetails>;
    /**
     * The unique ID of the new or updated identity store.
     */
    readonly identitySourceId: pulumi.Output<string>;
    /**
     * Specifies the ID of the policy store in which you want to store this identity source. Only policies and requests made using this policy store can reference identities from the identity provider configured in the new identity source.
     */
    readonly policyStoreId: pulumi.Output<string>;
    /**
     * Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
     */
    readonly principalEntityType: pulumi.Output<string | undefined>;
    /**
     * Create a IdentitySource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IdentitySourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a IdentitySource resource.
 */
export interface IdentitySourceArgs {
    /**
     * Contains configuration information used when creating a new identity source.
     */
    configuration: pulumi.Input<inputs.verifiedpermissions.IdentitySourceConfiguration0PropertiesArgs | inputs.verifiedpermissions.IdentitySourceConfiguration1PropertiesArgs>;
    /**
     * Specifies the ID of the policy store in which you want to store this identity source. Only policies and requests made using this policy store can reference identities from the identity provider configured in the new identity source.
     */
    policyStoreId: pulumi.Input<string>;
    /**
     * Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
     */
    principalEntityType?: pulumi.Input<string>;
}
