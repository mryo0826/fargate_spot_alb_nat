import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::DataBrew::Recipe.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testDataBrewRecipe = new aws_native.databrew.Recipe("testDataBrewRecipe", {
 *     name: "recipe-name",
 *     description: "This is the recipe description.",
 *     steps: [{
 *         action: {
 *             operation: "EXTRACT_PATTERN",
 *             parameters: {
 *                 sourceColumn: "Consulate",
 *                 pattern: "A",
 *                 targetColumn: "extract_pattern",
 *             },
 *         },
 *         conditionExpressions: [{
 *             condition: "LESS_THAN_EQUAL",
 *             value: "5",
 *             targetColumn: "Target",
 *         }],
 *     }],
 *     tags: [{
 *         key: "key00AtCreate",
 *         value: "value001AtCreate",
 *     }],
 * });
 *
 * ```
 */
export declare class Recipe extends pulumi.CustomResource {
    /**
     * Get an existing Recipe resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Recipe;
    /**
     * Returns true if the given object is an instance of Recipe.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Recipe;
    /**
     * Description of the recipe
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Recipe name
     */
    readonly name: pulumi.Output<string>;
    /**
     * A list of steps that are defined by the recipe.
     */
    readonly steps: pulumi.Output<outputs.databrew.RecipeStep[]>;
    /**
     * Metadata tags that have been applied to the recipe.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a Recipe resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecipeArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Recipe resource.
 */
export interface RecipeArgs {
    /**
     * Description of the recipe
     */
    description?: pulumi.Input<string>;
    /**
     * Recipe name
     */
    name?: pulumi.Input<string>;
    /**
     * A list of steps that are defined by the recipe.
     */
    steps: pulumi.Input<pulumi.Input<inputs.databrew.RecipeStepArgs>[]>;
    /**
     * Metadata tags that have been applied to the recipe.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
