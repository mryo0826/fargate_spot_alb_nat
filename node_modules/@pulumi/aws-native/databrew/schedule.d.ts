import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::DataBrew::Schedule.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testDataBrewSchedule = new aws_native.databrew.Schedule("testDataBrewSchedule", {
 *     jobNames: ["job-name"],
 *     name: "schedule-name",
 *     cronExpression: "cron(0 0/1 ? * * *)",
 *     tags: [{
 *         key: "key00AtCreate",
 *         value: "value001AtCreate",
 *     }],
 * });
 *
 * ```
 */
export declare class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Schedule;
    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Schedule;
    /**
     * Schedule cron
     */
    readonly cronExpression: pulumi.Output<string>;
    /**
     * A list of jobs to be run, according to the schedule.
     */
    readonly jobNames: pulumi.Output<string[] | undefined>;
    /**
     * Schedule Name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Metadata tags that have been applied to the schedule.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * Schedule cron
     */
    cronExpression: pulumi.Input<string>;
    /**
     * A list of jobs to be run, according to the schedule.
     */
    jobNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Schedule Name
     */
    name?: pulumi.Input<string>;
    /**
     * Metadata tags that have been applied to the schedule.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
