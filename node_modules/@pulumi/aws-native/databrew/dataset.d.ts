import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::DataBrew::Dataset.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testDataBrewDataset = new aws_native.databrew.Dataset("testDataBrewDataset", {
 *     name: "cf-test-dataset1",
 *     input: {
 *         s3InputDefinition: {
 *             bucket: "test-location",
 *             key: "test.xlsx",
 *         },
 *     },
 *     formatOptions: {
 *         excel: {
 *             sheetNames: ["test"],
 *         },
 *     },
 *     tags: [{
 *         key: "key00AtCreate",
 *         value: "value001AtCreate",
 *     }],
 * });
 *
 * ```
 */
export declare class Dataset extends pulumi.CustomResource {
    /**
     * Get an existing Dataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Dataset;
    /**
     * Returns true if the given object is an instance of Dataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Dataset;
    /**
     * Dataset format
     */
    readonly format: pulumi.Output<enums.databrew.DatasetFormat | undefined>;
    /**
     * Format options for dataset
     */
    readonly formatOptions: pulumi.Output<outputs.databrew.DatasetFormatOptions | undefined>;
    /**
     * Input
     */
    readonly input: pulumi.Output<outputs.databrew.DatasetInput>;
    /**
     * Dataset name
     */
    readonly name: pulumi.Output<string>;
    /**
     * PathOptions
     */
    readonly pathOptions: pulumi.Output<outputs.databrew.DatasetPathOptions | undefined>;
    /**
     * Source type of the dataset
     */
    readonly source: pulumi.Output<enums.databrew.DatasetSource | undefined>;
    /**
     * Metadata tags that have been applied to the dataset.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Create a Dataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Dataset resource.
 */
export interface DatasetArgs {
    /**
     * Dataset format
     */
    format?: pulumi.Input<enums.databrew.DatasetFormat>;
    /**
     * Format options for dataset
     */
    formatOptions?: pulumi.Input<inputs.databrew.DatasetFormatOptionsArgs>;
    /**
     * Input
     */
    input: pulumi.Input<inputs.databrew.DatasetInputArgs>;
    /**
     * Dataset name
     */
    name?: pulumi.Input<string>;
    /**
     * PathOptions
     */
    pathOptions?: pulumi.Input<inputs.databrew.DatasetPathOptionsArgs>;
    /**
     * Source type of the dataset
     */
    source?: pulumi.Input<enums.databrew.DatasetSource>;
    /**
     * Metadata tags that have been applied to the dataset.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
}
