import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::DataBrew::Job.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myDataBrewProfileJob = new aws_native.databrew.Job("myDataBrewProfileJob", {
 *     type: aws_native.databrew.JobType.Profile,
 *     name: "job-test",
 *     datasetName: "dataset-test",
 *     roleArn: "arn:aws:iam::1234567891011:role/PassRoleAdmin",
 *     jobSample: {
 *         mode: aws_native.databrew.JobSampleMode.FullDataset,
 *     },
 *     outputLocation: {
 *         bucket: "test-output",
 *         key: "job-output.json",
 *     },
 *     tags: [{
 *         key: "key00AtCreate",
 *         value: "value001AtCreate",
 *     }],
 * });
 *
 * ```
 */
export declare class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job;
    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Job;
    /**
     * One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
     */
    readonly dataCatalogOutputs: pulumi.Output<outputs.databrew.JobDataCatalogOutput[] | undefined>;
    /**
     * Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
     */
    readonly databaseOutputs: pulumi.Output<outputs.databrew.JobDatabaseOutput[] | undefined>;
    /**
     * Dataset name
     */
    readonly datasetName: pulumi.Output<string | undefined>;
    /**
     * Encryption Key Arn
     */
    readonly encryptionKeyArn: pulumi.Output<string | undefined>;
    /**
     * Encryption mode
     */
    readonly encryptionMode: pulumi.Output<enums.databrew.JobEncryptionMode | undefined>;
    /**
     * Job Sample
     */
    readonly jobSample: pulumi.Output<outputs.databrew.JobSample | undefined>;
    /**
     * Log subscription
     */
    readonly logSubscription: pulumi.Output<enums.databrew.JobLogSubscription | undefined>;
    /**
     * Max capacity
     */
    readonly maxCapacity: pulumi.Output<number | undefined>;
    /**
     * Max retries
     */
    readonly maxRetries: pulumi.Output<number | undefined>;
    /**
     * Job name
     */
    readonly name: pulumi.Output<string>;
    /**
     * Output location
     */
    readonly outputLocation: pulumi.Output<outputs.databrew.JobOutputLocation | undefined>;
    /**
     * One or more artifacts that represent output from running the job.
     */
    readonly outputs: pulumi.Output<outputs.databrew.JobOutput[] | undefined>;
    /**
     * Profile Job configuration
     */
    readonly profileConfiguration: pulumi.Output<outputs.databrew.JobProfileConfiguration | undefined>;
    /**
     * Project name
     */
    readonly projectName: pulumi.Output<string | undefined>;
    /**
     * A series of data transformation steps that the job runs.
     */
    readonly recipe: pulumi.Output<outputs.databrew.JobRecipe | undefined>;
    /**
     * Role arn
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * Metadata tags that have been applied to the job.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * Timeout
     */
    readonly timeout: pulumi.Output<number | undefined>;
    /**
     * Job type
     */
    readonly type: pulumi.Output<enums.databrew.JobType>;
    /**
     * Data quality rules configuration
     */
    readonly validationConfigurations: pulumi.Output<outputs.databrew.JobValidationConfiguration[] | undefined>;
    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
     */
    dataCatalogOutputs?: pulumi.Input<pulumi.Input<inputs.databrew.JobDataCatalogOutputArgs>[]>;
    /**
     * Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
     */
    databaseOutputs?: pulumi.Input<pulumi.Input<inputs.databrew.JobDatabaseOutputArgs>[]>;
    /**
     * Dataset name
     */
    datasetName?: pulumi.Input<string>;
    /**
     * Encryption Key Arn
     */
    encryptionKeyArn?: pulumi.Input<string>;
    /**
     * Encryption mode
     */
    encryptionMode?: pulumi.Input<enums.databrew.JobEncryptionMode>;
    /**
     * Job Sample
     */
    jobSample?: pulumi.Input<inputs.databrew.JobSampleArgs>;
    /**
     * Log subscription
     */
    logSubscription?: pulumi.Input<enums.databrew.JobLogSubscription>;
    /**
     * Max capacity
     */
    maxCapacity?: pulumi.Input<number>;
    /**
     * Max retries
     */
    maxRetries?: pulumi.Input<number>;
    /**
     * Job name
     */
    name?: pulumi.Input<string>;
    /**
     * Output location
     */
    outputLocation?: pulumi.Input<inputs.databrew.JobOutputLocationArgs>;
    /**
     * One or more artifacts that represent output from running the job.
     */
    outputs?: pulumi.Input<pulumi.Input<inputs.databrew.JobOutputArgs>[]>;
    /**
     * Profile Job configuration
     */
    profileConfiguration?: pulumi.Input<inputs.databrew.JobProfileConfigurationArgs>;
    /**
     * Project name
     */
    projectName?: pulumi.Input<string>;
    /**
     * A series of data transformation steps that the job runs.
     */
    recipe?: pulumi.Input<inputs.databrew.JobRecipeArgs>;
    /**
     * Role arn
     */
    roleArn: pulumi.Input<string>;
    /**
     * Metadata tags that have been applied to the job.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
    /**
     * Timeout
     */
    timeout?: pulumi.Input<number>;
    /**
     * Job type
     */
    type: pulumi.Input<enums.databrew.JobType>;
    /**
     * Data quality rules configuration
     */
    validationConfigurations?: pulumi.Input<pulumi.Input<inputs.databrew.JobValidationConfigurationArgs>[]>;
}
