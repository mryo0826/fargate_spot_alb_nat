import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * HealthLake FHIR Datastore
 */
export declare class FhirDatastore extends pulumi.CustomResource {
    /**
     * Get an existing FhirDatastore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): FhirDatastore;
    /**
     * Returns true if the given object is an instance of FhirDatastore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FhirDatastore;
    readonly createdAt: pulumi.Output<outputs.healthlake.FhirDatastoreCreatedAt>;
    /**
     * The Data Store ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation request.
     */
    readonly datastoreArn: pulumi.Output<string>;
    /**
     * The endpoint for the created Data Store.
     */
    readonly datastoreEndpoint: pulumi.Output<string>;
    /**
     * The Amazon generated Data Store id. This id is in the output from the initial Data Store creation call.
     */
    readonly datastoreId: pulumi.Output<string>;
    /**
     * The user generated name for the data store.
     */
    readonly datastoreName: pulumi.Output<string | undefined>;
    /**
     * The status of the FHIR Data Store. Possible statuses are ‘CREATING’, ‘ACTIVE’, ‘DELETING’, ‘DELETED’.
     */
    readonly datastoreStatus: pulumi.Output<enums.healthlake.FhirDatastoreDatastoreStatus>;
    /**
     * The FHIR version of the data store. The only supported version is R4.
     */
    readonly datastoreTypeVersion: pulumi.Output<enums.healthlake.FhirDatastoreDatastoreTypeVersion>;
    /**
     * The identity provider configuration that you gave when the data store was created.
     */
    readonly identityProviderConfiguration: pulumi.Output<outputs.healthlake.FhirDatastoreIdentityProviderConfiguration | undefined>;
    /**
     * The preloaded data configuration for the data store. Only data preloaded from Synthea is supported.
     */
    readonly preloadDataConfig: pulumi.Output<outputs.healthlake.FhirDatastorePreloadDataConfig | undefined>;
    /**
     * The server-side encryption key configuration for a customer provided encryption key specified for creating a data store.
     */
    readonly sseConfiguration: pulumi.Output<outputs.healthlake.FhirDatastoreSseConfiguration | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a FhirDatastore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FhirDatastoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a FhirDatastore resource.
 */
export interface FhirDatastoreArgs {
    /**
     * The user generated name for the data store.
     */
    datastoreName?: pulumi.Input<string>;
    /**
     * The FHIR version of the data store. The only supported version is R4.
     */
    datastoreTypeVersion: pulumi.Input<enums.healthlake.FhirDatastoreDatastoreTypeVersion>;
    /**
     * The identity provider configuration that you gave when the data store was created.
     */
    identityProviderConfiguration?: pulumi.Input<inputs.healthlake.FhirDatastoreIdentityProviderConfigurationArgs>;
    /**
     * The preloaded data configuration for the data store. Only data preloaded from Synthea is supported.
     */
    preloadDataConfig?: pulumi.Input<inputs.healthlake.FhirDatastorePreloadDataConfigArgs>;
    /**
     * The server-side encryption key configuration for a customer provided encryption key specified for creating a data store.
     */
    sseConfiguration?: pulumi.Input<inputs.healthlake.FhirDatastoreSseConfigurationArgs>;
    /**
     * An array of key-value pairs to apply to this resource.
     *
     * For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
