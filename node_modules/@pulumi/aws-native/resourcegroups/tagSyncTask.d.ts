import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Schema for ResourceGroups::TagSyncTask
 */
export declare class TagSyncTask extends pulumi.CustomResource {
    /**
     * Get an existing TagSyncTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TagSyncTask;
    /**
     * Returns true if the given object is an instance of TagSyncTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TagSyncTask;
    /**
     * The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
     */
    readonly group: pulumi.Output<string>;
    /**
     * The Amazon resource name (ARN) of the ApplicationGroup for which the TagSyncTask is created
     */
    readonly groupArn: pulumi.Output<string>;
    /**
     * The Name of the application group for which the TagSyncTask is created
     */
    readonly groupName: pulumi.Output<string>;
    /**
     * The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
     */
    readonly roleArn: pulumi.Output<string>;
    /**
     * The status of the TagSyncTask
     */
    readonly status: pulumi.Output<enums.resourcegroups.TagSyncTaskStatus>;
    /**
     * The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    readonly tagKey: pulumi.Output<string>;
    /**
     * The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    readonly tagValue: pulumi.Output<string>;
    /**
     * The ARN of the TagSyncTask resource
     */
    readonly taskArn: pulumi.Output<string>;
    /**
     * Create a TagSyncTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagSyncTaskArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a TagSyncTask resource.
 */
export interface TagSyncTaskArgs {
    /**
     * The Amazon resource name (ARN) or name of the application group for which you want to create a tag-sync task
     */
    group: pulumi.Input<string>;
    /**
     * The Amazon resource name (ARN) of the role assumed by the service to tag and untag resources on your behalf.
     */
    roleArn: pulumi.Input<string>;
    /**
     * The tag key. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    tagKey: pulumi.Input<string>;
    /**
     * The tag value. Resources tagged with this tag key-value pair will be added to the application. If a resource with this tag is later untagged, the tag-sync task removes the resource from the application.
     */
    tagValue: pulumi.Input<string>;
}
