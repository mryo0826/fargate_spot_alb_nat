"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegistryPolicyOutput = exports.getRegistryPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * The ``AWS::ECR::RegistryPolicy`` resource creates or updates the permissions policy for a private registry.
 *  A private registry policy is used to specify permissions for another AWS-account and is used when configuring cross-account replication. For more information, see [Registry permissions](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the *Amazon Elastic Container Registry User Guide*.
 */
function getRegistryPolicy(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("aws-native:ecr:getRegistryPolicy", {
        "registryId": args.registryId,
    }, opts);
}
exports.getRegistryPolicy = getRegistryPolicy;
/**
 * The ``AWS::ECR::RegistryPolicy`` resource creates or updates the permissions policy for a private registry.
 *  A private registry policy is used to specify permissions for another AWS-account and is used when configuring cross-account replication. For more information, see [Registry permissions](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the *Amazon Elastic Container Registry User Guide*.
 */
function getRegistryPolicyOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("aws-native:ecr:getRegistryPolicy", {
        "registryId": args.registryId,
    }, opts);
}
exports.getRegistryPolicyOutput = getRegistryPolicyOutput;
//# sourceMappingURL=getRegistryPolicy.js.map