import * as pulumi from "@pulumi/pulumi";
/**
 * The ``AWS::ECR::RegistryPolicy`` resource creates or updates the permissions policy for a private registry.
 *  A private registry policy is used to specify permissions for another AWS-account and is used when configuring cross-account replication. For more information, see [Registry permissions](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the *Amazon Elastic Container Registry User Guide*.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const testRegistryPolicy = new aws_native.ecr.RegistryPolicy("testRegistryPolicy", {policyText: {
 *     version: "2012-10-17",
 *     statement: [{
 *         sid: "UpdatedRegistryPolicy",
 *         effect: "Allow",
 *         principal: {
 *             aws: "arn:aws:iam::210987654321:root",
 *         },
 *         action: [
 *             "ecr:CreateRepository",
 *             "ecr:ReplicateImage",
 *         ],
 *         resource: "arn:aws:ecr:us-west-2:123456789012:repository/*",
 *     }],
 * }});
 *
 * ```
 */
export declare class RegistryPolicy extends pulumi.CustomResource {
    /**
     * Get an existing RegistryPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RegistryPolicy;
    /**
     * Returns true if the given object is an instance of RegistryPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RegistryPolicy;
    /**
     * The JSON policy text for your registry.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ECR::RegistryPolicy` for more information about the expected schema for this property.
     */
    readonly policyText: pulumi.Output<any>;
    /**
     * The account ID of the private registry the policy is associated with.
     */
    readonly registryId: pulumi.Output<string>;
    /**
     * Create a RegistryPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RegistryPolicy resource.
 */
export interface RegistryPolicyArgs {
    /**
     * The JSON policy text for your registry.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ECR::RegistryPolicy` for more information about the expected schema for this property.
     */
    policyText: any;
}
