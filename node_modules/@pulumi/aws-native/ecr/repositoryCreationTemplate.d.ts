import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * AWS::ECR::RepositoryCreationTemplate is used to create repository with configuration from a pre-defined template.
 */
export declare class RepositoryCreationTemplate extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryCreationTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RepositoryCreationTemplate;
    /**
     * Returns true if the given object is an instance of RepositoryCreationTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryCreationTemplate;
    /**
     * A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
     */
    readonly appliedFor: pulumi.Output<enums.ecr.RepositoryCreationTemplateAppliedForItem[]>;
    /**
     * Create timestamp of the template.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * The ARN of the role to be assumed by ECR. This role must be in the same account as the registry that you are configuring.
     */
    readonly customRoleArn: pulumi.Output<string | undefined>;
    /**
     * The description of the template.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The encryption configuration associated with the repository creation template.
     */
    readonly encryptionConfiguration: pulumi.Output<outputs.ecr.RepositoryCreationTemplateEncryptionConfiguration | undefined>;
    /**
     * The image tag mutability setting for the repository.
     */
    readonly imageTagMutability: pulumi.Output<enums.ecr.RepositoryCreationTemplateImageTagMutability | undefined>;
    /**
     * The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
     */
    readonly lifecyclePolicy: pulumi.Output<string | undefined>;
    /**
     * The prefix use to match the repository name and apply the template.
     */
    readonly prefix: pulumi.Output<string>;
    /**
     * The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
     */
    readonly repositoryPolicy: pulumi.Output<string | undefined>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    readonly resourceTags: pulumi.Output<outputs.ecr.RepositoryCreationTemplateTag[] | undefined>;
    /**
     * Update timestamp of the template.
     */
    readonly updatedAt: pulumi.Output<string>;
    /**
     * Create a RepositoryCreationTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryCreationTemplateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a RepositoryCreationTemplate resource.
 */
export interface RepositoryCreationTemplateArgs {
    /**
     * A list of enumerable Strings representing the repository creation scenarios that the template will apply towards.
     */
    appliedFor: pulumi.Input<pulumi.Input<enums.ecr.RepositoryCreationTemplateAppliedForItem>[]>;
    /**
     * The ARN of the role to be assumed by ECR. This role must be in the same account as the registry that you are configuring.
     */
    customRoleArn?: pulumi.Input<string>;
    /**
     * The description of the template.
     */
    description?: pulumi.Input<string>;
    /**
     * The encryption configuration associated with the repository creation template.
     */
    encryptionConfiguration?: pulumi.Input<inputs.ecr.RepositoryCreationTemplateEncryptionConfigurationArgs>;
    /**
     * The image tag mutability setting for the repository.
     */
    imageTagMutability?: pulumi.Input<enums.ecr.RepositoryCreationTemplateImageTagMutability>;
    /**
     * The JSON lifecycle policy text to apply to the repository. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
     */
    lifecyclePolicy?: pulumi.Input<string>;
    /**
     * The prefix use to match the repository name and apply the template.
     */
    prefix: pulumi.Input<string>;
    /**
     * The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html
     */
    repositoryPolicy?: pulumi.Input<string>;
    /**
     * An array of key-value pairs to apply to this resource.
     */
    resourceTags?: pulumi.Input<pulumi.Input<inputs.ecr.RepositoryCreationTemplateTagArgs>[]>;
}
