import * as pulumi from "@pulumi/pulumi";
/**
 * The AWS::ECR::PullThroughCacheRule resource configures the upstream registry configuration details for an Amazon Elastic Container Registry (Amazon Private ECR) pull-through cache.
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myECRPullThroughCacheRule = new aws_native.ecr.PullThroughCacheRule("myECRPullThroughCacheRule", {
 *     ecrRepositoryPrefix: "my-ecr",
 *     upstreamRegistryUrl: "public.ecr.aws",
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myECRPullThroughCacheRule = new aws_native.ecr.PullThroughCacheRule("myECRPullThroughCacheRule", {
 *     ecrRepositoryPrefix: "my-ecr",
 *     upstreamRegistryUrl: "public.ecr.aws",
 * });
 *
 * ```
 */
export declare class PullThroughCacheRule extends pulumi.CustomResource {
    /**
     * Get an existing PullThroughCacheRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PullThroughCacheRule;
    /**
     * Returns true if the given object is an instance of PullThroughCacheRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is PullThroughCacheRule;
    /**
     * The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that identifies the credentials to authenticate to the upstream registry.
     */
    readonly credentialArn: pulumi.Output<string | undefined>;
    /**
     * The ECRRepositoryPrefix is a custom alias for upstream registry url.
     */
    readonly ecrRepositoryPrefix: pulumi.Output<string | undefined>;
    /**
     * The name of the upstream registry.
     */
    readonly upstreamRegistry: pulumi.Output<string | undefined>;
    /**
     * The upstreamRegistryUrl is the endpoint of upstream registry url of the public repository to be cached
     */
    readonly upstreamRegistryUrl: pulumi.Output<string | undefined>;
    /**
     * Create a PullThroughCacheRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PullThroughCacheRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a PullThroughCacheRule resource.
 */
export interface PullThroughCacheRuleArgs {
    /**
     * The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that identifies the credentials to authenticate to the upstream registry.
     */
    credentialArn?: pulumi.Input<string>;
    /**
     * The ECRRepositoryPrefix is a custom alias for upstream registry url.
     */
    ecrRepositoryPrefix?: pulumi.Input<string>;
    /**
     * The name of the upstream registry.
     */
    upstreamRegistry?: pulumi.Input<string>;
    /**
     * The upstreamRegistryUrl is the endpoint of upstream registry url of the public repository to be cached
     */
    upstreamRegistryUrl?: pulumi.Input<string>;
}
