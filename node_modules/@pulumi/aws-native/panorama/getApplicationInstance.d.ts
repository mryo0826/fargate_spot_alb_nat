import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Creates an application instance and deploys it to a device.
 */
export declare function getApplicationInstance(args: GetApplicationInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationInstanceResult>;
export interface GetApplicationInstanceArgs {
    /**
     * The application instance's ID.
     */
    applicationInstanceId: string;
}
export interface GetApplicationInstanceResult {
    /**
     * The application instance's ID.
     */
    readonly applicationInstanceId?: string;
    /**
     * The application instance's ARN.
     */
    readonly arn?: string;
    /**
     * The application instance's created time.
     */
    readonly createdTime?: number;
    /**
     * The application instance's default runtime context device name.
     */
    readonly defaultRuntimeContextDeviceName?: string;
    /**
     * The application instance's health status.
     */
    readonly healthStatus?: enums.panorama.ApplicationInstanceHealthStatus;
    /**
     * The application instance's last updated time.
     */
    readonly lastUpdatedTime?: number;
    /**
     * The application instance's status.
     */
    readonly status?: enums.panorama.ApplicationInstanceStatus;
    /**
     * The application instance's status description.
     */
    readonly statusDescription?: string;
    /**
     * Tags for the application instance.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Creates an application instance and deploys it to a device.
 */
export declare function getApplicationInstanceOutput(args: GetApplicationInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationInstanceResult>;
export interface GetApplicationInstanceOutputArgs {
    /**
     * The application instance's ID.
     */
    applicationInstanceId: pulumi.Input<string>;
}
