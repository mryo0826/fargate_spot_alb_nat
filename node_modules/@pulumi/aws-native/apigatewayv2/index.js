"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcLink = exports.RouteResponse = exports.Route = exports.Model = exports.IntegrationResponse = exports.Integration = exports.getVpcLinkOutput = exports.getVpcLink = exports.getRouteResponseOutput = exports.getRouteResponse = exports.getRouteOutput = exports.getRoute = exports.getModelOutput = exports.getModel = exports.getIntegrationResponseOutput = exports.getIntegrationResponse = exports.getIntegrationOutput = exports.getIntegration = exports.getDomainNameOutput = exports.getDomainName = exports.getDeploymentOutput = exports.getDeployment = exports.getAuthorizerOutput = exports.getAuthorizer = exports.getApiMappingOutput = exports.getApiMapping = exports.getApiOutput = exports.getApi = exports.DomainName = exports.Deployment = exports.Authorizer = exports.ApiMapping = exports.Api = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Api = null;
utilities.lazyLoad(exports, ["Api"], () => require("./api"));
exports.ApiMapping = null;
utilities.lazyLoad(exports, ["ApiMapping"], () => require("./apiMapping"));
exports.Authorizer = null;
utilities.lazyLoad(exports, ["Authorizer"], () => require("./authorizer"));
exports.Deployment = null;
utilities.lazyLoad(exports, ["Deployment"], () => require("./deployment"));
exports.DomainName = null;
utilities.lazyLoad(exports, ["DomainName"], () => require("./domainName"));
exports.getApi = null;
exports.getApiOutput = null;
utilities.lazyLoad(exports, ["getApi", "getApiOutput"], () => require("./getApi"));
exports.getApiMapping = null;
exports.getApiMappingOutput = null;
utilities.lazyLoad(exports, ["getApiMapping", "getApiMappingOutput"], () => require("./getApiMapping"));
exports.getAuthorizer = null;
exports.getAuthorizerOutput = null;
utilities.lazyLoad(exports, ["getAuthorizer", "getAuthorizerOutput"], () => require("./getAuthorizer"));
exports.getDeployment = null;
exports.getDeploymentOutput = null;
utilities.lazyLoad(exports, ["getDeployment", "getDeploymentOutput"], () => require("./getDeployment"));
exports.getDomainName = null;
exports.getDomainNameOutput = null;
utilities.lazyLoad(exports, ["getDomainName", "getDomainNameOutput"], () => require("./getDomainName"));
exports.getIntegration = null;
exports.getIntegrationOutput = null;
utilities.lazyLoad(exports, ["getIntegration", "getIntegrationOutput"], () => require("./getIntegration"));
exports.getIntegrationResponse = null;
exports.getIntegrationResponseOutput = null;
utilities.lazyLoad(exports, ["getIntegrationResponse", "getIntegrationResponseOutput"], () => require("./getIntegrationResponse"));
exports.getModel = null;
exports.getModelOutput = null;
utilities.lazyLoad(exports, ["getModel", "getModelOutput"], () => require("./getModel"));
exports.getRoute = null;
exports.getRouteOutput = null;
utilities.lazyLoad(exports, ["getRoute", "getRouteOutput"], () => require("./getRoute"));
exports.getRouteResponse = null;
exports.getRouteResponseOutput = null;
utilities.lazyLoad(exports, ["getRouteResponse", "getRouteResponseOutput"], () => require("./getRouteResponse"));
exports.getVpcLink = null;
exports.getVpcLinkOutput = null;
utilities.lazyLoad(exports, ["getVpcLink", "getVpcLinkOutput"], () => require("./getVpcLink"));
exports.Integration = null;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));
exports.IntegrationResponse = null;
utilities.lazyLoad(exports, ["IntegrationResponse"], () => require("./integrationResponse"));
exports.Model = null;
utilities.lazyLoad(exports, ["Model"], () => require("./model"));
exports.Route = null;
utilities.lazyLoad(exports, ["Route"], () => require("./route"));
exports.RouteResponse = null;
utilities.lazyLoad(exports, ["RouteResponse"], () => require("./routeResponse"));
exports.VpcLink = null;
utilities.lazyLoad(exports, ["VpcLink"], () => require("./vpcLink"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:apigatewayv2:Api":
                return new exports.Api(name, undefined, { urn });
            case "aws-native:apigatewayv2:ApiMapping":
                return new exports.ApiMapping(name, undefined, { urn });
            case "aws-native:apigatewayv2:Authorizer":
                return new exports.Authorizer(name, undefined, { urn });
            case "aws-native:apigatewayv2:Deployment":
                return new exports.Deployment(name, undefined, { urn });
            case "aws-native:apigatewayv2:DomainName":
                return new exports.DomainName(name, undefined, { urn });
            case "aws-native:apigatewayv2:Integration":
                return new exports.Integration(name, undefined, { urn });
            case "aws-native:apigatewayv2:IntegrationResponse":
                return new exports.IntegrationResponse(name, undefined, { urn });
            case "aws-native:apigatewayv2:Model":
                return new exports.Model(name, undefined, { urn });
            case "aws-native:apigatewayv2:Route":
                return new exports.Route(name, undefined, { urn });
            case "aws-native:apigatewayv2:RouteResponse":
                return new exports.RouteResponse(name, undefined, { urn });
            case "aws-native:apigatewayv2:VpcLink":
                return new exports.VpcLink(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "apigatewayv2", _module);
//# sourceMappingURL=index.js.map