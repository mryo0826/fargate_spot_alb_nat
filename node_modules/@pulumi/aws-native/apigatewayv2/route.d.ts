import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The ``AWS::ApiGatewayV2::Route`` resource creates a route for an API.
 */
export declare class Route extends pulumi.CustomResource {
    /**
     * Get an existing Route resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Route;
    /**
     * Returns true if the given object is an instance of Route.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Route;
    /**
     * The API identifier.
     */
    readonly apiId: pulumi.Output<string>;
    /**
     * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
     */
    readonly apiKeyRequired: pulumi.Output<boolean | undefined>;
    /**
     * The authorization scopes supported by this route.
     */
    readonly authorizationScopes: pulumi.Output<string[] | undefined>;
    /**
     * The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer.
     */
    readonly authorizationType: pulumi.Output<string | undefined>;
    /**
     * The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.
     */
    readonly authorizerId: pulumi.Output<string | undefined>;
    /**
     * The model selection expression for the route. Supported only for WebSocket APIs.
     */
    readonly modelSelectionExpression: pulumi.Output<string | undefined>;
    /**
     * The operation name for the route.
     */
    readonly operationName: pulumi.Output<string | undefined>;
    /**
     * The request models for the route. Supported only for WebSocket APIs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::Route` for more information about the expected schema for this property.
     */
    readonly requestModels: pulumi.Output<any | undefined>;
    /**
     * The request parameters for the route. Supported only for WebSocket APIs.
     */
    readonly requestParameters: pulumi.Output<outputs.apigatewayv2.RouteParameterConstraints[] | undefined>;
    /**
     * The route ID.
     */
    readonly routeId: pulumi.Output<string>;
    /**
     * The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``.
     */
    readonly routeKey: pulumi.Output<string>;
    /**
     * The route response selection expression for the route. Supported only for WebSocket APIs.
     */
    readonly routeResponseSelectionExpression: pulumi.Output<string | undefined>;
    /**
     * The target for the route.
     */
    readonly target: pulumi.Output<string | undefined>;
    /**
     * Create a Route resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Route resource.
 */
export interface RouteArgs {
    /**
     * The API identifier.
     */
    apiId: pulumi.Input<string>;
    /**
     * Specifies whether an API key is required for the route. Supported only for WebSocket APIs.
     */
    apiKeyRequired?: pulumi.Input<boolean>;
    /**
     * The authorization scopes supported by this route.
     */
    authorizationScopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer.
     */
    authorizationType?: pulumi.Input<string>;
    /**
     * The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.
     */
    authorizerId?: pulumi.Input<string>;
    /**
     * The model selection expression for the route. Supported only for WebSocket APIs.
     */
    modelSelectionExpression?: pulumi.Input<string>;
    /**
     * The operation name for the route.
     */
    operationName?: pulumi.Input<string>;
    /**
     * The request models for the route. Supported only for WebSocket APIs.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ApiGatewayV2::Route` for more information about the expected schema for this property.
     */
    requestModels?: any;
    /**
     * The request parameters for the route. Supported only for WebSocket APIs.
     */
    requestParameters?: pulumi.Input<pulumi.Input<inputs.apigatewayv2.RouteParameterConstraintsArgs>[]>;
    /**
     * The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``.
     */
    routeKey: pulumi.Input<string>;
    /**
     * The route response selection expression for the route. Supported only for WebSocket APIs.
     */
    routeResponseSelectionExpression?: pulumi.Input<string>;
    /**
     * The target for the route.
     */
    target?: pulumi.Input<string>;
}
