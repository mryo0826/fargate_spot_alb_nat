import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The AWS::AppRunner::ObservabilityConfiguration resource  is an AWS App Runner resource type that specifies an App Runner observability configuration
 */
export declare class ObservabilityConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing ObservabilityConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ObservabilityConfiguration;
    /**
     * Returns true if the given object is an instance of ObservabilityConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ObservabilityConfiguration;
    /**
     * It's set to true for the configuration with the highest Revision among all configurations that share the same Name. It's set to false otherwise.
     */
    readonly latest: pulumi.Output<boolean>;
    /**
     * The Amazon Resource Name (ARN) of this ObservabilityConfiguration
     */
    readonly observabilityConfigurationArn: pulumi.Output<string>;
    /**
     * A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.
     */
    readonly observabilityConfigurationName: pulumi.Output<string | undefined>;
    /**
     * The revision of this observability configuration. It's unique among all the active configurations ('Status': 'ACTIVE') that share the same ObservabilityConfigurationName.
     */
    readonly observabilityConfigurationRevision: pulumi.Output<number>;
    /**
     * A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.
     */
    readonly tags: pulumi.Output<outputs.CreateOnlyTag[] | undefined>;
    /**
     * The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.
     */
    readonly traceConfiguration: pulumi.Output<outputs.apprunner.ObservabilityConfigurationTraceConfiguration | undefined>;
    /**
     * Create a ObservabilityConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ObservabilityConfigurationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ObservabilityConfiguration resource.
 */
export interface ObservabilityConfigurationArgs {
    /**
     * A name for the observability configuration. When you use it for the first time in an AWS Region, App Runner creates revision number 1 of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.
     */
    observabilityConfigurationName?: pulumi.Input<string>;
    /**
     * A list of metadata items that you can associate with your observability configuration resource. A tag is a key-value pair.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CreateOnlyTagArgs>[]>;
    /**
     * The configuration of the tracing feature within this observability configuration. If you don't specify it, App Runner doesn't enable tracing.
     */
    traceConfiguration?: pulumi.Input<inputs.apprunner.ObservabilityConfigurationTraceConfigurationArgs>;
}
