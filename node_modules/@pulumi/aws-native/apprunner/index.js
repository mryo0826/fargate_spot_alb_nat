"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VpcIngressConnection = exports.VpcConnector = exports.Service = exports.ObservabilityConfiguration = exports.getVpcIngressConnectionOutput = exports.getVpcIngressConnection = exports.getVpcConnectorOutput = exports.getVpcConnector = exports.getServiceOutput = exports.getService = exports.getObservabilityConfigurationOutput = exports.getObservabilityConfiguration = exports.getAutoScalingConfigurationOutput = exports.getAutoScalingConfiguration = exports.AutoScalingConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AutoScalingConfiguration = null;
utilities.lazyLoad(exports, ["AutoScalingConfiguration"], () => require("./autoScalingConfiguration"));
exports.getAutoScalingConfiguration = null;
exports.getAutoScalingConfigurationOutput = null;
utilities.lazyLoad(exports, ["getAutoScalingConfiguration", "getAutoScalingConfigurationOutput"], () => require("./getAutoScalingConfiguration"));
exports.getObservabilityConfiguration = null;
exports.getObservabilityConfigurationOutput = null;
utilities.lazyLoad(exports, ["getObservabilityConfiguration", "getObservabilityConfigurationOutput"], () => require("./getObservabilityConfiguration"));
exports.getService = null;
exports.getServiceOutput = null;
utilities.lazyLoad(exports, ["getService", "getServiceOutput"], () => require("./getService"));
exports.getVpcConnector = null;
exports.getVpcConnectorOutput = null;
utilities.lazyLoad(exports, ["getVpcConnector", "getVpcConnectorOutput"], () => require("./getVpcConnector"));
exports.getVpcIngressConnection = null;
exports.getVpcIngressConnectionOutput = null;
utilities.lazyLoad(exports, ["getVpcIngressConnection", "getVpcIngressConnectionOutput"], () => require("./getVpcIngressConnection"));
exports.ObservabilityConfiguration = null;
utilities.lazyLoad(exports, ["ObservabilityConfiguration"], () => require("./observabilityConfiguration"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
exports.VpcConnector = null;
utilities.lazyLoad(exports, ["VpcConnector"], () => require("./vpcConnector"));
exports.VpcIngressConnection = null;
utilities.lazyLoad(exports, ["VpcIngressConnection"], () => require("./vpcIngressConnection"));
// Export enums:
__exportStar(require("../types/enums/apprunner"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:apprunner:AutoScalingConfiguration":
                return new exports.AutoScalingConfiguration(name, undefined, { urn });
            case "aws-native:apprunner:ObservabilityConfiguration":
                return new exports.ObservabilityConfiguration(name, undefined, { urn });
            case "aws-native:apprunner:Service":
                return new exports.Service(name, undefined, { urn });
            case "aws-native:apprunner:VpcConnector":
                return new exports.VpcConnector(name, undefined, { urn });
            case "aws-native:apprunner:VpcIngressConnection":
                return new exports.VpcIngressConnection(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "apprunner", _module);
//# sourceMappingURL=index.js.map