import * as pulumi from "@pulumi/pulumi";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::ImageBuilder::Component
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const componentAllParameters = new aws_native.imagebuilder.Component("componentAllParameters", {
 *     name: "component-name",
 *     platform: aws_native.imagebuilder.ComponentPlatform.Linux,
 *     version: "1.0.0",
 *     description: "description",
 *     changeDescription: "change-description",
 *     kmsKeyId: "customer-kms-key-id",
 *     supportedOsVersions: ["Amazon Linux 2"],
 *     tags: {
 *         customerComponentTagKey1: "CustomerComponentTagValue1",
 *         customerComponentTagKey2: "CustomerComponentTagValue2",
 *     },
 *     data: `name: HelloWorldTestingLinuxDoc - InlineData
 * description: This is hello world testing doc
 * schemaVersion: 1.0
 *
 * phases:
 *   - name: build
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Build."
 *   - name: validate
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Validate."
 *   - name: test
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Test."
 * `,
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const componentAllParameters = new aws_native.imagebuilder.Component("componentAllParameters", {
 *     name: "component-name",
 *     platform: aws_native.imagebuilder.ComponentPlatform.Linux,
 *     version: "1.0.0",
 *     description: "description",
 *     changeDescription: "change-description",
 *     kmsKeyId: "customer-kms-key-id",
 *     supportedOsVersions: ["Amazon Linux 2"],
 *     tags: {
 *         customerComponentTagKey1: "CustomerComponentTagValue1",
 *         customerComponentTagKey2: "CustomerComponentTagValue2",
 *     },
 *     data: `name: HelloWorldTestingLinuxDoc - InlineData
 * description: This is hello world testing doc
 * schemaVersion: 1.0
 *
 * phases:
 *   - name: build
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Build."
 *   - name: validate
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Validate."
 *   - name: test
 *     steps:
 *       - name: HelloWorldStep
 *         action: ExecuteBash
 *         inputs:
 *           commands:
 *             - echo "Hello World! Test."
 * `,
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const componentAllParameters = new aws_native.imagebuilder.Component("componentAllParameters", {
 *     name: "component-name",
 *     platform: aws_native.imagebuilder.ComponentPlatform.Linux,
 *     version: "1.0.0",
 *     uri: "s3://imagebuilder/component_document.yml",
 *     description: "description",
 *     changeDescription: "change-description",
 *     kmsKeyId: "customer-kms-key-id",
 *     supportedOsVersions: [
 *         "CentOS",
 *         "Red Hat Enterprise Linux",
 *     ],
 *     tags: {
 *         customerComponentTagKey1: "CustomerComponentTagValue1",
 *         customerComponentTagKey2: "CustomerComponentTagValue2",
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const componentAllParameters = new aws_native.imagebuilder.Component("componentAllParameters", {
 *     name: "component-name",
 *     platform: aws_native.imagebuilder.ComponentPlatform.Linux,
 *     version: "1.0.0",
 *     uri: "s3://imagebuilder/component_document.yml",
 *     description: "description",
 *     changeDescription: "change-description",
 *     kmsKeyId: "customer-kms-key-id",
 *     supportedOsVersions: [
 *         "CentOS",
 *         "Red Hat Enterprise Linux",
 *     ],
 *     tags: {
 *         customerComponentTagKey1: "CustomerComponentTagValue1",
 *         customerComponentTagKey2: "CustomerComponentTagValue2",
 *     },
 * });
 *
 * ```
 */
export declare class Component extends pulumi.CustomResource {
    /**
     * Get an existing Component resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Component;
    /**
     * Returns true if the given object is an instance of Component.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Component;
    /**
     * The Amazon Resource Name (ARN) of the component.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The change description of the component.
     */
    readonly changeDescription: pulumi.Output<string | undefined>;
    /**
     * The data of the component.
     */
    readonly data: pulumi.Output<string | undefined>;
    /**
     * The description of the component.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The encryption status of the component.
     */
    readonly encrypted: pulumi.Output<boolean>;
    /**
     * The KMS key identifier used to encrypt the component.
     */
    readonly kmsKeyId: pulumi.Output<string | undefined>;
    /**
     * The name of the component.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The platform of the component.
     */
    readonly platform: pulumi.Output<enums.imagebuilder.ComponentPlatform>;
    /**
     * The operating system (OS) version supported by the component.
     */
    readonly supportedOsVersions: pulumi.Output<string[] | undefined>;
    /**
     * The tags associated with the component.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of the component denotes whether the component is used to build the image or only to test it.
     */
    readonly type: pulumi.Output<enums.imagebuilder.ComponentType>;
    /**
     * The uri of the component.
     */
    readonly uri: pulumi.Output<string | undefined>;
    /**
     * The version of the component.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a Component resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ComponentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Component resource.
 */
export interface ComponentArgs {
    /**
     * The change description of the component.
     */
    changeDescription?: pulumi.Input<string>;
    /**
     * The data of the component.
     */
    data?: pulumi.Input<string>;
    /**
     * The description of the component.
     */
    description?: pulumi.Input<string>;
    /**
     * The KMS key identifier used to encrypt the component.
     */
    kmsKeyId?: pulumi.Input<string>;
    /**
     * The name of the component.
     */
    name?: pulumi.Input<string>;
    /**
     * The platform of the component.
     */
    platform: pulumi.Input<enums.imagebuilder.ComponentPlatform>;
    /**
     * The operating system (OS) version supported by the component.
     */
    supportedOsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The tags associated with the component.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The uri of the component.
     */
    uri?: pulumi.Input<string>;
    /**
     * The version of the component.
     */
    version: pulumi.Input<string>;
}
