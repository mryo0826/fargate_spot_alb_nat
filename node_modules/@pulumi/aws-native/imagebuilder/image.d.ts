import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::ImageBuilder::Image
 */
export declare class Image extends pulumi.CustomResource {
    /**
     * Get an existing Image resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Image;
    /**
     * Returns true if the given object is an instance of Image.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Image;
    /**
     * The Amazon Resource Name (ARN) of the image.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     */
    readonly containerRecipeArn: pulumi.Output<string | undefined>;
    /**
     * The Amazon Resource Name (ARN) of the distribution configuration.
     */
    readonly distributionConfigurationArn: pulumi.Output<string | undefined>;
    /**
     * Collects additional information about the image being created, including the operating system (OS) version and package list.
     */
    readonly enhancedImageMetadataEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The execution role name/ARN for the image build, if provided
     */
    readonly executionRole: pulumi.Output<string | undefined>;
    /**
     * The AMI ID of the EC2 AMI in current region.
     */
    readonly imageId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     */
    readonly imageRecipeArn: pulumi.Output<string | undefined>;
    /**
     * Contains settings for vulnerability scans.
     */
    readonly imageScanningConfiguration: pulumi.Output<outputs.imagebuilder.ImageScanningConfiguration | undefined>;
    /**
     * The image tests configuration used when creating this image.
     */
    readonly imageTestsConfiguration: pulumi.Output<outputs.imagebuilder.ImageTestsConfiguration | undefined>;
    /**
     * URI for containers created in current Region with default ECR image tag
     */
    readonly imageUri: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration.
     */
    readonly infrastructureConfigurationArn: pulumi.Output<string | undefined>;
    /**
     * The name of the image.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The tags associated with the image.
     */
    readonly tags: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Workflows to define the image build process
     */
    readonly workflows: pulumi.Output<outputs.imagebuilder.ImageWorkflowConfiguration[] | undefined>;
    /**
     * Create a Image resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ImageArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Image resource.
 */
export interface ImageArgs {
    /**
     * The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.
     */
    containerRecipeArn?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the distribution configuration.
     */
    distributionConfigurationArn?: pulumi.Input<string>;
    /**
     * Collects additional information about the image being created, including the operating system (OS) version and package list.
     */
    enhancedImageMetadataEnabled?: pulumi.Input<boolean>;
    /**
     * The execution role name/ARN for the image build, if provided
     */
    executionRole?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.
     */
    imageRecipeArn?: pulumi.Input<string>;
    /**
     * Contains settings for vulnerability scans.
     */
    imageScanningConfiguration?: pulumi.Input<inputs.imagebuilder.ImageScanningConfigurationArgs>;
    /**
     * The image tests configuration used when creating this image.
     */
    imageTestsConfiguration?: pulumi.Input<inputs.imagebuilder.ImageTestsConfigurationArgs>;
    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration.
     */
    infrastructureConfigurationArn?: pulumi.Input<string>;
    /**
     * The tags associated with the image.
     */
    tags?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Workflows to define the image build process
     */
    workflows?: pulumi.Input<pulumi.Input<inputs.imagebuilder.ImageWorkflowConfigurationArgs>[]>;
}
