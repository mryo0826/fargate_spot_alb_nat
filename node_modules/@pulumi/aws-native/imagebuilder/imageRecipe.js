"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageRecipe = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource schema for AWS::ImageBuilder::ImageRecipe
 */
class ImageRecipe extends pulumi.CustomResource {
    /**
     * Get an existing ImageRecipe resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new ImageRecipe(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ImageRecipe.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ImageRecipe.__pulumiType;
    }
    /**
     * Create a ImageRecipe resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.components === undefined) && !opts.urn) {
                throw new Error("Missing required property 'components'");
            }
            if ((!args || args.parentImage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentImage'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["additionalInstanceConfiguration"] = args ? args.additionalInstanceConfiguration : undefined;
            resourceInputs["blockDeviceMappings"] = args ? args.blockDeviceMappings : undefined;
            resourceInputs["components"] = args ? args.components : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentImage"] = args ? args.parentImage : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["workingDirectory"] = args ? args.workingDirectory : undefined;
            resourceInputs["arn"] = undefined /*out*/;
        }
        else {
            resourceInputs["additionalInstanceConfiguration"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["blockDeviceMappings"] = undefined /*out*/;
            resourceInputs["components"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parentImage"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
            resourceInputs["workingDirectory"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["blockDeviceMappings[*]", "components[*]", "description", "name", "parentImage", "tags.*", "version", "workingDirectory"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(ImageRecipe.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ImageRecipe = ImageRecipe;
/** @internal */
ImageRecipe.__pulumiType = 'aws-native:imagebuilder:ImageRecipe';
//# sourceMappingURL=imageRecipe.js.map