import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Associate a set of ECS Capacity Providers with a specified ECS Cluster
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const clusterName = config.require("clusterName");
 * const clusterCPAssociation = new aws_native.ecs.ClusterCapacityProviderAssociations("clusterCPAssociation", {
 *     cluster: clusterName,
 *     capacityProviders: [
 *         aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.Fargate,
 *         aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.FargateSpot,
 *     ],
 *     defaultCapacityProviderStrategy: [
 *         {
 *             base: 2,
 *             weight: 1,
 *             capacityProvider: aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.Fargate,
 *         },
 *         {
 *             base: 0,
 *             weight: 1,
 *             capacityProvider: aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.FargateSpot,
 *         },
 *     ],
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const config = new pulumi.Config();
 * const clusterName = config.require("clusterName");
 * const clusterCPAssociation = new aws_native.ecs.ClusterCapacityProviderAssociations("clusterCPAssociation", {
 *     cluster: clusterName,
 *     capacityProviders: [
 *         aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.Fargate,
 *         aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.FargateSpot,
 *     ],
 *     defaultCapacityProviderStrategy: [
 *         {
 *             base: 2,
 *             weight: 1,
 *             capacityProvider: aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.Fargate,
 *         },
 *         {
 *             base: 0,
 *             weight: 1,
 *             capacityProvider: aws_native.ecs.ClusterCapacityProviderAssociationsCapacityProvider.FargateSpot,
 *         },
 *     ],
 * });
 *
 * ```
 */
export declare class ClusterCapacityProviderAssociations extends pulumi.CustomResource {
    /**
     * Get an existing ClusterCapacityProviderAssociations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterCapacityProviderAssociations;
    /**
     * Returns true if the given object is an instance of ClusterCapacityProviderAssociations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ClusterCapacityProviderAssociations;
    /**
     * The capacity providers to associate with the cluster.
     */
    readonly capacityProviders: pulumi.Output<(enums.ecs.ClusterCapacityProviderAssociationsCapacityProvider | string)[]>;
    /**
     * The cluster the capacity provider association is the target of.
     */
    readonly cluster: pulumi.Output<string>;
    /**
     * The default capacity provider strategy to associate with the cluster.
     */
    readonly defaultCapacityProviderStrategy: pulumi.Output<outputs.ecs.ClusterCapacityProviderAssociationsCapacityProviderStrategy[]>;
    /**
     * Create a ClusterCapacityProviderAssociations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterCapacityProviderAssociationsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ClusterCapacityProviderAssociations resource.
 */
export interface ClusterCapacityProviderAssociationsArgs {
    /**
     * The capacity providers to associate with the cluster.
     */
    capacityProviders: pulumi.Input<pulumi.Input<enums.ecs.ClusterCapacityProviderAssociationsCapacityProvider | string>[]>;
    /**
     * The cluster the capacity provider association is the target of.
     */
    cluster: pulumi.Input<string>;
    /**
     * The default capacity provider strategy to associate with the cluster.
     */
    defaultCapacityProviderStrategy: pulumi.Input<pulumi.Input<inputs.ecs.ClusterCapacityProviderAssociationsCapacityProviderStrategyArgs>[]>;
}
