"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Version = exports.Url = exports.Permission = exports.LayerVersionPermission = exports.LayerVersion = exports.getVersionOutput = exports.getVersion = exports.getUrlOutput = exports.getUrl = exports.getPermissionOutput = exports.getPermission = exports.getLayerVersionPermissionOutput = exports.getLayerVersionPermission = exports.getLayerVersionOutput = exports.getLayerVersion = exports.getFunctionOutput = exports.getFunction = exports.getEventSourceMappingOutput = exports.getEventSourceMapping = exports.getEventInvokeConfigOutput = exports.getEventInvokeConfig = exports.getCodeSigningConfigOutput = exports.getCodeSigningConfig = exports.getAliasOutput = exports.getAlias = exports.Function = exports.EventSourceMapping = exports.EventInvokeConfig = exports.CodeSigningConfig = exports.Alias = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Alias = null;
utilities.lazyLoad(exports, ["Alias"], () => require("./alias"));
exports.CodeSigningConfig = null;
utilities.lazyLoad(exports, ["CodeSigningConfig"], () => require("./codeSigningConfig"));
exports.EventInvokeConfig = null;
utilities.lazyLoad(exports, ["EventInvokeConfig"], () => require("./eventInvokeConfig"));
exports.EventSourceMapping = null;
utilities.lazyLoad(exports, ["EventSourceMapping"], () => require("./eventSourceMapping"));
exports.Function = null;
utilities.lazyLoad(exports, ["Function"], () => require("./function"));
exports.getAlias = null;
exports.getAliasOutput = null;
utilities.lazyLoad(exports, ["getAlias", "getAliasOutput"], () => require("./getAlias"));
exports.getCodeSigningConfig = null;
exports.getCodeSigningConfigOutput = null;
utilities.lazyLoad(exports, ["getCodeSigningConfig", "getCodeSigningConfigOutput"], () => require("./getCodeSigningConfig"));
exports.getEventInvokeConfig = null;
exports.getEventInvokeConfigOutput = null;
utilities.lazyLoad(exports, ["getEventInvokeConfig", "getEventInvokeConfigOutput"], () => require("./getEventInvokeConfig"));
exports.getEventSourceMapping = null;
exports.getEventSourceMappingOutput = null;
utilities.lazyLoad(exports, ["getEventSourceMapping", "getEventSourceMappingOutput"], () => require("./getEventSourceMapping"));
exports.getFunction = null;
exports.getFunctionOutput = null;
utilities.lazyLoad(exports, ["getFunction", "getFunctionOutput"], () => require("./getFunction"));
exports.getLayerVersion = null;
exports.getLayerVersionOutput = null;
utilities.lazyLoad(exports, ["getLayerVersion", "getLayerVersionOutput"], () => require("./getLayerVersion"));
exports.getLayerVersionPermission = null;
exports.getLayerVersionPermissionOutput = null;
utilities.lazyLoad(exports, ["getLayerVersionPermission", "getLayerVersionPermissionOutput"], () => require("./getLayerVersionPermission"));
exports.getPermission = null;
exports.getPermissionOutput = null;
utilities.lazyLoad(exports, ["getPermission", "getPermissionOutput"], () => require("./getPermission"));
exports.getUrl = null;
exports.getUrlOutput = null;
utilities.lazyLoad(exports, ["getUrl", "getUrlOutput"], () => require("./getUrl"));
exports.getVersion = null;
exports.getVersionOutput = null;
utilities.lazyLoad(exports, ["getVersion", "getVersionOutput"], () => require("./getVersion"));
exports.LayerVersion = null;
utilities.lazyLoad(exports, ["LayerVersion"], () => require("./layerVersion"));
exports.LayerVersionPermission = null;
utilities.lazyLoad(exports, ["LayerVersionPermission"], () => require("./layerVersionPermission"));
exports.Permission = null;
utilities.lazyLoad(exports, ["Permission"], () => require("./permission"));
exports.Url = null;
utilities.lazyLoad(exports, ["Url"], () => require("./url"));
exports.Version = null;
utilities.lazyLoad(exports, ["Version"], () => require("./version"));
// Export enums:
__exportStar(require("../types/enums/lambda"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:lambda:Alias":
                return new exports.Alias(name, undefined, { urn });
            case "aws-native:lambda:CodeSigningConfig":
                return new exports.CodeSigningConfig(name, undefined, { urn });
            case "aws-native:lambda:EventInvokeConfig":
                return new exports.EventInvokeConfig(name, undefined, { urn });
            case "aws-native:lambda:EventSourceMapping":
                return new exports.EventSourceMapping(name, undefined, { urn });
            case "aws-native:lambda:Function":
                return new exports.Function(name, undefined, { urn });
            case "aws-native:lambda:LayerVersion":
                return new exports.LayerVersion(name, undefined, { urn });
            case "aws-native:lambda:LayerVersionPermission":
                return new exports.LayerVersionPermission(name, undefined, { urn });
            case "aws-native:lambda:Permission":
                return new exports.Permission(name, undefined, { urn });
            case "aws-native:lambda:Url":
                return new exports.Url(name, undefined, { urn });
            case "aws-native:lambda:Version":
                return new exports.Version(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "lambda", _module);
//# sourceMappingURL=index.js.map