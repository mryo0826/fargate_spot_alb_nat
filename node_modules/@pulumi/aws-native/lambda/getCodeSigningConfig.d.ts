import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lambda::CodeSigningConfig.
 */
export declare function getCodeSigningConfig(args: GetCodeSigningConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetCodeSigningConfigResult>;
export interface GetCodeSigningConfigArgs {
    /**
     * A unique Arn for CodeSigningConfig resource
     */
    codeSigningConfigArn: string;
}
export interface GetCodeSigningConfigResult {
    /**
     * When the CodeSigningConfig is later on attached to a function, the function code will be expected to be signed by profiles from this list
     */
    readonly allowedPublishers?: outputs.lambda.CodeSigningConfigAllowedPublishers;
    /**
     * A unique Arn for CodeSigningConfig resource
     */
    readonly codeSigningConfigArn?: string;
    /**
     * A unique identifier for CodeSigningConfig resource
     */
    readonly codeSigningConfigId?: string;
    /**
     * Policies to control how to act if a signature is invalid
     */
    readonly codeSigningPolicies?: outputs.lambda.CodeSigningConfigCodeSigningPolicies;
    /**
     * A description of the CodeSigningConfig
     */
    readonly description?: string;
    /**
     * A list of tags to apply to CodeSigningConfig resource
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Resource Type definition for AWS::Lambda::CodeSigningConfig.
 */
export declare function getCodeSigningConfigOutput(args: GetCodeSigningConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCodeSigningConfigResult>;
export interface GetCodeSigningConfigOutputArgs {
    /**
     * A unique Arn for CodeSigningConfig resource
     */
    codeSigningConfigArn: pulumi.Input<string>;
}
