import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Lambda::LayerVersion
 */
export declare class LayerVersion extends pulumi.CustomResource {
    /**
     * Get an existing LayerVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LayerVersion;
    /**
     * Returns true if the given object is an instance of LayerVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LayerVersion;
    /**
     * A list of compatible instruction set architectures.
     */
    readonly compatibleArchitectures: pulumi.Output<string[] | undefined>;
    /**
     * A list of compatible function runtimes. Used for filtering with ListLayers and ListLayerVersions.
     */
    readonly compatibleRuntimes: pulumi.Output<string[] | undefined>;
    /**
     * The function layer archive.
     */
    readonly content: pulumi.Output<outputs.lambda.LayerVersionContent>;
    /**
     * The description of the version.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The name or Amazon Resource Name (ARN) of the layer.
     */
    readonly layerName: pulumi.Output<string | undefined>;
    /**
     * The ARN of the layer version.
     */
    readonly layerVersionArn: pulumi.Output<string>;
    /**
     * The layer's software license.
     */
    readonly licenseInfo: pulumi.Output<string | undefined>;
    /**
     * Create a LayerVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LayerVersionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LayerVersion resource.
 */
export interface LayerVersionArgs {
    /**
     * A list of compatible instruction set architectures.
     */
    compatibleArchitectures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of compatible function runtimes. Used for filtering with ListLayers and ListLayerVersions.
     */
    compatibleRuntimes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The function layer archive.
     */
    content: pulumi.Input<inputs.lambda.LayerVersionContentArgs>;
    /**
     * The description of the version.
     */
    description?: pulumi.Input<string>;
    /**
     * The name or Amazon Resource Name (ARN) of the layer.
     */
    layerName?: pulumi.Input<string>;
    /**
     * The layer's software license.
     */
    licenseInfo?: pulumi.Input<string>;
}
