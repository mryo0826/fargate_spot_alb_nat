import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Definition of AWS::RefactorSpaces::Service Resource Type
 */
export declare function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult>;
export interface GetServiceArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: string;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: string;
    /**
     * The unique identifier of the service.
     */
    serviceIdentifier: string;
}
export interface GetServiceResult {
    /**
     * The Amazon Resource Name (ARN) of the service.
     */
    readonly arn?: string;
    /**
     * The unique identifier of the service.
     */
    readonly serviceIdentifier?: string;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly tags?: outputs.Tag[];
}
/**
 * Definition of AWS::RefactorSpaces::Service Resource Type
 */
export declare function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServiceResult>;
export interface GetServiceOutputArgs {
    /**
     * The unique identifier of the application.
     */
    applicationIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the environment.
     */
    environmentIdentifier: pulumi.Input<string>;
    /**
     * The unique identifier of the service.
     */
    serviceIdentifier: pulumi.Input<string>;
}
