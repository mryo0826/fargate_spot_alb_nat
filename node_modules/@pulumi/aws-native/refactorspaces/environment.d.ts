import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::RefactorSpaces::Environment Resource Type
 */
export declare class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Environment;
    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Environment;
    /**
     * The Amazon Resource Name (ARN) of the environment.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * A description of the environment.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The unique identifier of the environment.
     */
    readonly environmentIdentifier: pulumi.Output<string>;
    /**
     * The name of the environment.
     */
    readonly name: pulumi.Output<string | undefined>;
    /**
     * The network fabric type of the environment.
     */
    readonly networkFabricType: pulumi.Output<enums.refactorspaces.EnvironmentNetworkFabricType | undefined>;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ID of the AWS Transit Gateway set up by the environment.
     */
    readonly transitGatewayId: pulumi.Output<string>;
    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EnvironmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * A description of the environment.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the environment.
     */
    name?: pulumi.Input<string>;
    /**
     * The network fabric type of the environment.
     */
    networkFabricType?: pulumi.Input<enums.refactorspaces.EnvironmentNetworkFabricType>;
    /**
     * Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
