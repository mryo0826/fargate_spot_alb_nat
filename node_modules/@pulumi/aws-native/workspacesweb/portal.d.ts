import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::WorkSpacesWeb::Portal Resource Type
 */
export declare class Portal extends pulumi.CustomResource {
    /**
     * Get an existing Portal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Portal;
    /**
     * Returns true if the given object is an instance of Portal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Portal;
    /**
     * The additional encryption context of the portal.
     */
    readonly additionalEncryptionContext: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The type of authentication integration points used when signing into the web portal. Defaults to `Standard` .
     *
     * `Standard` web portals are authenticated directly through your identity provider (IdP). User and group access to your web portal is controlled through your IdP. You need to include an IdP resource in your template to integrate your IdP with your web portal. Completing the configuration for your IdP requires exchanging WorkSpaces Secure Browser’s SP metadata with your IdP’s IdP metadata. If your IdP requires the SP metadata first before returning the IdP metadata, you should follow these steps:
     *
     * 1. Create and deploy a CloudFormation template with a `Standard` portal with no `IdentityProvider` resource.
     *
     * 2. Retrieve the SP metadata using `Fn:GetAtt` , the WorkSpaces Secure Browser console, or by the calling the `GetPortalServiceProviderMetadata` API.
     *
     * 3. Submit the data to your IdP.
     *
     * 4. Add an `IdentityProvider` resource to your CloudFormation template.
     *
     * `IAM Identity Center` web portals are authenticated through AWS IAM Identity Center . They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration) and other identity provider information must be configured in IAM Identity Center . User and group assignment must be done through the WorkSpaces Secure Browser console. These cannot be configured in CloudFormation.
     */
    readonly authenticationType: pulumi.Output<enums.workspacesweb.PortalAuthenticationType | undefined>;
    /**
     * The ARN of the browser settings that is associated with this web portal.
     */
    readonly browserSettingsArn: pulumi.Output<string | undefined>;
    /**
     * The browser that users see when using a streaming session.
     */
    readonly browserType: pulumi.Output<enums.workspacesweb.PortalBrowserType>;
    /**
     * The creation date of the web portal.
     */
    readonly creationDate: pulumi.Output<string>;
    /**
     * The customer managed key of the web portal.
     *
     * *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
     */
    readonly customerManagedKey: pulumi.Output<string | undefined>;
    /**
     * The ARN of the data protection settings.
     */
    readonly dataProtectionSettingsArn: pulumi.Output<string | undefined>;
    /**
     * The name of the web portal.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * The type and resources of the underlying instance.
     */
    readonly instanceType: pulumi.Output<enums.workspacesweb.PortalInstanceType | undefined>;
    /**
     * The ARN of the IP access settings that is associated with the web portal.
     */
    readonly ipAccessSettingsArn: pulumi.Output<string | undefined>;
    /**
     * The maximum number of concurrent sessions for the portal.
     */
    readonly maxConcurrentSessions: pulumi.Output<number | undefined>;
    /**
     * The ARN of the network settings that is associated with the web portal.
     */
    readonly networkSettingsArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the web portal.
     */
    readonly portalArn: pulumi.Output<string>;
    /**
     * The endpoint URL of the web portal that users access in order to start streaming sessions.
     */
    readonly portalEndpoint: pulumi.Output<string>;
    /**
     * The status of the web portal.
     */
    readonly portalStatus: pulumi.Output<enums.workspacesweb.PortalStatus>;
    /**
     * The renderer that is used in streaming sessions.
     */
    readonly rendererType: pulumi.Output<enums.workspacesweb.PortalRendererType>;
    /**
     * The SAML metadata of the service provider.
     */
    readonly serviceProviderSamlMetadata: pulumi.Output<string>;
    /**
     * A message that explains why the web portal is in its current status.
     */
    readonly statusReason: pulumi.Output<string>;
    /**
     * The tags to add to the web portal. A tag is a key-value pair.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The ARN of the trust store that is associated with the web portal.
     */
    readonly trustStoreArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the user access logging settings that is associated with the web portal.
     */
    readonly userAccessLoggingSettingsArn: pulumi.Output<string | undefined>;
    /**
     * The ARN of the user settings that is associated with the web portal.
     */
    readonly userSettingsArn: pulumi.Output<string | undefined>;
    /**
     * Create a Portal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PortalArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Portal resource.
 */
export interface PortalArgs {
    /**
     * The additional encryption context of the portal.
     */
    additionalEncryptionContext?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The type of authentication integration points used when signing into the web portal. Defaults to `Standard` .
     *
     * `Standard` web portals are authenticated directly through your identity provider (IdP). User and group access to your web portal is controlled through your IdP. You need to include an IdP resource in your template to integrate your IdP with your web portal. Completing the configuration for your IdP requires exchanging WorkSpaces Secure Browser’s SP metadata with your IdP’s IdP metadata. If your IdP requires the SP metadata first before returning the IdP metadata, you should follow these steps:
     *
     * 1. Create and deploy a CloudFormation template with a `Standard` portal with no `IdentityProvider` resource.
     *
     * 2. Retrieve the SP metadata using `Fn:GetAtt` , the WorkSpaces Secure Browser console, or by the calling the `GetPortalServiceProviderMetadata` API.
     *
     * 3. Submit the data to your IdP.
     *
     * 4. Add an `IdentityProvider` resource to your CloudFormation template.
     *
     * `IAM Identity Center` web portals are authenticated through AWS IAM Identity Center . They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration) and other identity provider information must be configured in IAM Identity Center . User and group assignment must be done through the WorkSpaces Secure Browser console. These cannot be configured in CloudFormation.
     */
    authenticationType?: pulumi.Input<enums.workspacesweb.PortalAuthenticationType>;
    /**
     * The ARN of the browser settings that is associated with this web portal.
     */
    browserSettingsArn?: pulumi.Input<string>;
    /**
     * The customer managed key of the web portal.
     *
     * *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
     */
    customerManagedKey?: pulumi.Input<string>;
    /**
     * The ARN of the data protection settings.
     */
    dataProtectionSettingsArn?: pulumi.Input<string>;
    /**
     * The name of the web portal.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The type and resources of the underlying instance.
     */
    instanceType?: pulumi.Input<enums.workspacesweb.PortalInstanceType>;
    /**
     * The ARN of the IP access settings that is associated with the web portal.
     */
    ipAccessSettingsArn?: pulumi.Input<string>;
    /**
     * The maximum number of concurrent sessions for the portal.
     */
    maxConcurrentSessions?: pulumi.Input<number>;
    /**
     * The ARN of the network settings that is associated with the web portal.
     */
    networkSettingsArn?: pulumi.Input<string>;
    /**
     * The tags to add to the web portal. A tag is a key-value pair.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The ARN of the trust store that is associated with the web portal.
     */
    trustStoreArn?: pulumi.Input<string>;
    /**
     * The ARN of the user access logging settings that is associated with the web portal.
     */
    userAccessLoggingSettingsArn?: pulumi.Input<string>;
    /**
     * The ARN of the user settings that is associated with the web portal.
     */
    userSettingsArn?: pulumi.Input<string>;
}
