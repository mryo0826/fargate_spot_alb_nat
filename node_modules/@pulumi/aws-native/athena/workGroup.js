"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource schema for AWS::Athena::WorkGroup
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup",
 *     state: aws_native.athena.WorkGroupState.Enabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfiguration: {
 *         bytesScannedCutoffPerQuery: 200000000,
 *         enforceWorkGroupConfiguration: false,
 *         publishCloudWatchMetricsEnabled: false,
 *         requesterPaysEnabled: true,
 *         resultConfiguration: {
 *             outputLocation: "s3://path/to/my/bucket/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup",
 *     state: aws_native.athena.WorkGroupState.Enabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfiguration: {
 *         bytesScannedCutoffPerQuery: 200000000,
 *         enforceWorkGroupConfiguration: false,
 *         publishCloudWatchMetricsEnabled: false,
 *         requesterPaysEnabled: true,
 *         resultConfiguration: {
 *             outputLocation: "s3://path/to/my/bucket/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup Updated",
 *     state: aws_native.athena.WorkGroupState.Disabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfigurationUpdates: {
 *         bytesScannedCutoffPerQuery: 10000000,
 *         enforceWorkGroupConfiguration: true,
 *         publishCloudWatchMetricsEnabled: true,
 *         requesterPaysEnabled: false,
 *         resultConfigurationUpdates: {
 *             encryptionConfiguration: {
 *                 encryptionOption: aws_native.athena.WorkGroupEncryptionOption.SseS3,
 *             },
 *             outputLocation: "s3://path/to/my/bucket/updated/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup Updated",
 *     state: aws_native.athena.WorkGroupState.Disabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfigurationUpdates: {
 *         bytesScannedCutoffPerQuery: 10000000,
 *         enforceWorkGroupConfiguration: true,
 *         publishCloudWatchMetricsEnabled: true,
 *         requesterPaysEnabled: false,
 *         resultConfigurationUpdates: {
 *             encryptionConfiguration: {
 *                 encryptionOption: aws_native.athena.WorkGroupEncryptionOption.SseS3,
 *             },
 *             outputLocation: "s3://path/to/my/bucket/updated/",
 *         },
 *     },
 * });
 *
 * ```
 */
class WorkGroup extends pulumi.CustomResource {
    /**
     * Get an existing WorkGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new WorkGroup(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkGroup.__pulumiType;
    }
    /**
     * Create a WorkGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recursiveDeleteOption"] = args ? args.recursiveDeleteOption : undefined;
            resourceInputs["state"] = args ? args.state : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workGroupConfiguration"] = args ? args.workGroupConfiguration : undefined;
            resourceInputs["workGroupConfigurationUpdates"] = args ? args.workGroupConfigurationUpdates : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
        }
        else {
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["recursiveDeleteOption"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["workGroupConfiguration"] = undefined /*out*/;
            resourceInputs["workGroupConfigurationUpdates"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(WorkGroup.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WorkGroup = WorkGroup;
/** @internal */
WorkGroup.__pulumiType = 'aws-native:athena:WorkGroup';
//# sourceMappingURL=workGroup.js.map