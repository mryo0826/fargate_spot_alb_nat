"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataCatalog = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Resource schema for AWS::Athena::DataCatalog
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaDataCatalog = new aws_native.athena.DataCatalog("myAthenaDataCatalog", {
 *     name: "MyCustomDataCatalog",
 *     type: aws_native.athena.DataCatalogType.Hive,
 *     description: "Custom Hive Catalog Description",
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     parameters: {
 *         "metadata-function": "arn:aws:lambda:us-west-2:111122223333:function:lambdaname",
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaDataCatalog = new aws_native.athena.DataCatalog("myAthenaDataCatalog", {
 *     name: "MyCustomDataCatalog",
 *     type: aws_native.athena.DataCatalogType.Hive,
 *     description: "Custom Hive Catalog Description",
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     parameters: {
 *         "metadata-function": "arn:aws:lambda:us-west-2:111122223333:function:lambdaname",
 *     },
 * });
 *
 * ```
 */
class DataCatalog extends pulumi.CustomResource {
    /**
     * Get an existing DataCatalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new DataCatalog(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DataCatalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataCatalog.__pulumiType;
    }
    /**
     * Create a DataCatalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["parameters"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["name"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(DataCatalog.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DataCatalog = DataCatalog;
/** @internal */
DataCatalog.__pulumiType = 'aws-native:athena:DataCatalog';
//# sourceMappingURL=dataCatalog.js.map