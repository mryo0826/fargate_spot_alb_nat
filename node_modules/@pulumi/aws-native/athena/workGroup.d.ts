import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::Athena::WorkGroup
 *
 * ## Example Usage
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup",
 *     state: aws_native.athena.WorkGroupState.Enabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfiguration: {
 *         bytesScannedCutoffPerQuery: 200000000,
 *         enforceWorkGroupConfiguration: false,
 *         publishCloudWatchMetricsEnabled: false,
 *         requesterPaysEnabled: true,
 *         resultConfiguration: {
 *             outputLocation: "s3://path/to/my/bucket/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup",
 *     state: aws_native.athena.WorkGroupState.Enabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfiguration: {
 *         bytesScannedCutoffPerQuery: 200000000,
 *         enforceWorkGroupConfiguration: false,
 *         publishCloudWatchMetricsEnabled: false,
 *         requesterPaysEnabled: true,
 *         resultConfiguration: {
 *             outputLocation: "s3://path/to/my/bucket/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup Updated",
 *     state: aws_native.athena.WorkGroupState.Disabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfigurationUpdates: {
 *         bytesScannedCutoffPerQuery: 10000000,
 *         enforceWorkGroupConfiguration: true,
 *         publishCloudWatchMetricsEnabled: true,
 *         requesterPaysEnabled: false,
 *         resultConfigurationUpdates: {
 *             encryptionConfiguration: {
 *                 encryptionOption: aws_native.athena.WorkGroupEncryptionOption.SseS3,
 *             },
 *             outputLocation: "s3://path/to/my/bucket/updated/",
 *         },
 *     },
 * });
 *
 * ```
 * ### Example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws_native from "@pulumi/aws-native";
 *
 * const myAthenaWorkGroup = new aws_native.athena.WorkGroup("myAthenaWorkGroup", {
 *     name: "MyCustomWorkGroup",
 *     description: "My WorkGroup Updated",
 *     state: aws_native.athena.WorkGroupState.Disabled,
 *     tags: [
 *         {
 *             key: "key1",
 *             value: "value1",
 *         },
 *         {
 *             key: "key2",
 *             value: "value2",
 *         },
 *     ],
 *     workGroupConfigurationUpdates: {
 *         bytesScannedCutoffPerQuery: 10000000,
 *         enforceWorkGroupConfiguration: true,
 *         publishCloudWatchMetricsEnabled: true,
 *         requesterPaysEnabled: false,
 *         resultConfigurationUpdates: {
 *             encryptionConfiguration: {
 *                 encryptionOption: aws_native.athena.WorkGroupEncryptionOption.SseS3,
 *             },
 *             outputLocation: "s3://path/to/my/bucket/updated/",
 *         },
 *     },
 * });
 *
 * ```
 */
export declare class WorkGroup extends pulumi.CustomResource {
    /**
     * Get an existing WorkGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): WorkGroup;
    /**
     * Returns true if the given object is an instance of WorkGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkGroup;
    /**
     * The date and time the workgroup was created.
     */
    readonly creationTime: pulumi.Output<string>;
    /**
     * The workgroup description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The workGroup name.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The option to delete the workgroup and its contents even if the workgroup contains any named queries.
     */
    readonly recursiveDeleteOption: pulumi.Output<boolean | undefined>;
    /**
     * The state of the workgroup: ENABLED or DISABLED.
     */
    readonly state: pulumi.Output<enums.athena.WorkGroupState | undefined>;
    /**
     * One or more tags, separated by commas, that you want to attach to the workgroup as you create it
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The workgroup configuration
     */
    readonly workGroupConfiguration: pulumi.Output<outputs.athena.WorkGroupConfiguration | undefined>;
    /**
     * The workgroup configuration update object
     */
    readonly workGroupConfigurationUpdates: pulumi.Output<outputs.athena.WorkGroupConfigurationUpdates | undefined>;
    /**
     * Create a WorkGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WorkGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a WorkGroup resource.
 */
export interface WorkGroupArgs {
    /**
     * The workgroup description.
     */
    description?: pulumi.Input<string>;
    /**
     * The workGroup name.
     */
    name?: pulumi.Input<string>;
    /**
     * The option to delete the workgroup and its contents even if the workgroup contains any named queries.
     */
    recursiveDeleteOption?: pulumi.Input<boolean>;
    /**
     * The state of the workgroup: ENABLED or DISABLED.
     */
    state?: pulumi.Input<enums.athena.WorkGroupState>;
    /**
     * One or more tags, separated by commas, that you want to attach to the workgroup as you create it
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The workgroup configuration
     */
    workGroupConfiguration?: pulumi.Input<inputs.athena.WorkGroupConfigurationArgs>;
    /**
     * The workgroup configuration update object
     */
    workGroupConfigurationUpdates?: pulumi.Input<inputs.athena.WorkGroupConfigurationUpdatesArgs>;
}
