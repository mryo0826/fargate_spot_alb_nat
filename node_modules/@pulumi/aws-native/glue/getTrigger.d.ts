import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::Glue::Trigger
 */
export declare function getTrigger(args: GetTriggerArgs, opts?: pulumi.InvokeOptions): Promise<GetTriggerResult>;
export interface GetTriggerArgs {
    /**
     * The name of the trigger.
     */
    name: string;
}
export interface GetTriggerResult {
    /**
     * The actions initiated by this trigger.
     */
    readonly actions?: outputs.glue.TriggerAction[];
    /**
     * A description of this trigger.
     */
    readonly description?: string;
    /**
     * Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.
     */
    readonly eventBatchingCondition?: outputs.glue.TriggerEventBatchingCondition;
    /**
     * The predicate of this trigger, which defines when it will fire.
     */
    readonly predicate?: outputs.glue.TriggerPredicate;
    /**
     * A cron expression used to specify the schedule.
     */
    readonly schedule?: string;
    /**
     * The tags to use with this trigger.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Glue::Trigger` for more information about the expected schema for this property.
     */
    readonly tags?: any;
}
/**
 * Resource Type definition for AWS::Glue::Trigger
 */
export declare function getTriggerOutput(args: GetTriggerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTriggerResult>;
export interface GetTriggerOutputArgs {
    /**
     * The name of the trigger.
     */
    name: pulumi.Input<string>;
}
