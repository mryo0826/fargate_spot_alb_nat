export declare const WorkspaceAccountAccessType: {
    readonly CurrentAccount: "CURRENT_ACCOUNT";
    readonly Organization: "ORGANIZATION";
};
/**
 * These enums represent valid account access types. Specifically these enums determine whether the workspace can access AWS resources in the AWS account only, or whether it can also access resources in other accounts in the same organization. If the value CURRENT_ACCOUNT is used, a workspace role ARN must be provided. If the value is ORGANIZATION, a list of organizational units must be provided.
 */
export type WorkspaceAccountAccessType = (typeof WorkspaceAccountAccessType)[keyof typeof WorkspaceAccountAccessType];
export declare const WorkspaceAuthenticationProviderTypes: {
    readonly AwsSso: "AWS_SSO";
    readonly Saml: "SAML";
};
/**
 * Valid workspace authentication providers.
 */
export type WorkspaceAuthenticationProviderTypes = (typeof WorkspaceAuthenticationProviderTypes)[keyof typeof WorkspaceAuthenticationProviderTypes];
export declare const WorkspaceDataSourceType: {
    readonly AmazonOpensearchService: "AMAZON_OPENSEARCH_SERVICE";
    readonly Cloudwatch: "CLOUDWATCH";
    readonly Prometheus: "PROMETHEUS";
    readonly Xray: "XRAY";
    readonly Timestream: "TIMESTREAM";
    readonly Sitewise: "SITEWISE";
    readonly Athena: "ATHENA";
    readonly Redshift: "REDSHIFT";
};
/**
 * These enums represent valid AWS data sources that can be queried via the Grafana workspace. These data sources are primarily used to help customers visualize which data sources have been added to a service managed workspace IAM role.
 */
export type WorkspaceDataSourceType = (typeof WorkspaceDataSourceType)[keyof typeof WorkspaceDataSourceType];
export declare const WorkspaceNotificationDestinationType: {
    readonly Sns: "SNS";
};
/**
 * These enums represent valid AWS notification destinations that the Grafana workspace has permission to use. These notification destinations are primarily used to help customers visualize which destinations have been added to a service managed IAM role.
 */
export type WorkspaceNotificationDestinationType = (typeof WorkspaceNotificationDestinationType)[keyof typeof WorkspaceNotificationDestinationType];
export declare const WorkspacePermissionType: {
    readonly CustomerManaged: "CUSTOMER_MANAGED";
    readonly ServiceManaged: "SERVICE_MANAGED";
};
/**
 * These enums represent valid permission types to use when creating or configuring a Grafana workspace. The SERVICE_MANAGED permission type means the Managed Grafana service will create a workspace IAM role on your behalf. The CUSTOMER_MANAGED permission type means that the customer is expected to provide an IAM role that the Grafana workspace can use to query data sources.
 */
export type WorkspacePermissionType = (typeof WorkspacePermissionType)[keyof typeof WorkspacePermissionType];
export declare const WorkspaceSamlConfigurationStatus: {
    readonly Configured: "CONFIGURED";
    readonly NotConfigured: "NOT_CONFIGURED";
};
/**
 * Valid SAML configuration statuses.
 */
export type WorkspaceSamlConfigurationStatus = (typeof WorkspaceSamlConfigurationStatus)[keyof typeof WorkspaceSamlConfigurationStatus];
export declare const WorkspaceStatus: {
    readonly Active: "ACTIVE";
    readonly Creating: "CREATING";
    readonly Deleting: "DELETING";
    readonly Failed: "FAILED";
    readonly Updating: "UPDATING";
    readonly Upgrading: "UPGRADING";
    readonly VersionUpdating: "VERSION_UPDATING";
    readonly DeletionFailed: "DELETION_FAILED";
    readonly CreationFailed: "CREATION_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
    readonly UpgradeFailed: "UPGRADE_FAILED";
    readonly LicenseRemovalFailed: "LICENSE_REMOVAL_FAILED";
    readonly VersionUpdateFailed: "VERSION_UPDATE_FAILED";
};
/**
 * These enums represent the status of a workspace.
 */
export type WorkspaceStatus = (typeof WorkspaceStatus)[keyof typeof WorkspaceStatus];
