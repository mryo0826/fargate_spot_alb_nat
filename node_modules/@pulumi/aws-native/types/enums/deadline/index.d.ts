export declare const FleetAcceleratorSelectionName: {
    readonly T4: "t4";
    readonly A10g: "a10g";
    readonly L4: "l4";
    readonly L40s: "l40s";
};
export type FleetAcceleratorSelectionName = (typeof FleetAcceleratorSelectionName)[keyof typeof FleetAcceleratorSelectionName];
export declare const FleetAcceleratorType: {
    readonly Gpu: "gpu";
};
export type FleetAcceleratorType = (typeof FleetAcceleratorType)[keyof typeof FleetAcceleratorType];
export declare const FleetAutoScalingMode: {
    readonly NoScaling: "NO_SCALING";
    readonly EventBasedAutoScaling: "EVENT_BASED_AUTO_SCALING";
};
export type FleetAutoScalingMode = (typeof FleetAutoScalingMode)[keyof typeof FleetAutoScalingMode];
export declare const FleetCpuArchitectureType: {
    readonly X8664: "x86_64";
    readonly Arm64: "arm64";
};
export type FleetCpuArchitectureType = (typeof FleetCpuArchitectureType)[keyof typeof FleetCpuArchitectureType];
export declare const FleetCustomerManagedFleetOperatingSystemFamily: {
    readonly Windows: "WINDOWS";
    readonly Linux: "LINUX";
    readonly Macos: "MACOS";
};
export type FleetCustomerManagedFleetOperatingSystemFamily = (typeof FleetCustomerManagedFleetOperatingSystemFamily)[keyof typeof FleetCustomerManagedFleetOperatingSystemFamily];
export declare const FleetEc2MarketType: {
    readonly OnDemand: "on-demand";
    readonly Spot: "spot";
};
export type FleetEc2MarketType = (typeof FleetEc2MarketType)[keyof typeof FleetEc2MarketType];
export declare const FleetServiceManagedFleetOperatingSystemFamily: {
    readonly Linux: "LINUX";
    readonly Windows: "WINDOWS";
};
export type FleetServiceManagedFleetOperatingSystemFamily = (typeof FleetServiceManagedFleetOperatingSystemFamily)[keyof typeof FleetServiceManagedFleetOperatingSystemFamily];
export declare const FleetStatus: {
    readonly Active: "ACTIVE";
    readonly CreateInProgress: "CREATE_IN_PROGRESS";
    readonly UpdateInProgress: "UPDATE_IN_PROGRESS";
    readonly CreateFailed: "CREATE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
};
export type FleetStatus = (typeof FleetStatus)[keyof typeof FleetStatus];
export declare const LicenseEndpointStatus: {
    readonly CreateInProgress: "CREATE_IN_PROGRESS";
    readonly DeleteInProgress: "DELETE_IN_PROGRESS";
    readonly Ready: "READY";
    readonly NotReady: "NOT_READY";
};
export type LicenseEndpointStatus = (typeof LicenseEndpointStatus)[keyof typeof LicenseEndpointStatus];
export declare const QueueDefaultQueueBudgetAction: {
    readonly None: "NONE";
    readonly StopSchedulingAndCompleteTasks: "STOP_SCHEDULING_AND_COMPLETE_TASKS";
    readonly StopSchedulingAndCancelTasks: "STOP_SCHEDULING_AND_CANCEL_TASKS";
};
export type QueueDefaultQueueBudgetAction = (typeof QueueDefaultQueueBudgetAction)[keyof typeof QueueDefaultQueueBudgetAction];
export declare const QueueEnvironmentEnvironmentTemplateType: {
    readonly Json: "JSON";
    readonly Yaml: "YAML";
};
export type QueueEnvironmentEnvironmentTemplateType = (typeof QueueEnvironmentEnvironmentTemplateType)[keyof typeof QueueEnvironmentEnvironmentTemplateType];
export declare const QueueRunAs: {
    readonly QueueConfiguredUser: "QUEUE_CONFIGURED_USER";
    readonly WorkerAgentUser: "WORKER_AGENT_USER";
};
export type QueueRunAs = (typeof QueueRunAs)[keyof typeof QueueRunAs];
export declare const StorageProfileFileSystemLocationType: {
    readonly Shared: "SHARED";
    readonly Local: "LOCAL";
};
export type StorageProfileFileSystemLocationType = (typeof StorageProfileFileSystemLocationType)[keyof typeof StorageProfileFileSystemLocationType];
export declare const StorageProfileOperatingSystemFamily: {
    readonly Windows: "WINDOWS";
    readonly Linux: "LINUX";
    readonly Macos: "MACOS";
};
export type StorageProfileOperatingSystemFamily = (typeof StorageProfileOperatingSystemFamily)[keyof typeof StorageProfileOperatingSystemFamily];
