"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageProfileOperatingSystemFamily = exports.StorageProfileFileSystemLocationType = exports.QueueRunAs = exports.QueueEnvironmentEnvironmentTemplateType = exports.QueueDefaultQueueBudgetAction = exports.LicenseEndpointStatus = exports.FleetStatus = exports.FleetServiceManagedFleetOperatingSystemFamily = exports.FleetEc2MarketType = exports.FleetCustomerManagedFleetOperatingSystemFamily = exports.FleetCpuArchitectureType = exports.FleetAutoScalingMode = exports.FleetAcceleratorType = exports.FleetAcceleratorSelectionName = void 0;
exports.FleetAcceleratorSelectionName = {
    T4: "t4",
    A10g: "a10g",
    L4: "l4",
    L40s: "l40s",
};
exports.FleetAcceleratorType = {
    Gpu: "gpu",
};
exports.FleetAutoScalingMode = {
    NoScaling: "NO_SCALING",
    EventBasedAutoScaling: "EVENT_BASED_AUTO_SCALING",
};
exports.FleetCpuArchitectureType = {
    X8664: "x86_64",
    Arm64: "arm64",
};
exports.FleetCustomerManagedFleetOperatingSystemFamily = {
    Windows: "WINDOWS",
    Linux: "LINUX",
    Macos: "MACOS",
};
exports.FleetEc2MarketType = {
    OnDemand: "on-demand",
    Spot: "spot",
};
exports.FleetServiceManagedFleetOperatingSystemFamily = {
    Linux: "LINUX",
    Windows: "WINDOWS",
};
exports.FleetStatus = {
    Active: "ACTIVE",
    CreateInProgress: "CREATE_IN_PROGRESS",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    UpdateFailed: "UPDATE_FAILED",
};
exports.LicenseEndpointStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    Ready: "READY",
    NotReady: "NOT_READY",
};
exports.QueueDefaultQueueBudgetAction = {
    None: "NONE",
    StopSchedulingAndCompleteTasks: "STOP_SCHEDULING_AND_COMPLETE_TASKS",
    StopSchedulingAndCancelTasks: "STOP_SCHEDULING_AND_CANCEL_TASKS",
};
exports.QueueEnvironmentEnvironmentTemplateType = {
    Json: "JSON",
    Yaml: "YAML",
};
exports.QueueRunAs = {
    QueueConfiguredUser: "QUEUE_CONFIGURED_USER",
    WorkerAgentUser: "WORKER_AGENT_USER",
};
exports.StorageProfileFileSystemLocationType = {
    Shared: "SHARED",
    Local: "LOCAL",
};
exports.StorageProfileOperatingSystemFamily = {
    Windows: "WINDOWS",
    Linux: "LINUX",
    Macos: "MACOS",
};
//# sourceMappingURL=index.js.map