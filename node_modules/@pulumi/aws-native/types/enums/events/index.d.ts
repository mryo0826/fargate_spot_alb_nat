export declare const ApiDestinationHttpMethod: {
    readonly Get: "GET";
    readonly Head: "HEAD";
    readonly Post: "POST";
    readonly Options: "OPTIONS";
    readonly Put: "PUT";
    readonly Delete: "DELETE";
    readonly Patch: "PATCH";
};
/**
 * The method to use for the request to the HTTP invocation endpoint.
 */
export type ApiDestinationHttpMethod = (typeof ApiDestinationHttpMethod)[keyof typeof ApiDestinationHttpMethod];
export declare const ConnectionAuthorizationType: {
    readonly ApiKey: "API_KEY";
    readonly Basic: "BASIC";
    readonly OauthClientCredentials: "OAUTH_CLIENT_CREDENTIALS";
};
/**
 * The type of authorization to use for the connection.
 *
 * > OAUTH tokens are refreshed when a 401 or 407 response is returned.
 */
export type ConnectionAuthorizationType = (typeof ConnectionAuthorizationType)[keyof typeof ConnectionAuthorizationType];
export declare const ConnectionOAuthParametersHttpMethod: {
    readonly Get: "GET";
    readonly Post: "POST";
    readonly Put: "PUT";
};
/**
 * The method to use for the authorization request.
 */
export type ConnectionOAuthParametersHttpMethod = (typeof ConnectionOAuthParametersHttpMethod)[keyof typeof ConnectionOAuthParametersHttpMethod];
export declare const EndpointReplicationState: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type EndpointReplicationState = (typeof EndpointReplicationState)[keyof typeof EndpointReplicationState];
export declare const EndpointState: {
    readonly Active: "ACTIVE";
    readonly Creating: "CREATING";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly CreateFailed: "CREATE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
};
/**
 * The main Region of the endpoint.
 */
export type EndpointState = (typeof EndpointState)[keyof typeof EndpointState];
export declare const RuleState: {
    readonly Disabled: "DISABLED";
    readonly Enabled: "ENABLED";
    readonly EnabledWithAllCloudtrailManagementEvents: "ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS";
};
/**
 * The state of the rule.
 */
export type RuleState = (typeof RuleState)[keyof typeof RuleState];
