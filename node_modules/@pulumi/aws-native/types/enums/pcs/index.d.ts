export declare const ClusterEndpointType: {
    readonly Slurmctld: "SLURMCTLD";
    readonly Slurmdbd: "SLURMDBD";
};
/**
 * Indicates the type of endpoint running at the specific IP address.
 */
export type ClusterEndpointType = (typeof ClusterEndpointType)[keyof typeof ClusterEndpointType];
export declare const ClusterSchedulerPropertiesType: {
    readonly Slurm: "SLURM";
};
/**
 * The software AWS PCS uses to manage cluster scaling and job scheduling.
 */
export type ClusterSchedulerPropertiesType = (typeof ClusterSchedulerPropertiesType)[keyof typeof ClusterSchedulerPropertiesType];
export declare const ClusterSize: {
    readonly Small: "SMALL";
    readonly Medium: "MEDIUM";
    readonly Large: "LARGE";
};
/**
 * The size of the cluster.
 */
export type ClusterSize = (typeof ClusterSize)[keyof typeof ClusterSize];
export declare const ClusterStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly CreateFailed: "CREATE_FAILED";
    readonly DeleteFailed: "DELETE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
};
/**
 * The provisioning status of the cluster. The provisioning status doesn't indicate the overall health of the cluster.
 */
export type ClusterStatus = (typeof ClusterStatus)[keyof typeof ClusterStatus];
export declare const ComputeNodeGroupPurchaseOption: {
    readonly Ondemand: "ONDEMAND";
    readonly Spot: "SPOT";
};
/**
 * Specifies how EC2 instances are purchased on your behalf. AWS PCS supports On-Demand and Spot instances. For more information, see Instance purchasing options in the Amazon Elastic Compute Cloud User Guide. If you don't provide this option, it defaults to On-Demand.
 */
export type ComputeNodeGroupPurchaseOption = (typeof ComputeNodeGroupPurchaseOption)[keyof typeof ComputeNodeGroupPurchaseOption];
export declare const ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy: {
    readonly LowestPrice: "lowest-price";
    readonly CapacityOptimized: "capacity-optimized";
    readonly PriceCapacityOptimized: "price-capacity-optimized";
};
/**
 * The Amazon EC2 allocation strategy AWS PCS uses to provision EC2 instances. AWS PCS supports lowest price, capacity optimized, and price capacity optimized. If you don't provide this option, it defaults to price capacity optimized.
 */
export type ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy = (typeof ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy)[keyof typeof ComputeNodeGroupSpotOptionsPropertiesAllocationStrategy];
export declare const ComputeNodeGroupStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly CreateFailed: "CREATE_FAILED";
    readonly DeleteFailed: "DELETE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
};
/**
 * The provisioning status of the compute node group. The provisioning status doesn't indicate the overall health of the compute node group.
 */
export type ComputeNodeGroupStatus = (typeof ComputeNodeGroupStatus)[keyof typeof ComputeNodeGroupStatus];
export declare const QueueStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly CreateFailed: "CREATE_FAILED";
    readonly DeleteFailed: "DELETE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
};
/**
 * The provisioning status of the queue. The provisioning status doesn't indicate the overall health of the queue.
 */
export type QueueStatus = (typeof QueueStatus)[keyof typeof QueueStatus];
