export declare const MailManagerArchiveArchiveState: {
    readonly Active: "ACTIVE";
    readonly PendingDeletion: "PENDING_DELETION";
};
export type MailManagerArchiveArchiveState = (typeof MailManagerArchiveArchiveState)[keyof typeof MailManagerArchiveArchiveState];
export declare const MailManagerArchiveRetentionPeriod: {
    readonly ThreeMonths: "THREE_MONTHS";
    readonly SixMonths: "SIX_MONTHS";
    readonly NineMonths: "NINE_MONTHS";
    readonly OneYear: "ONE_YEAR";
    readonly EighteenMonths: "EIGHTEEN_MONTHS";
    readonly TwoYears: "TWO_YEARS";
    readonly ThirtyMonths: "THIRTY_MONTHS";
    readonly ThreeYears: "THREE_YEARS";
    readonly FourYears: "FOUR_YEARS";
    readonly FiveYears: "FIVE_YEARS";
    readonly SixYears: "SIX_YEARS";
    readonly SevenYears: "SEVEN_YEARS";
    readonly EightYears: "EIGHT_YEARS";
    readonly NineYears: "NINE_YEARS";
    readonly TenYears: "TEN_YEARS";
    readonly Permanent: "PERMANENT";
};
export type MailManagerArchiveRetentionPeriod = (typeof MailManagerArchiveRetentionPeriod)[keyof typeof MailManagerArchiveRetentionPeriod];
export declare const MailManagerIngressPointIngressPointStatus: {
    readonly Provisioning: "PROVISIONING";
    readonly Deprovisioning: "DEPROVISIONING";
    readonly Updating: "UPDATING";
    readonly Active: "ACTIVE";
    readonly Closed: "CLOSED";
    readonly Failed: "FAILED";
};
export type MailManagerIngressPointIngressPointStatus = (typeof MailManagerIngressPointIngressPointStatus)[keyof typeof MailManagerIngressPointIngressPointStatus];
export declare const MailManagerIngressPointIngressPointStatusToUpdate: {
    readonly Active: "ACTIVE";
    readonly Closed: "CLOSED";
};
export type MailManagerIngressPointIngressPointStatusToUpdate = (typeof MailManagerIngressPointIngressPointStatusToUpdate)[keyof typeof MailManagerIngressPointIngressPointStatusToUpdate];
export declare const MailManagerIngressPointIngressPointType: {
    readonly Open: "OPEN";
    readonly Auth: "AUTH";
};
export type MailManagerIngressPointIngressPointType = (typeof MailManagerIngressPointIngressPointType)[keyof typeof MailManagerIngressPointIngressPointType];
export declare const MailManagerRuleSetActionFailurePolicy: {
    readonly Continue: "CONTINUE";
    readonly Drop: "DROP";
};
export type MailManagerRuleSetActionFailurePolicy = (typeof MailManagerRuleSetActionFailurePolicy)[keyof typeof MailManagerRuleSetActionFailurePolicy];
export declare const MailManagerRuleSetMailFrom: {
    readonly Replace: "REPLACE";
    readonly Preserve: "PRESERVE";
};
export type MailManagerRuleSetMailFrom = (typeof MailManagerRuleSetMailFrom)[keyof typeof MailManagerRuleSetMailFrom];
export declare const MailManagerRuleSetRuleBooleanEmailAttribute: {
    readonly ReadReceiptRequested: "READ_RECEIPT_REQUESTED";
    readonly Tls: "TLS";
    readonly TlsWrapped: "TLS_WRAPPED";
};
export type MailManagerRuleSetRuleBooleanEmailAttribute = (typeof MailManagerRuleSetRuleBooleanEmailAttribute)[keyof typeof MailManagerRuleSetRuleBooleanEmailAttribute];
export declare const MailManagerRuleSetRuleBooleanOperator: {
    readonly IsTrue: "IS_TRUE";
    readonly IsFalse: "IS_FALSE";
};
export type MailManagerRuleSetRuleBooleanOperator = (typeof MailManagerRuleSetRuleBooleanOperator)[keyof typeof MailManagerRuleSetRuleBooleanOperator];
export declare const MailManagerRuleSetRuleDmarcOperator: {
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
};
export type MailManagerRuleSetRuleDmarcOperator = (typeof MailManagerRuleSetRuleDmarcOperator)[keyof typeof MailManagerRuleSetRuleDmarcOperator];
export declare const MailManagerRuleSetRuleDmarcPolicy: {
    readonly None: "NONE";
    readonly Quarantine: "QUARANTINE";
    readonly Reject: "REJECT";
};
export type MailManagerRuleSetRuleDmarcPolicy = (typeof MailManagerRuleSetRuleDmarcPolicy)[keyof typeof MailManagerRuleSetRuleDmarcPolicy];
export declare const MailManagerRuleSetRuleIpEmailAttribute: {
    readonly SourceIp: "SOURCE_IP";
};
export type MailManagerRuleSetRuleIpEmailAttribute = (typeof MailManagerRuleSetRuleIpEmailAttribute)[keyof typeof MailManagerRuleSetRuleIpEmailAttribute];
export declare const MailManagerRuleSetRuleIpOperator: {
    readonly CidrMatches: "CIDR_MATCHES";
    readonly NotCidrMatches: "NOT_CIDR_MATCHES";
};
export type MailManagerRuleSetRuleIpOperator = (typeof MailManagerRuleSetRuleIpOperator)[keyof typeof MailManagerRuleSetRuleIpOperator];
export declare const MailManagerRuleSetRuleNumberEmailAttribute: {
    readonly MessageSize: "MESSAGE_SIZE";
};
export type MailManagerRuleSetRuleNumberEmailAttribute = (typeof MailManagerRuleSetRuleNumberEmailAttribute)[keyof typeof MailManagerRuleSetRuleNumberEmailAttribute];
export declare const MailManagerRuleSetRuleNumberOperator: {
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
    readonly LessThan: "LESS_THAN";
    readonly GreaterThan: "GREATER_THAN";
    readonly LessThanOrEqual: "LESS_THAN_OR_EQUAL";
    readonly GreaterThanOrEqual: "GREATER_THAN_OR_EQUAL";
};
export type MailManagerRuleSetRuleNumberOperator = (typeof MailManagerRuleSetRuleNumberOperator)[keyof typeof MailManagerRuleSetRuleNumberOperator];
export declare const MailManagerRuleSetRuleStringEmailAttribute: {
    readonly MailFrom: "MAIL_FROM";
    readonly Helo: "HELO";
    readonly Recipient: "RECIPIENT";
    readonly Sender: "SENDER";
    readonly From: "FROM";
    readonly Subject: "SUBJECT";
    readonly To: "TO";
    readonly Cc: "CC";
};
export type MailManagerRuleSetRuleStringEmailAttribute = (typeof MailManagerRuleSetRuleStringEmailAttribute)[keyof typeof MailManagerRuleSetRuleStringEmailAttribute];
export declare const MailManagerRuleSetRuleStringOperator: {
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
    readonly StartsWith: "STARTS_WITH";
    readonly EndsWith: "ENDS_WITH";
    readonly Contains: "CONTAINS";
};
export type MailManagerRuleSetRuleStringOperator = (typeof MailManagerRuleSetRuleStringOperator)[keyof typeof MailManagerRuleSetRuleStringOperator];
export declare const MailManagerRuleSetRuleVerdict: {
    readonly Pass: "PASS";
    readonly Fail: "FAIL";
    readonly Gray: "GRAY";
    readonly ProcessingFailed: "PROCESSING_FAILED";
};
export type MailManagerRuleSetRuleVerdict = (typeof MailManagerRuleSetRuleVerdict)[keyof typeof MailManagerRuleSetRuleVerdict];
export declare const MailManagerRuleSetRuleVerdictAttribute: {
    readonly Spf: "SPF";
    readonly Dkim: "DKIM";
};
export type MailManagerRuleSetRuleVerdictAttribute = (typeof MailManagerRuleSetRuleVerdictAttribute)[keyof typeof MailManagerRuleSetRuleVerdictAttribute];
export declare const MailManagerRuleSetRuleVerdictOperator: {
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
};
export type MailManagerRuleSetRuleVerdictOperator = (typeof MailManagerRuleSetRuleVerdictOperator)[keyof typeof MailManagerRuleSetRuleVerdictOperator];
export declare const MailManagerTrafficPolicyAcceptAction: {
    readonly Allow: "ALLOW";
    readonly Deny: "DENY";
};
export type MailManagerTrafficPolicyAcceptAction = (typeof MailManagerTrafficPolicyAcceptAction)[keyof typeof MailManagerTrafficPolicyAcceptAction];
export declare const MailManagerTrafficPolicyIngressBooleanOperator: {
    readonly IsTrue: "IS_TRUE";
    readonly IsFalse: "IS_FALSE";
};
export type MailManagerTrafficPolicyIngressBooleanOperator = (typeof MailManagerTrafficPolicyIngressBooleanOperator)[keyof typeof MailManagerTrafficPolicyIngressBooleanOperator];
export declare const MailManagerTrafficPolicyIngressIpOperator: {
    readonly CidrMatches: "CIDR_MATCHES";
    readonly NotCidrMatches: "NOT_CIDR_MATCHES";
};
export type MailManagerTrafficPolicyIngressIpOperator = (typeof MailManagerTrafficPolicyIngressIpOperator)[keyof typeof MailManagerTrafficPolicyIngressIpOperator];
export declare const MailManagerTrafficPolicyIngressIpv4Attribute: {
    readonly SenderIp: "SENDER_IP";
};
export type MailManagerTrafficPolicyIngressIpv4Attribute = (typeof MailManagerTrafficPolicyIngressIpv4Attribute)[keyof typeof MailManagerTrafficPolicyIngressIpv4Attribute];
export declare const MailManagerTrafficPolicyIngressStringEmailAttribute: {
    readonly Recipient: "RECIPIENT";
};
export type MailManagerTrafficPolicyIngressStringEmailAttribute = (typeof MailManagerTrafficPolicyIngressStringEmailAttribute)[keyof typeof MailManagerTrafficPolicyIngressStringEmailAttribute];
export declare const MailManagerTrafficPolicyIngressStringOperator: {
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
    readonly StartsWith: "STARTS_WITH";
    readonly EndsWith: "ENDS_WITH";
    readonly Contains: "CONTAINS";
};
export type MailManagerTrafficPolicyIngressStringOperator = (typeof MailManagerTrafficPolicyIngressStringOperator)[keyof typeof MailManagerTrafficPolicyIngressStringOperator];
export declare const MailManagerTrafficPolicyIngressTlsAttribute: {
    readonly TlsProtocol: "TLS_PROTOCOL";
};
export type MailManagerTrafficPolicyIngressTlsAttribute = (typeof MailManagerTrafficPolicyIngressTlsAttribute)[keyof typeof MailManagerTrafficPolicyIngressTlsAttribute];
export declare const MailManagerTrafficPolicyIngressTlsProtocolAttribute: {
    readonly Tls12: "TLS1_2";
    readonly Tls13: "TLS1_3";
};
export type MailManagerTrafficPolicyIngressTlsProtocolAttribute = (typeof MailManagerTrafficPolicyIngressTlsProtocolAttribute)[keyof typeof MailManagerTrafficPolicyIngressTlsProtocolAttribute];
export declare const MailManagerTrafficPolicyIngressTlsProtocolOperator: {
    readonly MinimumTlsVersion: "MINIMUM_TLS_VERSION";
    readonly Is: "IS";
};
export type MailManagerTrafficPolicyIngressTlsProtocolOperator = (typeof MailManagerTrafficPolicyIngressTlsProtocolOperator)[keyof typeof MailManagerTrafficPolicyIngressTlsProtocolOperator];
