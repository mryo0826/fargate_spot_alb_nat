export declare const DataSourceEnableSetting: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
/**
 * Specifies whether the data source is enabled.
 */
export type DataSourceEnableSetting = (typeof DataSourceEnableSetting)[keyof typeof DataSourceEnableSetting];
export declare const DataSourceFilterExpressionType: {
    readonly Include: "INCLUDE";
    readonly Exclude: "EXCLUDE";
};
/**
 * The search filter expression type.
 */
export type DataSourceFilterExpressionType = (typeof DataSourceFilterExpressionType)[keyof typeof DataSourceFilterExpressionType];
export declare const DataSourceStatus: {
    readonly Creating: "CREATING";
    readonly FailedCreation: "FAILED_CREATION";
    readonly Ready: "READY";
    readonly Updating: "UPDATING";
    readonly FailedUpdate: "FAILED_UPDATE";
    readonly Running: "RUNNING";
    readonly Deleting: "DELETING";
    readonly FailedDeletion: "FAILED_DELETION";
};
/**
 * The status of the data source.
 */
export type DataSourceStatus = (typeof DataSourceStatus)[keyof typeof DataSourceStatus];
export declare const DomainAuthType: {
    readonly IamIdc: "IAM_IDC";
    readonly Disabled: "DISABLED";
};
/**
 * The type of single sign-on in Amazon DataZone.
 */
export type DomainAuthType = (typeof DomainAuthType)[keyof typeof DomainAuthType];
export declare const DomainStatus: {
    readonly Creating: "CREATING";
    readonly Available: "AVAILABLE";
    readonly CreationFailed: "CREATION_FAILED";
    readonly Deleting: "DELETING";
    readonly Deleted: "DELETED";
    readonly DeletionFailed: "DELETION_FAILED";
};
/**
 * The status of the Amazon DataZone domain.
 */
export type DomainStatus = (typeof DomainStatus)[keyof typeof DomainStatus];
export declare const DomainUserAssignment: {
    readonly Automatic: "AUTOMATIC";
    readonly Manual: "MANUAL";
};
/**
 * The single sign-on user assignment in Amazon DataZone.
 */
export type DomainUserAssignment = (typeof DomainUserAssignment)[keyof typeof DomainUserAssignment];
export declare const EnvironmentStatus: {
    readonly Active: "ACTIVE";
    readonly Creating: "CREATING";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly CreateFailed: "CREATE_FAILED";
    readonly UpdateFailed: "UPDATE_FAILED";
    readonly DeleteFailed: "DELETE_FAILED";
    readonly ValidationFailed: "VALIDATION_FAILED";
    readonly Suspended: "SUSPENDED";
    readonly Disabled: "DISABLED";
    readonly Expired: "EXPIRED";
    readonly Deleted: "DELETED";
    readonly Inaccessible: "INACCESSIBLE";
};
/**
 * The status of the Amazon DataZone environment.
 */
export type EnvironmentStatus = (typeof EnvironmentStatus)[keyof typeof EnvironmentStatus];
export declare const GroupProfileStatus: {
    readonly Assigned: "ASSIGNED";
    readonly NotAssigned: "NOT_ASSIGNED";
};
/**
 * The status of the group profile.
 */
export type GroupProfileStatus = (typeof GroupProfileStatus)[keyof typeof GroupProfileStatus];
export declare const ProjectMembershipUserDesignation: {
    readonly ProjectOwner: "PROJECT_OWNER";
    readonly ProjectContributor: "PROJECT_CONTRIBUTOR";
    readonly ProjectCatalogViewer: "PROJECT_CATALOG_VIEWER";
    readonly ProjectCatalogConsumer: "PROJECT_CATALOG_CONSUMER";
    readonly ProjectCatalogSteward: "PROJECT_CATALOG_STEWARD";
};
export type ProjectMembershipUserDesignation = (typeof ProjectMembershipUserDesignation)[keyof typeof ProjectMembershipUserDesignation];
export declare const UserProfileStatus: {
    readonly Assigned: "ASSIGNED";
    readonly NotAssigned: "NOT_ASSIGNED";
    readonly Activated: "ACTIVATED";
    readonly Deactivated: "DEACTIVATED";
};
/**
 * The status of the user profile.
 */
export type UserProfileStatus = (typeof UserProfileStatus)[keyof typeof UserProfileStatus];
export declare const UserProfileType: {
    readonly Iam: "IAM";
    readonly Sso: "SSO";
};
/**
 * The type of the user profile.
 */
export type UserProfileType = (typeof UserProfileType)[keyof typeof UserProfileType];
export declare const UserProfileUserType: {
    readonly IamUser: "IAM_USER";
    readonly IamRole: "IAM_ROLE";
    readonly SsoUser: "SSO_USER";
};
/**
 * The type of the user.
 */
export type UserProfileUserType = (typeof UserProfileUserType)[keyof typeof UserProfileUserType];
