export declare const ApplicationAttachmentsControlMode: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type ApplicationAttachmentsControlMode = (typeof ApplicationAttachmentsControlMode)[keyof typeof ApplicationAttachmentsControlMode];
export declare const ApplicationAutoSubscriptionStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type ApplicationAutoSubscriptionStatus = (typeof ApplicationAutoSubscriptionStatus)[keyof typeof ApplicationAutoSubscriptionStatus];
export declare const ApplicationIdentityType: {
    readonly AwsIamIdpSaml: "AWS_IAM_IDP_SAML";
    readonly AwsIamIdpOidc: "AWS_IAM_IDP_OIDC";
    readonly AwsIamIdc: "AWS_IAM_IDC";
    readonly AwsQuicksightIdp: "AWS_QUICKSIGHT_IDP";
};
export type ApplicationIdentityType = (typeof ApplicationIdentityType)[keyof typeof ApplicationIdentityType];
export declare const ApplicationPersonalizationControlMode: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type ApplicationPersonalizationControlMode = (typeof ApplicationPersonalizationControlMode)[keyof typeof ApplicationPersonalizationControlMode];
export declare const ApplicationQAppsControlMode: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type ApplicationQAppsControlMode = (typeof ApplicationQAppsControlMode)[keyof typeof ApplicationQAppsControlMode];
export declare const ApplicationStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Deleting: "DELETING";
    readonly Failed: "FAILED";
    readonly Updating: "UPDATING";
};
export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus];
export declare const ApplicationSubscriptionType: {
    readonly QLite: "Q_LITE";
    readonly QBusiness: "Q_BUSINESS";
};
export type ApplicationSubscriptionType = (typeof ApplicationSubscriptionType)[keyof typeof ApplicationSubscriptionType];
export declare const DataSourceAttributeValueOperator: {
    readonly Delete: "DELETE";
};
export type DataSourceAttributeValueOperator = (typeof DataSourceAttributeValueOperator)[keyof typeof DataSourceAttributeValueOperator];
export declare const DataSourceDocumentContentOperator: {
    readonly Delete: "DELETE";
};
export type DataSourceDocumentContentOperator = (typeof DataSourceDocumentContentOperator)[keyof typeof DataSourceDocumentContentOperator];
export declare const DataSourceDocumentEnrichmentConditionOperator: {
    readonly GreaterThan: "GREATER_THAN";
    readonly GreaterThanOrEquals: "GREATER_THAN_OR_EQUALS";
    readonly LessThan: "LESS_THAN";
    readonly LessThanOrEquals: "LESS_THAN_OR_EQUALS";
    readonly Equals: "EQUALS";
    readonly NotEquals: "NOT_EQUALS";
    readonly Contains: "CONTAINS";
    readonly NotContains: "NOT_CONTAINS";
    readonly Exists: "EXISTS";
    readonly NotExists: "NOT_EXISTS";
    readonly BeginsWith: "BEGINS_WITH";
};
export type DataSourceDocumentEnrichmentConditionOperator = (typeof DataSourceDocumentEnrichmentConditionOperator)[keyof typeof DataSourceDocumentEnrichmentConditionOperator];
export declare const DataSourceImageExtractionStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type DataSourceImageExtractionStatus = (typeof DataSourceImageExtractionStatus)[keyof typeof DataSourceImageExtractionStatus];
export declare const DataSourceStatus: {
    readonly PendingCreation: "PENDING_CREATION";
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Deleting: "DELETING";
    readonly Failed: "FAILED";
    readonly Updating: "UPDATING";
};
export type DataSourceStatus = (typeof DataSourceStatus)[keyof typeof DataSourceStatus];
export declare const IndexAttributeType: {
    readonly String: "STRING";
    readonly StringList: "STRING_LIST";
    readonly Number: "NUMBER";
    readonly Date: "DATE";
};
export type IndexAttributeType = (typeof IndexAttributeType)[keyof typeof IndexAttributeType];
export declare const IndexStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Deleting: "DELETING";
    readonly Failed: "FAILED";
    readonly Updating: "UPDATING";
};
export type IndexStatus = (typeof IndexStatus)[keyof typeof IndexStatus];
export declare const IndexType: {
    readonly Enterprise: "ENTERPRISE";
    readonly Starter: "STARTER";
};
export type IndexType = (typeof IndexType)[keyof typeof IndexType];
export declare const PluginApiSchemaType: {
    readonly OpenApiV3: "OPEN_API_V3";
};
export type PluginApiSchemaType = (typeof PluginApiSchemaType)[keyof typeof PluginApiSchemaType];
export declare const PluginBuildStatus: {
    readonly Ready: "READY";
    readonly CreateInProgress: "CREATE_IN_PROGRESS";
    readonly CreateFailed: "CREATE_FAILED";
    readonly UpdateInProgress: "UPDATE_IN_PROGRESS";
    readonly UpdateFailed: "UPDATE_FAILED";
    readonly DeleteInProgress: "DELETE_IN_PROGRESS";
    readonly DeleteFailed: "DELETE_FAILED";
};
export type PluginBuildStatus = (typeof PluginBuildStatus)[keyof typeof PluginBuildStatus];
export declare const PluginState: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type PluginState = (typeof PluginState)[keyof typeof PluginState];
export declare const PluginType: {
    readonly ServiceNow: "SERVICE_NOW";
    readonly Salesforce: "SALESFORCE";
    readonly Jira: "JIRA";
    readonly Zendesk: "ZENDESK";
    readonly Custom: "CUSTOM";
    readonly Quicksight: "QUICKSIGHT";
    readonly ServicenowNowPlatform: "SERVICENOW_NOW_PLATFORM";
    readonly JiraCloud: "JIRA_CLOUD";
    readonly SalesforceCrm: "SALESFORCE_CRM";
    readonly ZendeskSuite: "ZENDESK_SUITE";
    readonly AtlassianConfluence: "ATLASSIAN_CONFLUENCE";
    readonly GoogleCalendar: "GOOGLE_CALENDAR";
    readonly MicrosoftTeams: "MICROSOFT_TEAMS";
    readonly MicrosoftExchange: "MICROSOFT_EXCHANGE";
    readonly PagerdutyAdvance: "PAGERDUTY_ADVANCE";
    readonly Smartsheet: "SMARTSHEET";
    readonly Asana: "ASANA";
};
export type PluginType = (typeof PluginType)[keyof typeof PluginType];
export declare const QBusinessIndexStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type QBusinessIndexStatus = (typeof QBusinessIndexStatus)[keyof typeof QBusinessIndexStatus];
export declare const RetrieverStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Failed: "FAILED";
};
export type RetrieverStatus = (typeof RetrieverStatus)[keyof typeof RetrieverStatus];
export declare const RetrieverType: {
    readonly NativeIndex: "NATIVE_INDEX";
    readonly KendraIndex: "KENDRA_INDEX";
};
export type RetrieverType = (typeof RetrieverType)[keyof typeof RetrieverType];
export declare const WebExperienceSamplePromptsControlMode: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
export type WebExperienceSamplePromptsControlMode = (typeof WebExperienceSamplePromptsControlMode)[keyof typeof WebExperienceSamplePromptsControlMode];
export declare const WebExperienceStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Deleting: "DELETING";
    readonly Failed: "FAILED";
    readonly PendingAuthConfig: "PENDING_AUTH_CONFIG";
};
export type WebExperienceStatus = (typeof WebExperienceStatus)[keyof typeof WebExperienceStatus];
