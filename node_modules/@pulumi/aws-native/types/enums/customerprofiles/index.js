"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SegmentDefinitionStringDimensionType = exports.SegmentDefinitionRangeOverrideUnit = exports.SegmentDefinitionIncludeOptions = exports.SegmentDefinitionDateDimensionType = exports.SegmentDefinitionAttributeDimensionType = exports.ObjectTypeKeyStandardIdentifiersItem = exports.ObjectTypeFieldContentType = exports.IntegrationZendeskConnectorOperator = exports.IntegrationTriggerType = exports.IntegrationTaskType = exports.IntegrationServiceNowConnectorOperator = exports.IntegrationScheduledTriggerPropertiesDataPullMode = exports.IntegrationSalesforceConnectorOperator = exports.IntegrationS3ConnectorOperator = exports.IntegrationOperatorPropertiesKeys = exports.IntegrationMarketoConnectorOperator = exports.IntegrationConnectorType = exports.EventStreamStatus = exports.EventStreamState = exports.DomainRuleBasedMatchingStatus = exports.DomainJobScheduleDayOfTheWeek = exports.DomainConflictResolutionConflictResolvingModel = exports.DomainAttributeTypesSelectorAttributeMatchingModel = exports.CalculatedAttributeDefinitionThresholdOperator = exports.CalculatedAttributeDefinitionStatistic = exports.CalculatedAttributeDefinitionRangeUnit = void 0;
exports.CalculatedAttributeDefinitionRangeUnit = {
    Days: "DAYS",
};
exports.CalculatedAttributeDefinitionStatistic = {
    FirstOccurrence: "FIRST_OCCURRENCE",
    LastOccurrence: "LAST_OCCURRENCE",
    Count: "COUNT",
    Sum: "SUM",
    Minimum: "MINIMUM",
    Maximum: "MAXIMUM",
    Average: "AVERAGE",
    MaxOccurrence: "MAX_OCCURRENCE",
};
exports.CalculatedAttributeDefinitionThresholdOperator = {
    EqualTo: "EQUAL_TO",
    GreaterThan: "GREATER_THAN",
    LessThan: "LESS_THAN",
    NotEqualTo: "NOT_EQUAL_TO",
};
exports.DomainAttributeTypesSelectorAttributeMatchingModel = {
    OneToOne: "ONE_TO_ONE",
    ManyToMany: "MANY_TO_MANY",
};
exports.DomainConflictResolutionConflictResolvingModel = {
    Recency: "RECENCY",
    Source: "SOURCE",
};
exports.DomainJobScheduleDayOfTheWeek = {
    Sunday: "SUNDAY",
    Monday: "MONDAY",
    Tuesday: "TUESDAY",
    Wednesday: "WEDNESDAY",
    Thursday: "THURSDAY",
    Friday: "FRIDAY",
    Saturday: "SATURDAY",
};
exports.DomainRuleBasedMatchingStatus = {
    Pending: "PENDING",
    InProgress: "IN_PROGRESS",
    Active: "ACTIVE",
};
exports.EventStreamState = {
    Running: "RUNNING",
    Stopped: "STOPPED",
};
exports.EventStreamStatus = {
    Healthy: "HEALTHY",
    Unhealthy: "UNHEALTHY",
};
exports.IntegrationConnectorType = {
    Salesforce: "Salesforce",
    Marketo: "Marketo",
    ServiceNow: "ServiceNow",
    Zendesk: "Zendesk",
    S3: "S3",
};
exports.IntegrationMarketoConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Between: "BETWEEN",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
};
exports.IntegrationOperatorPropertiesKeys = {
    Value: "VALUE",
    Values: "VALUES",
    DataType: "DATA_TYPE",
    UpperBound: "UPPER_BOUND",
    LowerBound: "LOWER_BOUND",
    SourceDataType: "SOURCE_DATA_TYPE",
    DestinationDataType: "DESTINATION_DATA_TYPE",
    ValidationAction: "VALIDATION_ACTION",
    MaskValue: "MASK_VALUE",
    MaskLength: "MASK_LENGTH",
    TruncateLength: "TRUNCATE_LENGTH",
    MathOperationFieldsOrder: "MATH_OPERATION_FIELDS_ORDER",
    ConcatFormat: "CONCAT_FORMAT",
    SubfieldCategoryMap: "SUBFIELD_CATEGORY_MAP",
};
exports.IntegrationS3ConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
};
exports.IntegrationSalesforceConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Contains: "CONTAINS",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
};
exports.IntegrationScheduledTriggerPropertiesDataPullMode = {
    Incremental: "Incremental",
    Complete: "Complete",
};
exports.IntegrationServiceNowConnectorOperator = {
    Projection: "PROJECTION",
    LessThan: "LESS_THAN",
    GreaterThan: "GREATER_THAN",
    Contains: "CONTAINS",
    Between: "BETWEEN",
    LessThanOrEqualTo: "LESS_THAN_OR_EQUAL_TO",
    GreaterThanOrEqualTo: "GREATER_THAN_OR_EQUAL_TO",
    EqualTo: "EQUAL_TO",
    NotEqualTo: "NOT_EQUAL_TO",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
};
exports.IntegrationTaskType = {
    Arithmetic: "Arithmetic",
    Filter: "Filter",
    Map: "Map",
    Mask: "Mask",
    Merge: "Merge",
    Truncate: "Truncate",
    Validate: "Validate",
};
exports.IntegrationTriggerType = {
    Scheduled: "Scheduled",
    Event: "Event",
    OnDemand: "OnDemand",
};
exports.IntegrationZendeskConnectorOperator = {
    Projection: "PROJECTION",
    GreaterThan: "GREATER_THAN",
    Addition: "ADDITION",
    Multiplication: "MULTIPLICATION",
    Division: "DIVISION",
    Subtraction: "SUBTRACTION",
    MaskAll: "MASK_ALL",
    MaskFirstN: "MASK_FIRST_N",
    MaskLastN: "MASK_LAST_N",
    ValidateNonNull: "VALIDATE_NON_NULL",
    ValidateNonZero: "VALIDATE_NON_ZERO",
    ValidateNonNegative: "VALIDATE_NON_NEGATIVE",
    ValidateNumeric: "VALIDATE_NUMERIC",
    NoOp: "NO_OP",
};
exports.ObjectTypeFieldContentType = {
    String: "STRING",
    Number: "NUMBER",
    PhoneNumber: "PHONE_NUMBER",
    EmailAddress: "EMAIL_ADDRESS",
    Name: "NAME",
};
exports.ObjectTypeKeyStandardIdentifiersItem = {
    Profile: "PROFILE",
    Unique: "UNIQUE",
    Secondary: "SECONDARY",
    LookupOnly: "LOOKUP_ONLY",
    NewOnly: "NEW_ONLY",
    Asset: "ASSET",
    Case: "CASE",
    Order: "ORDER",
};
exports.SegmentDefinitionAttributeDimensionType = {
    Inclusive: "INCLUSIVE",
    Exclusive: "EXCLUSIVE",
    Contains: "CONTAINS",
    BeginsWith: "BEGINS_WITH",
    EndsWith: "ENDS_WITH",
    Before: "BEFORE",
    After: "AFTER",
    Between: "BETWEEN",
    NotBetween: "NOT_BETWEEN",
    On: "ON",
    GreaterThan: "GREATER_THAN",
    LessThan: "LESS_THAN",
    GreaterThanOrEqual: "GREATER_THAN_OR_EQUAL",
    LessThanOrEqual: "LESS_THAN_OR_EQUAL",
    Equal: "EQUAL",
};
exports.SegmentDefinitionDateDimensionType = {
    Before: "BEFORE",
    After: "AFTER",
    Between: "BETWEEN",
    NotBetween: "NOT_BETWEEN",
    On: "ON",
};
exports.SegmentDefinitionIncludeOptions = {
    All: "ALL",
    Any: "ANY",
    None: "NONE",
};
exports.SegmentDefinitionRangeOverrideUnit = {
    Days: "DAYS",
};
exports.SegmentDefinitionStringDimensionType = {
    Inclusive: "INCLUSIVE",
    Exclusive: "EXCLUSIVE",
    Contains: "CONTAINS",
    BeginsWith: "BEGINS_WITH",
    EndsWith: "ENDS_WITH",
};
//# sourceMappingURL=index.js.map