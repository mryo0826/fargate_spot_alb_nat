"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeActivationVersionBump = exports.TypeActivationType = exports.StackStatus = exports.StackSetRegionConcurrencyType = exports.StackSetPermissionModel = exports.StackSetDeploymentTargetsAccountFilterType = exports.StackSetConcurrencyMode = exports.StackSetCapability = exports.StackSetCallAs = exports.StackCapabilitiesItem = exports.ResourceVersionVisibility = exports.ResourceVersionProvisioningType = exports.PublisherStatus = exports.PublisherIdentityProvider = exports.PublicTypeVersionType = exports.ModuleVersionVisibility = exports.LambdaHookTargetOperation = exports.LambdaHookStackFiltersPropertiesFilteringCriteria = exports.LambdaHookInvocationPoint = exports.LambdaHookHookStatus = exports.LambdaHookFailureMode = exports.LambdaHookAction = exports.HookVersionVisibility = exports.HookTypeConfigConfigurationAlias = exports.GuardHookTargetOperation = exports.GuardHookStackFiltersPropertiesFilteringCriteria = exports.GuardHookInvocationPoint = exports.GuardHookHookStatus = exports.GuardHookFailureMode = exports.GuardHookAction = void 0;
exports.GuardHookAction = {
    Create: "CREATE",
    Update: "UPDATE",
    Delete: "DELETE",
};
exports.GuardHookFailureMode = {
    Fail: "FAIL",
    Warn: "WARN",
};
exports.GuardHookHookStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.GuardHookInvocationPoint = {
    PreProvision: "PRE_PROVISION",
};
exports.GuardHookStackFiltersPropertiesFilteringCriteria = {
    All: "ALL",
    Any: "ANY",
};
exports.GuardHookTargetOperation = {
    Resource: "RESOURCE",
    Stack: "STACK",
    ChangeSet: "CHANGE_SET",
    CloudControl: "CLOUD_CONTROL",
};
exports.HookTypeConfigConfigurationAlias = {
    Default: "default",
};
exports.HookVersionVisibility = {
    Public: "PUBLIC",
    Private: "PRIVATE",
};
exports.LambdaHookAction = {
    Create: "CREATE",
    Update: "UPDATE",
    Delete: "DELETE",
};
exports.LambdaHookFailureMode = {
    Fail: "FAIL",
    Warn: "WARN",
};
exports.LambdaHookHookStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.LambdaHookInvocationPoint = {
    PreProvision: "PRE_PROVISION",
};
exports.LambdaHookStackFiltersPropertiesFilteringCriteria = {
    All: "ALL",
    Any: "ANY",
};
exports.LambdaHookTargetOperation = {
    Resource: "RESOURCE",
    Stack: "STACK",
    ChangeSet: "CHANGE_SET",
    CloudControl: "CLOUD_CONTROL",
};
exports.ModuleVersionVisibility = {
    Private: "PRIVATE",
};
exports.PublicTypeVersionType = {
    Resource: "RESOURCE",
    Module: "MODULE",
    Hook: "HOOK",
};
exports.PublisherIdentityProvider = {
    AwsMarketplace: "AWS_Marketplace",
    GitHub: "GitHub",
    Bitbucket: "Bitbucket",
};
exports.PublisherStatus = {
    Verified: "VERIFIED",
    Unverified: "UNVERIFIED",
};
exports.ResourceVersionProvisioningType = {
    NonProvisionable: "NON_PROVISIONABLE",
    Immutable: "IMMUTABLE",
    FullyMutable: "FULLY_MUTABLE",
};
exports.ResourceVersionVisibility = {
    Public: "PUBLIC",
    Private: "PRIVATE",
};
exports.StackCapabilitiesItem = {
    CapabilityIam: "CAPABILITY_IAM",
    CapabilityNamedIam: "CAPABILITY_NAMED_IAM",
    CapabilityAutoExpand: "CAPABILITY_AUTO_EXPAND",
};
exports.StackSetCallAs = {
    Self: "SELF",
    DelegatedAdmin: "DELEGATED_ADMIN",
};
exports.StackSetCapability = {
    CapabilityIam: "CAPABILITY_IAM",
    CapabilityNamedIam: "CAPABILITY_NAMED_IAM",
    CapabilityAutoExpand: "CAPABILITY_AUTO_EXPAND",
};
exports.StackSetConcurrencyMode = {
    StrictFailureTolerance: "STRICT_FAILURE_TOLERANCE",
    SoftFailureTolerance: "SOFT_FAILURE_TOLERANCE",
};
exports.StackSetDeploymentTargetsAccountFilterType = {
    None: "NONE",
    Union: "UNION",
    Intersection: "INTERSECTION",
    Difference: "DIFFERENCE",
};
exports.StackSetPermissionModel = {
    ServiceManaged: "SERVICE_MANAGED",
    SelfManaged: "SELF_MANAGED",
};
exports.StackSetRegionConcurrencyType = {
    Sequential: "SEQUENTIAL",
    Parallel: "PARALLEL",
};
exports.StackStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    CreateComplete: "CREATE_COMPLETE",
    RollbackInProgress: "ROLLBACK_IN_PROGRESS",
    RollbackFailed: "ROLLBACK_FAILED",
    RollbackComplete: "ROLLBACK_COMPLETE",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    DeleteFailed: "DELETE_FAILED",
    DeleteComplete: "DELETE_COMPLETE",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    UpdateCompleteCleanupInProgress: "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS",
    UpdateComplete: "UPDATE_COMPLETE",
    UpdateFailed: "UPDATE_FAILED",
    UpdateRollbackInProgress: "UPDATE_ROLLBACK_IN_PROGRESS",
    UpdateRollbackFailed: "UPDATE_ROLLBACK_FAILED",
    UpdateRollbackCompleteCleanupInProgress: "UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS",
    UpdateRollbackComplete: "UPDATE_ROLLBACK_COMPLETE",
    ReviewInProgress: "REVIEW_IN_PROGRESS",
    ImportInProgress: "IMPORT_IN_PROGRESS",
    ImportComplete: "IMPORT_COMPLETE",
    ImportRollbackInProgress: "IMPORT_ROLLBACK_IN_PROGRESS",
    ImportRollbackFailed: "IMPORT_ROLLBACK_FAILED",
    ImportRollbackComplete: "IMPORT_ROLLBACK_COMPLETE",
};
exports.TypeActivationType = {
    Resource: "RESOURCE",
    Module: "MODULE",
    Hook: "HOOK",
};
exports.TypeActivationVersionBump = {
    Major: "MAJOR",
    Minor: "MINOR",
};
//# sourceMappingURL=index.js.map