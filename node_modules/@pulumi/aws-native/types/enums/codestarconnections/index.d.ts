export declare const RepositoryLinkProviderType: {
    readonly GitHub: "GitHub";
    readonly Bitbucket: "Bitbucket";
    readonly GitHubEnterprise: "GitHubEnterprise";
    readonly GitLab: "GitLab";
    readonly GitLabSelfManaged: "GitLabSelfManaged";
};
/**
 * The name of the external provider where your third-party code repository is configured.
 */
export type RepositoryLinkProviderType = (typeof RepositoryLinkProviderType)[keyof typeof RepositoryLinkProviderType];
export declare const SyncConfigurationProviderType: {
    readonly GitHub: "GitHub";
    readonly Bitbucket: "Bitbucket";
    readonly GitHubEnterprise: "GitHubEnterprise";
    readonly GitLab: "GitLab";
    readonly GitLabSelfManaged: "GitLabSelfManaged";
};
/**
 * The name of the external provider where your third-party code repository is configured.
 */
export type SyncConfigurationProviderType = (typeof SyncConfigurationProviderType)[keyof typeof SyncConfigurationProviderType];
export declare const SyncConfigurationPublishDeploymentStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
/**
 * Whether to enable or disable publishing of deployment status to source providers.
 */
export type SyncConfigurationPublishDeploymentStatus = (typeof SyncConfigurationPublishDeploymentStatus)[keyof typeof SyncConfigurationPublishDeploymentStatus];
export declare const SyncConfigurationTriggerResourceUpdateOn: {
    readonly AnyChange: "ANY_CHANGE";
    readonly FileChange: "FILE_CHANGE";
};
/**
 * When to trigger Git sync to begin the stack update.
 */
export type SyncConfigurationTriggerResourceUpdateOn = (typeof SyncConfigurationTriggerResourceUpdateOn)[keyof typeof SyncConfigurationTriggerResourceUpdateOn];
