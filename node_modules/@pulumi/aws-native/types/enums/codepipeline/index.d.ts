export declare const PipelineActionTypeIdCategory: {
    readonly Source: "Source";
    readonly Build: "Build";
    readonly Test: "Test";
    readonly Deploy: "Deploy";
    readonly Invoke: "Invoke";
    readonly Approval: "Approval";
    readonly Compute: "Compute";
};
/**
 * A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below.
 */
export type PipelineActionTypeIdCategory = (typeof PipelineActionTypeIdCategory)[keyof typeof PipelineActionTypeIdCategory];
export declare const PipelineArtifactStoreType: {
    readonly S3: "S3";
};
/**
 * The type of the artifact store, such as S3.
 */
export type PipelineArtifactStoreType = (typeof PipelineArtifactStoreType)[keyof typeof PipelineArtifactStoreType];
export declare const PipelineBlockerDeclarationType: {
    readonly Schedule: "Schedule";
};
/**
 * Reserved for future use.
 */
export type PipelineBlockerDeclarationType = (typeof PipelineBlockerDeclarationType)[keyof typeof PipelineBlockerDeclarationType];
export declare const PipelineExecutionMode: {
    readonly Queued: "QUEUED";
    readonly Superseded: "SUPERSEDED";
    readonly Parallel: "PARALLEL";
};
/**
 * The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
 */
export type PipelineExecutionMode = (typeof PipelineExecutionMode)[keyof typeof PipelineExecutionMode];
export declare const PipelineFailureConditionsResult: {
    readonly Rollback: "ROLLBACK";
    readonly Retry: "RETRY";
};
/**
 * The specified result for when the failure conditions are met, such as rolling back the stage
 */
export type PipelineFailureConditionsResult = (typeof PipelineFailureConditionsResult)[keyof typeof PipelineFailureConditionsResult];
export declare const PipelineFailureConditionsRetryConfigurationPropertiesRetryMode: {
    readonly AllActions: "ALL_ACTIONS";
    readonly FailedActions: "FAILED_ACTIONS";
};
/**
 * The specified retry mode type for the given stage. FAILED_ACTIONS will retry only the failed actions. ALL_ACTIONS will retry both failed and successful
 */
export type PipelineFailureConditionsRetryConfigurationPropertiesRetryMode = (typeof PipelineFailureConditionsRetryConfigurationPropertiesRetryMode)[keyof typeof PipelineFailureConditionsRetryConfigurationPropertiesRetryMode];
export declare const PipelineTriggerDeclarationProviderType: {
    readonly CodeStarSourceConnection: "CodeStarSourceConnection";
};
/**
 * The source provider for the event, such as connections configured for a repository with Git tags, for the specified trigger configuration.
 */
export type PipelineTriggerDeclarationProviderType = (typeof PipelineTriggerDeclarationProviderType)[keyof typeof PipelineTriggerDeclarationProviderType];
export declare const PipelineType: {
    readonly V1: "V1";
    readonly V2: "V2";
};
/**
 * CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
 */
export type PipelineType = (typeof PipelineType)[keyof typeof PipelineType];
