"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TlsInspectionConfigurationUnknownStatusAction = exports.TlsInspectionConfigurationRevokedStatusAction = exports.RuleGroupTypeEnum = exports.RuleGroupTcpFlag = exports.RuleGroupTargetType = exports.RuleGroupStatefulRuleAction = exports.RuleGroupRuleOrder = exports.RuleGroupHeaderProtocol = exports.RuleGroupHeaderDirection = exports.RuleGroupGeneratedRulesType = exports.LoggingConfigurationLogDestinationConfigLogType = exports.LoggingConfigurationLogDestinationConfigLogDestinationType = exports.FirewallPolicyStreamExceptionPolicy = exports.FirewallPolicyRuleOrder = exports.FirewallPolicyOverrideAction = void 0;
exports.FirewallPolicyOverrideAction = {
    DropToAlert: "DROP_TO_ALERT",
};
exports.FirewallPolicyRuleOrder = {
    DefaultActionOrder: "DEFAULT_ACTION_ORDER",
    StrictOrder: "STRICT_ORDER",
};
exports.FirewallPolicyStreamExceptionPolicy = {
    Drop: "DROP",
    Continue: "CONTINUE",
    Reject: "REJECT",
};
exports.LoggingConfigurationLogDestinationConfigLogDestinationType = {
    S3: "S3",
    CloudWatchLogs: "CloudWatchLogs",
    KinesisDataFirehose: "KinesisDataFirehose",
};
exports.LoggingConfigurationLogDestinationConfigLogType = {
    Alert: "ALERT",
    Flow: "FLOW",
    Tls: "TLS",
};
exports.RuleGroupGeneratedRulesType = {
    Allowlist: "ALLOWLIST",
    Denylist: "DENYLIST",
};
exports.RuleGroupHeaderDirection = {
    Forward: "FORWARD",
    Any: "ANY",
};
exports.RuleGroupHeaderProtocol = {
    Ip: "IP",
    Tcp: "TCP",
    Udp: "UDP",
    Icmp: "ICMP",
    Http: "HTTP",
    Ftp: "FTP",
    Tls: "TLS",
    Smb: "SMB",
    Dns: "DNS",
    Dcerpc: "DCERPC",
    Ssh: "SSH",
    Smtp: "SMTP",
    Imap: "IMAP",
    Msn: "MSN",
    Krb5: "KRB5",
    Ikev2: "IKEV2",
    Tftp: "TFTP",
    Ntp: "NTP",
    Dhcp: "DHCP",
};
exports.RuleGroupRuleOrder = {
    DefaultActionOrder: "DEFAULT_ACTION_ORDER",
    StrictOrder: "STRICT_ORDER",
};
exports.RuleGroupStatefulRuleAction = {
    Pass: "PASS",
    Drop: "DROP",
    Alert: "ALERT",
    Reject: "REJECT",
};
exports.RuleGroupTargetType = {
    TlsSni: "TLS_SNI",
    HttpHost: "HTTP_HOST",
};
exports.RuleGroupTcpFlag = {
    Fin: "FIN",
    Syn: "SYN",
    Rst: "RST",
    Psh: "PSH",
    Ack: "ACK",
    Urg: "URG",
    Ece: "ECE",
    Cwr: "CWR",
};
exports.RuleGroupTypeEnum = {
    Stateless: "STATELESS",
    Stateful: "STATEFUL",
};
exports.TlsInspectionConfigurationRevokedStatusAction = {
    Pass: "PASS",
    Drop: "DROP",
    Reject: "REJECT",
};
exports.TlsInspectionConfigurationUnknownStatusAction = {
    Pass: "PASS",
    Drop: "DROP",
    Reject: "REJECT",
};
//# sourceMappingURL=index.js.map