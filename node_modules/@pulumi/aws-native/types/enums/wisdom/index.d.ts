export declare const AiAgentAiAgentAssociationConfigurationType: {
    readonly KnowledgeBase: "KNOWLEDGE_BASE";
};
export type AiAgentAiAgentAssociationConfigurationType = (typeof AiAgentAiAgentAssociationConfigurationType)[keyof typeof AiAgentAiAgentAssociationConfigurationType];
export declare const AiAgentAiAgentType: {
    readonly ManualSearch: "MANUAL_SEARCH";
    readonly AnswerRecommendation: "ANSWER_RECOMMENDATION";
    readonly SelfService: "SELF_SERVICE";
};
export type AiAgentAiAgentType = (typeof AiAgentAiAgentType)[keyof typeof AiAgentAiAgentType];
export declare const AiAgentKnowledgeBaseSearchType: {
    readonly Hybrid: "HYBRID";
    readonly Semantic: "SEMANTIC";
};
export type AiAgentKnowledgeBaseSearchType = (typeof AiAgentKnowledgeBaseSearchType)[keyof typeof AiAgentKnowledgeBaseSearchType];
export declare const AiGuardrailGuardrailContentFilterType: {
    readonly Sexual: "SEXUAL";
    readonly Violence: "VIOLENCE";
    readonly Hate: "HATE";
    readonly Insults: "INSULTS";
    readonly Misconduct: "MISCONDUCT";
    readonly PromptAttack: "PROMPT_ATTACK";
};
/**
 * Type of text to text filter in content policy
 */
export type AiGuardrailGuardrailContentFilterType = (typeof AiGuardrailGuardrailContentFilterType)[keyof typeof AiGuardrailGuardrailContentFilterType];
export declare const AiGuardrailGuardrailContextualGroundingFilterType: {
    readonly Grounding: "GROUNDING";
    readonly Relevance: "RELEVANCE";
};
/**
 * Type of contextual grounding filter
 */
export type AiGuardrailGuardrailContextualGroundingFilterType = (typeof AiGuardrailGuardrailContextualGroundingFilterType)[keyof typeof AiGuardrailGuardrailContextualGroundingFilterType];
export declare const AiGuardrailGuardrailFilterStrength: {
    readonly None: "NONE";
    readonly Low: "LOW";
    readonly Medium: "MEDIUM";
    readonly High: "HIGH";
};
/**
 * Strength for filters
 */
export type AiGuardrailGuardrailFilterStrength = (typeof AiGuardrailGuardrailFilterStrength)[keyof typeof AiGuardrailGuardrailFilterStrength];
export declare const AiGuardrailGuardrailManagedWordsType: {
    readonly Profanity: "PROFANITY";
};
/**
 * Options for managed words.
 */
export type AiGuardrailGuardrailManagedWordsType = (typeof AiGuardrailGuardrailManagedWordsType)[keyof typeof AiGuardrailGuardrailManagedWordsType];
export declare const AiGuardrailGuardrailPiiEntityType: {
    readonly Address: "ADDRESS";
    readonly Age: "AGE";
    readonly AwsAccessKey: "AWS_ACCESS_KEY";
    readonly AwsSecretKey: "AWS_SECRET_KEY";
    readonly CaHealthNumber: "CA_HEALTH_NUMBER";
    readonly CaSocialInsuranceNumber: "CA_SOCIAL_INSURANCE_NUMBER";
    readonly CreditDebitCardCvv: "CREDIT_DEBIT_CARD_CVV";
    readonly CreditDebitCardExpiry: "CREDIT_DEBIT_CARD_EXPIRY";
    readonly CreditDebitCardNumber: "CREDIT_DEBIT_CARD_NUMBER";
    readonly DriverId: "DRIVER_ID";
    readonly Email: "EMAIL";
    readonly InternationalBankAccountNumber: "INTERNATIONAL_BANK_ACCOUNT_NUMBER";
    readonly IpAddress: "IP_ADDRESS";
    readonly LicensePlate: "LICENSE_PLATE";
    readonly MacAddress: "MAC_ADDRESS";
    readonly Name: "NAME";
    readonly Password: "PASSWORD";
    readonly Phone: "PHONE";
    readonly Pin: "PIN";
    readonly SwiftCode: "SWIFT_CODE";
    readonly UkNationalHealthServiceNumber: "UK_NATIONAL_HEALTH_SERVICE_NUMBER";
    readonly UkNationalInsuranceNumber: "UK_NATIONAL_INSURANCE_NUMBER";
    readonly UkUniqueTaxpayerReferenceNumber: "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER";
    readonly Url: "URL";
    readonly Username: "USERNAME";
    readonly UsBankAccountNumber: "US_BANK_ACCOUNT_NUMBER";
    readonly UsBankRoutingNumber: "US_BANK_ROUTING_NUMBER";
    readonly UsIndividualTaxIdentificationNumber: "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER";
    readonly UsPassportNumber: "US_PASSPORT_NUMBER";
    readonly UsSocialSecurityNumber: "US_SOCIAL_SECURITY_NUMBER";
    readonly VehicleIdentificationNumber: "VEHICLE_IDENTIFICATION_NUMBER";
};
/**
 * The currently supported PII entities
 */
export type AiGuardrailGuardrailPiiEntityType = (typeof AiGuardrailGuardrailPiiEntityType)[keyof typeof AiGuardrailGuardrailPiiEntityType];
export declare const AiGuardrailGuardrailSensitiveInformationAction: {
    readonly Block: "BLOCK";
    readonly Anonymize: "ANONYMIZE";
};
/**
 * Options for sensitive information action.
 */
export type AiGuardrailGuardrailSensitiveInformationAction = (typeof AiGuardrailGuardrailSensitiveInformationAction)[keyof typeof AiGuardrailGuardrailSensitiveInformationAction];
export declare const AiGuardrailGuardrailTopicType: {
    readonly Deny: "DENY";
};
/**
 * Type of topic in a policy
 */
export type AiGuardrailGuardrailTopicType = (typeof AiGuardrailGuardrailTopicType)[keyof typeof AiGuardrailGuardrailTopicType];
export declare const AiPromptAiPromptApiFormat: {
    readonly AnthropicClaudeMessages: "ANTHROPIC_CLAUDE_MESSAGES";
    readonly AnthropicClaudeTextCompletions: "ANTHROPIC_CLAUDE_TEXT_COMPLETIONS";
};
export type AiPromptAiPromptApiFormat = (typeof AiPromptAiPromptApiFormat)[keyof typeof AiPromptAiPromptApiFormat];
export declare const AiPromptAiPromptTemplateType: {
    readonly Text: "TEXT";
};
export type AiPromptAiPromptTemplateType = (typeof AiPromptAiPromptTemplateType)[keyof typeof AiPromptAiPromptTemplateType];
export declare const AiPromptAiPromptType: {
    readonly AnswerGeneration: "ANSWER_GENERATION";
    readonly IntentLabelingGeneration: "INTENT_LABELING_GENERATION";
    readonly QueryReformulation: "QUERY_REFORMULATION";
    readonly SelfServicePreProcessing: "SELF_SERVICE_PRE_PROCESSING";
    readonly SelfServiceAnswerGeneration: "SELF_SERVICE_ANSWER_GENERATION";
};
export type AiPromptAiPromptType = (typeof AiPromptAiPromptType)[keyof typeof AiPromptAiPromptType];
export declare const AssistantAssociationAssociationType: {
    readonly KnowledgeBase: "KNOWLEDGE_BASE";
};
export type AssistantAssociationAssociationType = (typeof AssistantAssociationAssociationType)[keyof typeof AssistantAssociationAssociationType];
export declare const AssistantType: {
    readonly Agent: "AGENT";
};
export type AssistantType = (typeof AssistantType)[keyof typeof AssistantType];
export declare const KnowledgeBaseType: {
    readonly External: "EXTERNAL";
    readonly Custom: "CUSTOM";
    readonly MessageTemplates: "MESSAGE_TEMPLATES";
    readonly Managed: "MANAGED";
};
export type KnowledgeBaseType = (typeof KnowledgeBaseType)[keyof typeof KnowledgeBaseType];
export declare const KnowledgeBaseVectorIngestionConfigurationChunkingConfigurationPropertiesChunkingStrategy: {
    readonly FixedSize: "FIXED_SIZE";
    readonly None: "NONE";
    readonly Hierarchical: "HIERARCHICAL";
    readonly Semantic: "SEMANTIC";
};
export type KnowledgeBaseVectorIngestionConfigurationChunkingConfigurationPropertiesChunkingStrategy = (typeof KnowledgeBaseVectorIngestionConfigurationChunkingConfigurationPropertiesChunkingStrategy)[keyof typeof KnowledgeBaseVectorIngestionConfigurationChunkingConfigurationPropertiesChunkingStrategy];
export declare const KnowledgeBaseVectorIngestionConfigurationParsingConfigurationPropertiesParsingStrategy: {
    readonly BedrockFoundationModel: "BEDROCK_FOUNDATION_MODEL";
};
export type KnowledgeBaseVectorIngestionConfigurationParsingConfigurationPropertiesParsingStrategy = (typeof KnowledgeBaseVectorIngestionConfigurationParsingConfigurationPropertiesParsingStrategy)[keyof typeof KnowledgeBaseVectorIngestionConfigurationParsingConfigurationPropertiesParsingStrategy];
export declare const KnowledgeBaseWebCrawlerConfigurationScope: {
    readonly HostOnly: "HOST_ONLY";
    readonly Subdomains: "SUBDOMAINS";
};
export type KnowledgeBaseWebCrawlerConfigurationScope = (typeof KnowledgeBaseWebCrawlerConfigurationScope)[keyof typeof KnowledgeBaseWebCrawlerConfigurationScope];
export declare const MessageTemplateChannelSubtype: {
    readonly Email: "EMAIL";
    readonly Sms: "SMS";
};
/**
 * The channel subtype this message template applies to.
 */
export type MessageTemplateChannelSubtype = (typeof MessageTemplateChannelSubtype)[keyof typeof MessageTemplateChannelSubtype];
