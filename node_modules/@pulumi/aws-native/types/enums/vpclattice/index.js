"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TargetGroupType = exports.TargetGroupStatus = exports.TargetGroupHealthCheckConfigProtocolVersion = exports.TargetGroupHealthCheckConfigProtocol = exports.TargetGroupConfigProtocolVersion = exports.TargetGroupConfigProtocol = exports.TargetGroupConfigLambdaEventStructureVersion = exports.TargetGroupConfigIpAddressType = exports.ServiceStatus = exports.ServiceNetworkVpcAssociationStatus = exports.ServiceNetworkServiceAssociationStatus = exports.ServiceNetworkAuthType = exports.ServiceAuthType = exports.RuleHttpMatchMethod = exports.ResourceGatewayIpAddressType = exports.ResourceConfigurationType = exports.ResourceConfigurationProtocolType = exports.ResourceConfigurationDnsResourceIpAddressType = exports.ResourceConfigurationAuthType = exports.ListenerProtocol = exports.AuthPolicyState = exports.AccessLogSubscriptionServiceNetworkLogType = void 0;
exports.AccessLogSubscriptionServiceNetworkLogType = {
    Service: "SERVICE",
    Resource: "RESOURCE",
};
exports.AuthPolicyState = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
};
exports.ListenerProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
    TlsPassthrough: "TLS_PASSTHROUGH",
};
exports.ResourceConfigurationAuthType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
};
exports.ResourceConfigurationDnsResourceIpAddressType = {
    Ipv4: "IPV4",
    Ipv6: "IPV6",
    Dualstack: "DUALSTACK",
};
exports.ResourceConfigurationProtocolType = {
    Tcp: "TCP",
};
exports.ResourceConfigurationType = {
    Group: "GROUP",
    Child: "CHILD",
    Single: "SINGLE",
    Arn: "ARN",
};
exports.ResourceGatewayIpAddressType = {
    Ipv4: "IPV4",
    Ipv6: "IPV6",
    Dualstack: "DUALSTACK",
};
exports.RuleHttpMatchMethod = {
    Connect: "CONNECT",
    Delete: "DELETE",
    Get: "GET",
    Head: "HEAD",
    Options: "OPTIONS",
    Post: "POST",
    Put: "PUT",
    Trace: "TRACE",
};
exports.ServiceAuthType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
};
exports.ServiceNetworkAuthType = {
    None: "NONE",
    AwsIam: "AWS_IAM",
};
exports.ServiceNetworkServiceAssociationStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
};
exports.ServiceNetworkVpcAssociationStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    UpdateInProgress: "UPDATE_IN_PROGRESS",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
};
exports.ServiceStatus = {
    Active: "ACTIVE",
    CreateInProgress: "CREATE_IN_PROGRESS",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
};
exports.TargetGroupConfigIpAddressType = {
    Ipv4: "IPV4",
    Ipv6: "IPV6",
};
exports.TargetGroupConfigLambdaEventStructureVersion = {
    V1: "V1",
    V2: "V2",
};
exports.TargetGroupConfigProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
    Tcp: "TCP",
};
exports.TargetGroupConfigProtocolVersion = {
    Http1: "HTTP1",
    Http2: "HTTP2",
    Grpc: "GRPC",
};
exports.TargetGroupHealthCheckConfigProtocol = {
    Http: "HTTP",
    Https: "HTTPS",
};
exports.TargetGroupHealthCheckConfigProtocolVersion = {
    Http1: "HTTP1",
    Http2: "HTTP2",
};
exports.TargetGroupStatus = {
    CreateInProgress: "CREATE_IN_PROGRESS",
    Active: "ACTIVE",
    DeleteInProgress: "DELETE_IN_PROGRESS",
    CreateFailed: "CREATE_FAILED",
    DeleteFailed: "DELETE_FAILED",
};
exports.TargetGroupType = {
    Ip: "IP",
    Lambda: "LAMBDA",
    Instance: "INSTANCE",
    Alb: "ALB",
};
//# sourceMappingURL=index.js.map