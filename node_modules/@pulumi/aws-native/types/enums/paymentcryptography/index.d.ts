export declare const KeyAlgorithm: {
    readonly Tdes2key: "TDES_2KEY";
    readonly Tdes3key: "TDES_3KEY";
    readonly Aes128: "AES_128";
    readonly Aes192: "AES_192";
    readonly Aes256: "AES_256";
    readonly Rsa2048: "RSA_2048";
    readonly Rsa3072: "RSA_3072";
    readonly Rsa4096: "RSA_4096";
    readonly EccNistP256: "ECC_NIST_P256";
    readonly EccNistP384: "ECC_NIST_P384";
};
export type KeyAlgorithm = (typeof KeyAlgorithm)[keyof typeof KeyAlgorithm];
export declare const KeyCheckValueAlgorithm: {
    readonly Cmac: "CMAC";
    readonly AnsiX924: "ANSI_X9_24";
};
export type KeyCheckValueAlgorithm = (typeof KeyCheckValueAlgorithm)[keyof typeof KeyCheckValueAlgorithm];
export declare const KeyClass: {
    readonly SymmetricKey: "SYMMETRIC_KEY";
    readonly AsymmetricKeyPair: "ASYMMETRIC_KEY_PAIR";
    readonly PrivateKey: "PRIVATE_KEY";
    readonly PublicKey: "PUBLIC_KEY";
};
export type KeyClass = (typeof KeyClass)[keyof typeof KeyClass];
export declare const KeyOrigin: {
    readonly External: "EXTERNAL";
    readonly AwsPaymentCryptography: "AWS_PAYMENT_CRYPTOGRAPHY";
};
/**
 * Defines the source of a key
 */
export type KeyOrigin = (typeof KeyOrigin)[keyof typeof KeyOrigin];
export declare const KeyState: {
    readonly CreateInProgress: "CREATE_IN_PROGRESS";
    readonly CreateComplete: "CREATE_COMPLETE";
    readonly DeletePending: "DELETE_PENDING";
    readonly DeleteComplete: "DELETE_COMPLETE";
};
/**
 * Defines the state of a key
 */
export type KeyState = (typeof KeyState)[keyof typeof KeyState];
export declare const KeyUsage: {
    readonly Tr31b0BaseDerivationKey: "TR31_B0_BASE_DERIVATION_KEY";
    readonly Tr31c0CardVerificationKey: "TR31_C0_CARD_VERIFICATION_KEY";
    readonly Tr31d0SymmetricDataEncryptionKey: "TR31_D0_SYMMETRIC_DATA_ENCRYPTION_KEY";
    readonly Tr31d1AsymmetricKeyForDataEncryption: "TR31_D1_ASYMMETRIC_KEY_FOR_DATA_ENCRYPTION";
    readonly Tr31e0EmvMkeyAppCryptograms: "TR31_E0_EMV_MKEY_APP_CRYPTOGRAMS";
    readonly Tr31e1EmvMkeyConfidentiality: "TR31_E1_EMV_MKEY_CONFIDENTIALITY";
    readonly Tr31e2EmvMkeyIntegrity: "TR31_E2_EMV_MKEY_INTEGRITY";
    readonly Tr31e4EmvMkeyDynamicNumbers: "TR31_E4_EMV_MKEY_DYNAMIC_NUMBERS";
    readonly Tr31e5EmvMkeyCardPersonalization: "TR31_E5_EMV_MKEY_CARD_PERSONALIZATION";
    readonly Tr31e6EmvMkeyOther: "TR31_E6_EMV_MKEY_OTHER";
    readonly Tr31k0KeyEncryptionKey: "TR31_K0_KEY_ENCRYPTION_KEY";
    readonly Tr31k1KeyBlockProtectionKey: "TR31_K1_KEY_BLOCK_PROTECTION_KEY";
    readonly Tr31k3AsymmetricKeyForKeyAgreement: "TR31_K3_ASYMMETRIC_KEY_FOR_KEY_AGREEMENT";
    readonly Tr31m3Iso97973MacKey: "TR31_M3_ISO_9797_3_MAC_KEY";
    readonly Tr31m1Iso97971MacKey: "TR31_M1_ISO_9797_1_MAC_KEY";
    readonly Tr31m6Iso97975CmacKey: "TR31_M6_ISO_9797_5_CMAC_KEY";
    readonly Tr31m7HmacKey: "TR31_M7_HMAC_KEY";
    readonly Tr31p0PinEncryptionKey: "TR31_P0_PIN_ENCRYPTION_KEY";
    readonly Tr31p1PinGenerationKey: "TR31_P1_PIN_GENERATION_KEY";
    readonly Tr31s0AsymmetricKeyForDigitalSignature: "TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE";
    readonly Tr31v1Ibm3624PinVerificationKey: "TR31_V1_IBM3624_PIN_VERIFICATION_KEY";
    readonly Tr31v2VisaPinVerificationKey: "TR31_V2_VISA_PIN_VERIFICATION_KEY";
    readonly Tr31k2Tr34AsymmetricKey: "TR31_K2_TR34_ASYMMETRIC_KEY";
};
export type KeyUsage = (typeof KeyUsage)[keyof typeof KeyUsage];
