export declare const AnnotationStoreAnnotationType: {
    readonly Generic: "GENERIC";
    readonly ChrPos: "CHR_POS";
    readonly ChrPosRefAlt: "CHR_POS_REF_ALT";
    readonly ChrStartEndOneBase: "CHR_START_END_ONE_BASE";
    readonly ChrStartEndRefAltOneBase: "CHR_START_END_REF_ALT_ONE_BASE";
    readonly ChrStartEndZeroBase: "CHR_START_END_ZERO_BASE";
    readonly ChrStartEndRefAltZeroBase: "CHR_START_END_REF_ALT_ZERO_BASE";
};
export type AnnotationStoreAnnotationType = (typeof AnnotationStoreAnnotationType)[keyof typeof AnnotationStoreAnnotationType];
export declare const AnnotationStoreEncryptionType: {
    readonly Kms: "KMS";
};
export type AnnotationStoreEncryptionType = (typeof AnnotationStoreEncryptionType)[keyof typeof AnnotationStoreEncryptionType];
export declare const AnnotationStoreSchemaValueType: {
    readonly Long: "LONG";
    readonly Int: "INT";
    readonly String: "STRING";
    readonly Float: "FLOAT";
    readonly Double: "DOUBLE";
    readonly Boolean: "BOOLEAN";
};
export type AnnotationStoreSchemaValueType = (typeof AnnotationStoreSchemaValueType)[keyof typeof AnnotationStoreSchemaValueType];
export declare const AnnotationStoreStoreFormat: {
    readonly Gff: "GFF";
    readonly Tsv: "TSV";
    readonly Vcf: "VCF";
};
export type AnnotationStoreStoreFormat = (typeof AnnotationStoreStoreFormat)[keyof typeof AnnotationStoreStoreFormat];
export declare const AnnotationStoreStoreStatus: {
    readonly Creating: "CREATING";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly Active: "ACTIVE";
    readonly Failed: "FAILED";
};
export type AnnotationStoreStoreStatus = (typeof AnnotationStoreStoreStatus)[keyof typeof AnnotationStoreStoreStatus];
export declare const ReferenceStoreEncryptionType: {
    readonly Kms: "KMS";
};
export type ReferenceStoreEncryptionType = (typeof ReferenceStoreEncryptionType)[keyof typeof ReferenceStoreEncryptionType];
export declare const SequenceStoreEncryptionType: {
    readonly Kms: "KMS";
};
export type SequenceStoreEncryptionType = (typeof SequenceStoreEncryptionType)[keyof typeof SequenceStoreEncryptionType];
export declare const VariantStoreEncryptionType: {
    readonly Kms: "KMS";
};
export type VariantStoreEncryptionType = (typeof VariantStoreEncryptionType)[keyof typeof VariantStoreEncryptionType];
export declare const VariantStoreStoreStatus: {
    readonly Creating: "CREATING";
    readonly Updating: "UPDATING";
    readonly Deleting: "DELETING";
    readonly Active: "ACTIVE";
    readonly Failed: "FAILED";
};
export type VariantStoreStoreStatus = (typeof VariantStoreStoreStatus)[keyof typeof VariantStoreStoreStatus];
export declare const WorkflowAccelerators: {
    readonly Gpu: "GPU";
};
export type WorkflowAccelerators = (typeof WorkflowAccelerators)[keyof typeof WorkflowAccelerators];
export declare const WorkflowEngine: {
    readonly Wdl: "WDL";
    readonly Nextflow: "NEXTFLOW";
    readonly Cwl: "CWL";
};
export type WorkflowEngine = (typeof WorkflowEngine)[keyof typeof WorkflowEngine];
export declare const WorkflowStatus: {
    readonly Creating: "CREATING";
    readonly Active: "ACTIVE";
    readonly Updating: "UPDATING";
    readonly Deleted: "DELETED";
    readonly Failed: "FAILED";
};
export type WorkflowStatus = (typeof WorkflowStatus)[keyof typeof WorkflowStatus];
export declare const WorkflowType: {
    readonly Private: "PRIVATE";
};
export type WorkflowType = (typeof WorkflowType)[keyof typeof WorkflowType];
