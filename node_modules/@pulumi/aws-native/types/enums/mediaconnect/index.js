"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.GatewayState = exports.FlowVpcInterfaceNetworkInterfaceType = exports.FlowSourceProtocol = exports.FlowSourceMonitoringConfigThumbnailState = exports.FlowSourceEncryptionKeyType = exports.FlowSourceEncryptionAlgorithm = exports.FlowOutputProtocol = exports.FlowOutputOutputStatus = exports.FlowOutputMediaStreamOutputConfigurationEncodingName = exports.FlowOutputEncryptionKeyType = exports.FlowOutputEncryptionAlgorithm = exports.FlowOutputEncodingParametersEncoderProfile = exports.FlowMediaStreamVideoFormat = exports.FlowMediaStreamSourceConfigurationEncodingName = exports.FlowMediaStreamMediaStreamType = exports.FlowMaintenanceMaintenanceDay = exports.FlowFmtpTcs = exports.FlowFmtpScanMode = exports.FlowFmtpRange = exports.FlowFmtpColorimetry = exports.FlowFailoverConfigState = exports.FlowFailoverConfigFailoverMode = exports.FlowEntitlementEntitlementStatus = exports.FlowEntitlementEncryptionKeyType = exports.FlowEntitlementEncryptionAlgorithm = exports.FlowEncryptionKeyType = exports.FlowEncryptionAlgorithm = exports.BridgeStateEnum = exports.BridgeSourceProtocolEnum = exports.BridgeProtocolEnum = exports.BridgeOutputResourceBridgeNetworkOutputProtocol = exports.BridgeFailoverModeEnum = exports.BridgeFailoverConfigStateEnum = void 0;
exports.BridgeFailoverConfigStateEnum = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.BridgeFailoverModeEnum = {
    Failover: "FAILOVER",
};
exports.BridgeOutputResourceBridgeNetworkOutputProtocol = {
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    Udp: "udp",
};
exports.BridgeProtocolEnum = {
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    Udp: "udp",
};
exports.BridgeSourceProtocolEnum = {
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    Udp: "udp",
};
exports.BridgeStateEnum = {
    Creating: "CREATING",
    Standby: "STANDBY",
    Starting: "STARTING",
    Deploying: "DEPLOYING",
    Active: "ACTIVE",
    Stopping: "STOPPING",
    Deleting: "DELETING",
    Deleted: "DELETED",
    StartFailed: "START_FAILED",
    StartPending: "START_PENDING",
    Updating: "UPDATING",
};
exports.FlowEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
};
exports.FlowEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
    SrtPassword: "srt-password",
};
exports.FlowEntitlementEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
};
exports.FlowEntitlementEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
};
exports.FlowEntitlementEntitlementStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.FlowFailoverConfigFailoverMode = {
    Merge: "MERGE",
    Failover: "FAILOVER",
};
exports.FlowFailoverConfigState = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.FlowFmtpColorimetry = {
    Bt601: "BT601",
    Bt709: "BT709",
    Bt2020: "BT2020",
    Bt2100: "BT2100",
    St20651: "ST2065-1",
    St20653: "ST2065-3",
    Xyz: "XYZ",
};
exports.FlowFmtpRange = {
    Narrow: "NARROW",
    Full: "FULL",
    Fullprotect: "FULLPROTECT",
};
exports.FlowFmtpScanMode = {
    Progressive: "progressive",
    Interlace: "interlace",
    ProgressiveSegmentedFrame: "progressive-segmented-frame",
};
exports.FlowFmtpTcs = {
    Sdr: "SDR",
    Pq: "PQ",
    Hlg: "HLG",
    Linear: "LINEAR",
    Bt2100linpq: "BT2100LINPQ",
    Bt2100linhlg: "BT2100LINHLG",
    St20651: "ST2065-1",
    St4281: "ST428-1",
    Density: "DENSITY",
};
exports.FlowMaintenanceMaintenanceDay = {
    Monday: "Monday",
    Tuesday: "Tuesday",
    Wednesday: "Wednesday",
    Thursday: "Thursday",
    Friday: "Friday",
    Saturday: "Saturday",
    Sunday: "Sunday",
};
exports.FlowMediaStreamMediaStreamType = {
    Video: "video",
    Audio: "audio",
    AncillaryData: "ancillary-data",
};
exports.FlowMediaStreamSourceConfigurationEncodingName = {
    Jxsv: "jxsv",
    Raw: "raw",
    Smpte291: "smpte291",
    Pcm: "pcm",
};
exports.FlowMediaStreamVideoFormat = {
    FlowMediaStreamVideoFormat_2160p: "2160p",
    FlowMediaStreamVideoFormat_1080p: "1080p",
    FlowMediaStreamVideoFormat_1080i: "1080i",
    FlowMediaStreamVideoFormat_720p: "720p",
    FlowMediaStreamVideoFormat_480p: "480p",
};
exports.FlowOutputEncodingParametersEncoderProfile = {
    Main: "main",
    High: "high",
};
exports.FlowOutputEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
};
exports.FlowOutputEncryptionKeyType = {
    StaticKey: "static-key",
    SrtPassword: "srt-password",
};
exports.FlowOutputMediaStreamOutputConfigurationEncodingName = {
    Jxsv: "jxsv",
    Raw: "raw",
    Smpte291: "smpte291",
    Pcm: "pcm",
};
exports.FlowOutputOutputStatus = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.FlowOutputProtocol = {
    ZixiPush: "zixi-push",
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    ZixiPull: "zixi-pull",
    Rist: "rist",
    FujitsuQos: "fujitsu-qos",
    SrtListener: "srt-listener",
    SrtCaller: "srt-caller",
    St2110Jpegxs: "st2110-jpegxs",
    Cdi: "cdi",
};
exports.FlowSourceEncryptionAlgorithm = {
    Aes128: "aes128",
    Aes192: "aes192",
    Aes256: "aes256",
};
exports.FlowSourceEncryptionKeyType = {
    Speke: "speke",
    StaticKey: "static-key",
    SrtPassword: "srt-password",
};
exports.FlowSourceMonitoringConfigThumbnailState = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.FlowSourceProtocol = {
    ZixiPush: "zixi-push",
    RtpFec: "rtp-fec",
    Rtp: "rtp",
    Rist: "rist",
    FujitsuQos: "fujitsu-qos",
    SrtListener: "srt-listener",
    SrtCaller: "srt-caller",
    St2110Jpegxs: "st2110-jpegxs",
    Cdi: "cdi",
};
exports.FlowVpcInterfaceNetworkInterfaceType = {
    Ena: "ena",
    Efa: "efa",
};
exports.GatewayState = {
    Creating: "CREATING",
    Active: "ACTIVE",
    Updating: "UPDATING",
    Error: "ERROR",
    Deleting: "DELETING",
    Deleted: "DELETED",
};
//# sourceMappingURL=index.js.map