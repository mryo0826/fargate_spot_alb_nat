export declare const MonitorConfigState: {
    readonly Pending: "PENDING";
    readonly Active: "ACTIVE";
    readonly Inactive: "INACTIVE";
    readonly Error: "ERROR";
};
export type MonitorConfigState = (typeof MonitorConfigState)[keyof typeof MonitorConfigState];
export declare const MonitorLocalHealthEventsConfigStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
/**
 * The status of whether Internet Monitor creates a health event based on a threshold percentage set for a local health score. The status can be `ENABLED` or `DISABLED` .
 */
export type MonitorLocalHealthEventsConfigStatus = (typeof MonitorLocalHealthEventsConfigStatus)[keyof typeof MonitorLocalHealthEventsConfigStatus];
export declare const MonitorProcessingStatusCode: {
    readonly Ok: "OK";
    readonly Inactive: "INACTIVE";
    readonly CollectingData: "COLLECTING_DATA";
    readonly InsufficientData: "INSUFFICIENT_DATA";
    readonly FaultService: "FAULT_SERVICE";
    readonly FaultAccessCloudwatch: "FAULT_ACCESS_CLOUDWATCH";
};
export type MonitorProcessingStatusCode = (typeof MonitorProcessingStatusCode)[keyof typeof MonitorProcessingStatusCode];
export declare const MonitorS3ConfigLogDeliveryStatus: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
/**
 * The status of publishing Internet Monitor internet measurements to an Amazon S3 bucket. The delivery status is `ENABLED` if you choose to deliver internet measurements to an S3 bucket, and `DISABLED` otherwise.
 */
export type MonitorS3ConfigLogDeliveryStatus = (typeof MonitorS3ConfigLogDeliveryStatus)[keyof typeof MonitorS3ConfigLogDeliveryStatus];
