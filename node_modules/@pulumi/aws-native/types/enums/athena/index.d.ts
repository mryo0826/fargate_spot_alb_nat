export declare const CapacityReservationStatus: {
    readonly Pending: "PENDING";
    readonly Active: "ACTIVE";
    readonly Cancelling: "CANCELLING";
    readonly Cancelled: "CANCELLED";
    readonly Failed: "FAILED";
    readonly UpdatePending: "UPDATE_PENDING";
};
export type CapacityReservationStatus = (typeof CapacityReservationStatus)[keyof typeof CapacityReservationStatus];
export declare const DataCatalogType: {
    readonly Lambda: "LAMBDA";
    readonly Glue: "GLUE";
    readonly Hive: "HIVE";
};
/**
 * The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore.
 */
export type DataCatalogType = (typeof DataCatalogType)[keyof typeof DataCatalogType];
export declare const WorkGroupEncryptionOption: {
    readonly SseS3: "SSE_S3";
    readonly SseKms: "SSE_KMS";
    readonly CseKms: "CSE_KMS";
};
/**
 * Indicates whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE-S3), server-side encryption with KMS-managed keys (SSE-KMS), or client-side encryption with KMS-managed keys (CSE-KMS) is used.
 */
export type WorkGroupEncryptionOption = (typeof WorkGroupEncryptionOption)[keyof typeof WorkGroupEncryptionOption];
export declare const WorkGroupS3AclOption: {
    readonly BucketOwnerFullControl: "BUCKET_OWNER_FULL_CONTROL";
};
/**
 * The Amazon S3 canned ACL that Athena should specify when storing query results. Currently the only supported canned ACL is BUCKET_OWNER_FULL_CONTROL
 */
export type WorkGroupS3AclOption = (typeof WorkGroupS3AclOption)[keyof typeof WorkGroupS3AclOption];
export declare const WorkGroupState: {
    readonly Enabled: "ENABLED";
    readonly Disabled: "DISABLED";
};
/**
 * The state of the workgroup: ENABLED or DISABLED.
 */
export type WorkGroupState = (typeof WorkGroupState)[keyof typeof WorkGroupState];
