export declare const EnvironmentDayOfWeek: {
    readonly Monday: "MONDAY";
    readonly Tuesday: "TUESDAY";
    readonly Wednesday: "WEDNESDAY";
    readonly Thursday: "THURSDAY";
    readonly Friday: "FRIDAY";
    readonly Saturday: "SATURDAY";
    readonly Sunday: "SUNDAY";
};
export type EnvironmentDayOfWeek = (typeof EnvironmentDayOfWeek)[keyof typeof EnvironmentDayOfWeek];
export declare const EnvironmentDesktopType: {
    readonly Workspaces: "workspaces";
    readonly Appstream: "appstream";
    readonly WorkspacesWeb: "workspaces-web";
};
/**
 * The type of VDI.
 */
export type EnvironmentDesktopType = (typeof EnvironmentDesktopType)[keyof typeof EnvironmentDesktopType];
export declare const EnvironmentMaintenanceWindowApplyTimeOf: {
    readonly Utc: "UTC";
    readonly Device: "DEVICE";
};
/**
 * The desired time zone maintenance window.
 */
export type EnvironmentMaintenanceWindowApplyTimeOf = (typeof EnvironmentMaintenanceWindowApplyTimeOf)[keyof typeof EnvironmentMaintenanceWindowApplyTimeOf];
export declare const EnvironmentMaintenanceWindowType: {
    readonly System: "SYSTEM";
    readonly Custom: "CUSTOM";
};
/**
 * The type of maintenance window.
 */
export type EnvironmentMaintenanceWindowType = (typeof EnvironmentMaintenanceWindowType)[keyof typeof EnvironmentMaintenanceWindowType];
export declare const EnvironmentSoftwareSetComplianceStatus: {
    readonly Compliant: "COMPLIANT";
    readonly NotCompliant: "NOT_COMPLIANT";
    readonly NoRegisteredDevices: "NO_REGISTERED_DEVICES";
};
/**
 * Describes if the software currently installed on all devices in the environment is a supported version.
 */
export type EnvironmentSoftwareSetComplianceStatus = (typeof EnvironmentSoftwareSetComplianceStatus)[keyof typeof EnvironmentSoftwareSetComplianceStatus];
export declare const EnvironmentSoftwareSetUpdateMode: {
    readonly UseLatest: "USE_LATEST";
    readonly UseDesired: "USE_DESIRED";
};
/**
 * An option to define which software updates to apply.
 */
export type EnvironmentSoftwareSetUpdateMode = (typeof EnvironmentSoftwareSetUpdateMode)[keyof typeof EnvironmentSoftwareSetUpdateMode];
export declare const EnvironmentSoftwareSetUpdateSchedule: {
    readonly UseMaintenanceWindow: "USE_MAINTENANCE_WINDOW";
    readonly ApplyImmediately: "APPLY_IMMEDIATELY";
};
/**
 * An option to define if software updates should be applied within a maintenance window.
 */
export type EnvironmentSoftwareSetUpdateSchedule = (typeof EnvironmentSoftwareSetUpdateSchedule)[keyof typeof EnvironmentSoftwareSetUpdateSchedule];
