"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowType = exports.LifecyclePolicyTimeUnit = exports.LifecyclePolicyStatus = exports.LifecyclePolicyResourceType = exports.LifecyclePolicyFilterType = exports.LifecyclePolicyActionType = exports.InfrastructureConfigurationPlacementTenancy = exports.InfrastructureConfigurationInstanceMetadataOptionsHttpTokens = exports.ImageWorkflowConfigurationOnFailure = exports.ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType = exports.ImagePipelineWorkflowConfigurationOnFailure = exports.ImagePipelineStatus = exports.ImagePipelineSchedulePipelineExecutionStartCondition = exports.DistributionConfigurationTargetContainerRepositoryService = exports.ContainerRecipeTargetContainerRepositoryService = exports.ContainerRecipePlatformOverride = exports.ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType = exports.ContainerRecipeContainerType = exports.ComponentType = exports.ComponentPlatform = void 0;
exports.ComponentPlatform = {
    Windows: "Windows",
    Linux: "Linux",
    MacOs: "macOS",
};
exports.ComponentType = {
    Build: "BUILD",
    Test: "TEST",
};
exports.ContainerRecipeContainerType = {
    Docker: "DOCKER",
};
exports.ContainerRecipeEbsInstanceBlockDeviceSpecificationVolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Gp3: "gp3",
    Sc1: "sc1",
    St1: "st1",
};
exports.ContainerRecipePlatformOverride = {
    Windows: "Windows",
    Linux: "Linux",
};
exports.ContainerRecipeTargetContainerRepositoryService = {
    Ecr: "ECR",
};
exports.DistributionConfigurationTargetContainerRepositoryService = {
    Ecr: "ECR",
};
exports.ImagePipelineSchedulePipelineExecutionStartCondition = {
    ExpressionMatchOnly: "EXPRESSION_MATCH_ONLY",
    ExpressionMatchAndDependencyUpdatesAvailable: "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE",
};
exports.ImagePipelineStatus = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
};
exports.ImagePipelineWorkflowConfigurationOnFailure = {
    Continue: "CONTINUE",
    Abort: "ABORT",
};
exports.ImageRecipeEbsInstanceBlockDeviceSpecificationVolumeType = {
    Standard: "standard",
    Io1: "io1",
    Io2: "io2",
    Gp2: "gp2",
    Gp3: "gp3",
    Sc1: "sc1",
    St1: "st1",
};
exports.ImageWorkflowConfigurationOnFailure = {
    Continue: "CONTINUE",
    Abort: "ABORT",
};
exports.InfrastructureConfigurationInstanceMetadataOptionsHttpTokens = {
    Required: "required",
    Optional: "optional",
};
exports.InfrastructureConfigurationPlacementTenancy = {
    Default: "default",
    Dedicated: "dedicated",
    Host: "host",
};
exports.LifecyclePolicyActionType = {
    Delete: "DELETE",
    Deprecate: "DEPRECATE",
    Disable: "DISABLE",
};
exports.LifecyclePolicyFilterType = {
    Age: "AGE",
    Count: "COUNT",
};
exports.LifecyclePolicyResourceType = {
    AmiImage: "AMI_IMAGE",
    ContainerImage: "CONTAINER_IMAGE",
};
exports.LifecyclePolicyStatus = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
};
exports.LifecyclePolicyTimeUnit = {
    Days: "DAYS",
    Weeks: "WEEKS",
    Months: "MONTHS",
    Years: "YEARS",
};
exports.WorkflowType = {
    Build: "BUILD",
    Test: "TEST",
    Distribution: "DISTRIBUTION",
};
//# sourceMappingURL=index.js.map