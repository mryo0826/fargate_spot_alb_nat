"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowStepType = exports.WorkflowStepDecryptStepDetailsPropertiesType = exports.WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting = exports.WorkflowStepCopyStepDetailsPropertiesOverwriteExisting = exports.UserMapType = exports.UserHomeDirectoryType = exports.ServerTlsSessionResumptionMode = exports.ServerState = exports.ServerSftpAuthenticationMethods = exports.ServerSetStatOption = exports.ServerProtocol = exports.ServerIdentityProviderType = exports.ServerEndpointType = exports.ServerDomain = exports.ServerDirectoryListingOptimization = exports.ServerAs2Transport = exports.ProfileType = exports.ConnectorAs2ConfigPropertiesSigningAlgorithm = exports.ConnectorAs2ConfigPropertiesMdnSigningAlgorithm = exports.ConnectorAs2ConfigPropertiesMdnResponse = exports.ConnectorAs2ConfigPropertiesEncryptionAlgorithm = exports.ConnectorAs2ConfigPropertiesCompression = exports.CertificateUsage = exports.CertificateType = exports.CertificateStatus = exports.AgreementStatus = void 0;
exports.AgreementStatus = {
    Active: "ACTIVE",
    Inactive: "INACTIVE",
};
exports.CertificateStatus = {
    Active: "ACTIVE",
    Pending: "PENDING",
    Inactive: "INACTIVE",
};
exports.CertificateType = {
    Certificate: "CERTIFICATE",
    CertificateWithPrivateKey: "CERTIFICATE_WITH_PRIVATE_KEY",
};
exports.CertificateUsage = {
    Signing: "SIGNING",
    Encryption: "ENCRYPTION",
    Tls: "TLS",
};
exports.ConnectorAs2ConfigPropertiesCompression = {
    Zlib: "ZLIB",
    Disabled: "DISABLED",
};
exports.ConnectorAs2ConfigPropertiesEncryptionAlgorithm = {
    Aes128Cbc: "AES128_CBC",
    Aes192Cbc: "AES192_CBC",
    Aes256Cbc: "AES256_CBC",
    None: "NONE",
    DesEde3Cbc: "DES_EDE3_CBC",
};
exports.ConnectorAs2ConfigPropertiesMdnResponse = {
    Sync: "SYNC",
    None: "NONE",
};
exports.ConnectorAs2ConfigPropertiesMdnSigningAlgorithm = {
    Sha256: "SHA256",
    Sha384: "SHA384",
    Sha512: "SHA512",
    Sha1: "SHA1",
    None: "NONE",
    Default: "DEFAULT",
};
exports.ConnectorAs2ConfigPropertiesSigningAlgorithm = {
    Sha256: "SHA256",
    Sha384: "SHA384",
    Sha512: "SHA512",
    Sha1: "SHA1",
    None: "NONE",
};
exports.ProfileType = {
    Local: "LOCAL",
    Partner: "PARTNER",
};
exports.ServerAs2Transport = {
    Http: "HTTP",
};
exports.ServerDirectoryListingOptimization = {
    Enabled: "ENABLED",
    Disabled: "DISABLED",
};
exports.ServerDomain = {
    S3: "S3",
    Efs: "EFS",
};
exports.ServerEndpointType = {
    Public: "PUBLIC",
    Vpc: "VPC",
    VpcEndpoint: "VPC_ENDPOINT",
};
exports.ServerIdentityProviderType = {
    ServiceManaged: "SERVICE_MANAGED",
    ApiGateway: "API_GATEWAY",
    AwsDirectoryService: "AWS_DIRECTORY_SERVICE",
    AwsLambda: "AWS_LAMBDA",
};
exports.ServerProtocol = {
    Sftp: "SFTP",
    Ftp: "FTP",
    Ftps: "FTPS",
    As2: "AS2",
};
exports.ServerSetStatOption = {
    Default: "DEFAULT",
    EnableNoOp: "ENABLE_NO_OP",
};
exports.ServerSftpAuthenticationMethods = {
    Password: "PASSWORD",
    PublicKey: "PUBLIC_KEY",
    PublicKeyOrPassword: "PUBLIC_KEY_OR_PASSWORD",
    PublicKeyAndPassword: "PUBLIC_KEY_AND_PASSWORD",
};
exports.ServerState = {
    Offline: "OFFLINE",
    Online: "ONLINE",
    Starting: "STARTING",
    Stopping: "STOPPING",
    StartFailed: "START_FAILED",
    StopFailed: "STOP_FAILED",
};
exports.ServerTlsSessionResumptionMode = {
    Disabled: "DISABLED",
    Enabled: "ENABLED",
    Enforced: "ENFORCED",
};
exports.UserHomeDirectoryType = {
    Path: "PATH",
    Logical: "LOGICAL",
};
exports.UserMapType = {
    File: "FILE",
    Directory: "DIRECTORY",
};
exports.WorkflowStepCopyStepDetailsPropertiesOverwriteExisting = {
    True: "TRUE",
    False: "FALSE",
};
exports.WorkflowStepDecryptStepDetailsPropertiesOverwriteExisting = {
    True: "TRUE",
    False: "FALSE",
};
exports.WorkflowStepDecryptStepDetailsPropertiesType = {
    Pgp: "PGP",
};
exports.WorkflowStepType = {
    Copy: "COPY",
    Custom: "CUSTOM",
    Decrypt: "DECRYPT",
    Delete: "DELETE",
    Tag: "TAG",
};
//# sourceMappingURL=index.js.map