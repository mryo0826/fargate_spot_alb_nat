"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAclTextTransformationType = exports.WebAclSizeInspectionLimit = exports.WebAclSizeConstraintStatementComparisonOperator = exports.WebAclSensitivityLevel = exports.WebAclScope = exports.WebAclResponseContentType = exports.WebAclRequestInspectionPayloadType = exports.WebAclRequestInspectionAcfpPayloadType = exports.WebAclRateBasedStatementAggregateKeyType = exports.WebAclPositionalConstraint = exports.WebAclOversizeHandling = exports.WebAclMapMatchScope = exports.WebAclManagedRuleGroupConfigPayloadType = exports.WebAclLabelMatchScope = exports.WebAclJsonMatchScope = exports.WebAclJa3FingerprintFallbackBehavior = exports.WebAclIpSetForwardedIpConfigurationPosition = exports.WebAclIpSetForwardedIpConfigurationFallbackBehavior = exports.WebAclForwardedIpConfigurationFallbackBehavior = exports.WebAclBodyParsingFallbackBehavior = exports.WebAclAwsManagedRulesBotControlRuleSetInspectionLevel = exports.RuleGroupTextTransformationType = exports.RuleGroupSizeConstraintStatementComparisonOperator = exports.RuleGroupSensitivityLevel = exports.RuleGroupScope = exports.RuleGroupResponseContentType = exports.RuleGroupRateBasedStatementAggregateKeyType = exports.RuleGroupPositionalConstraint = exports.RuleGroupOversizeHandling = exports.RuleGroupMapMatchScope = exports.RuleGroupLabelMatchScope = exports.RuleGroupJsonMatchScope = exports.RuleGroupJa3FingerprintFallbackBehavior = exports.RuleGroupIpSetForwardedIpConfigurationPosition = exports.RuleGroupIpSetForwardedIpConfigurationFallbackBehavior = exports.RuleGroupForwardedIpConfigurationFallbackBehavior = exports.RuleGroupBodyParsingFallbackBehavior = exports.RegexPatternSetScope = exports.LoggingConfigurationLoggingFilterPropertiesDefaultBehavior = exports.LoggingConfigurationFilterRequirement = exports.LoggingConfigurationFilterBehavior = exports.LoggingConfigurationConditionActionConditionPropertiesAction = exports.IpSetScope = exports.IpSetIpAddressVersion = void 0;
exports.IpSetIpAddressVersion = {
    Ipv4: "IPV4",
    Ipv6: "IPV6",
};
exports.IpSetScope = {
    Cloudfront: "CLOUDFRONT",
    Regional: "REGIONAL",
};
exports.LoggingConfigurationConditionActionConditionPropertiesAction = {
    Allow: "ALLOW",
    Block: "BLOCK",
    Count: "COUNT",
    Captcha: "CAPTCHA",
    Challenge: "CHALLENGE",
    ExcludedAsCount: "EXCLUDED_AS_COUNT",
};
exports.LoggingConfigurationFilterBehavior = {
    Keep: "KEEP",
    Drop: "DROP",
};
exports.LoggingConfigurationFilterRequirement = {
    MeetsAll: "MEETS_ALL",
    MeetsAny: "MEETS_ANY",
};
exports.LoggingConfigurationLoggingFilterPropertiesDefaultBehavior = {
    Keep: "KEEP",
    Drop: "DROP",
};
exports.RegexPatternSetScope = {
    Cloudfront: "CLOUDFRONT",
    Regional: "REGIONAL",
};
exports.RuleGroupBodyParsingFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
    EvaluateAsString: "EVALUATE_AS_STRING",
};
exports.RuleGroupForwardedIpConfigurationFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.RuleGroupIpSetForwardedIpConfigurationFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.RuleGroupIpSetForwardedIpConfigurationPosition = {
    First: "FIRST",
    Last: "LAST",
    Any: "ANY",
};
exports.RuleGroupJa3FingerprintFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.RuleGroupJsonMatchScope = {
    All: "ALL",
    Key: "KEY",
    Value: "VALUE",
};
exports.RuleGroupLabelMatchScope = {
    Label: "LABEL",
    Namespace: "NAMESPACE",
};
exports.RuleGroupMapMatchScope = {
    All: "ALL",
    Key: "KEY",
    Value: "VALUE",
};
exports.RuleGroupOversizeHandling = {
    Continue: "CONTINUE",
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.RuleGroupPositionalConstraint = {
    Exactly: "EXACTLY",
    StartsWith: "STARTS_WITH",
    EndsWith: "ENDS_WITH",
    Contains: "CONTAINS",
    ContainsWord: "CONTAINS_WORD",
};
exports.RuleGroupRateBasedStatementAggregateKeyType = {
    Ip: "IP",
    ForwardedIp: "FORWARDED_IP",
    Constant: "CONSTANT",
    CustomKeys: "CUSTOM_KEYS",
};
exports.RuleGroupResponseContentType = {
    TextPlain: "TEXT_PLAIN",
    TextHtml: "TEXT_HTML",
    ApplicationJson: "APPLICATION_JSON",
};
exports.RuleGroupScope = {
    Cloudfront: "CLOUDFRONT",
    Regional: "REGIONAL",
};
exports.RuleGroupSensitivityLevel = {
    Low: "LOW",
    High: "HIGH",
};
exports.RuleGroupSizeConstraintStatementComparisonOperator = {
    Eq: "EQ",
    Ne: "NE",
    Le: "LE",
    Lt: "LT",
    Ge: "GE",
    Gt: "GT",
};
exports.RuleGroupTextTransformationType = {
    None: "NONE",
    CompressWhiteSpace: "COMPRESS_WHITE_SPACE",
    HtmlEntityDecode: "HTML_ENTITY_DECODE",
    Lowercase: "LOWERCASE",
    CmdLine: "CMD_LINE",
    UrlDecode: "URL_DECODE",
    Base64Decode: "BASE64_DECODE",
    HexDecode: "HEX_DECODE",
    Md5: "MD5",
    ReplaceComments: "REPLACE_COMMENTS",
    EscapeSeqDecode: "ESCAPE_SEQ_DECODE",
    SqlHexDecode: "SQL_HEX_DECODE",
    CssDecode: "CSS_DECODE",
    JsDecode: "JS_DECODE",
    NormalizePath: "NORMALIZE_PATH",
    NormalizePathWin: "NORMALIZE_PATH_WIN",
    RemoveNulls: "REMOVE_NULLS",
    ReplaceNulls: "REPLACE_NULLS",
    Base64DecodeExt: "BASE64_DECODE_EXT",
    UrlDecodeUni: "URL_DECODE_UNI",
    Utf8ToUnicode: "UTF8_TO_UNICODE",
};
exports.WebAclAwsManagedRulesBotControlRuleSetInspectionLevel = {
    Common: "COMMON",
    Targeted: "TARGETED",
};
exports.WebAclBodyParsingFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
    EvaluateAsString: "EVALUATE_AS_STRING",
};
exports.WebAclForwardedIpConfigurationFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.WebAclIpSetForwardedIpConfigurationFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.WebAclIpSetForwardedIpConfigurationPosition = {
    First: "FIRST",
    Last: "LAST",
    Any: "ANY",
};
exports.WebAclJa3FingerprintFallbackBehavior = {
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.WebAclJsonMatchScope = {
    All: "ALL",
    Key: "KEY",
    Value: "VALUE",
};
exports.WebAclLabelMatchScope = {
    Label: "LABEL",
    Namespace: "NAMESPACE",
};
exports.WebAclManagedRuleGroupConfigPayloadType = {
    Json: "JSON",
    FormEncoded: "FORM_ENCODED",
};
exports.WebAclMapMatchScope = {
    All: "ALL",
    Key: "KEY",
    Value: "VALUE",
};
exports.WebAclOversizeHandling = {
    Continue: "CONTINUE",
    Match: "MATCH",
    NoMatch: "NO_MATCH",
};
exports.WebAclPositionalConstraint = {
    Exactly: "EXACTLY",
    StartsWith: "STARTS_WITH",
    EndsWith: "ENDS_WITH",
    Contains: "CONTAINS",
    ContainsWord: "CONTAINS_WORD",
};
exports.WebAclRateBasedStatementAggregateKeyType = {
    Constant: "CONSTANT",
    Ip: "IP",
    ForwardedIp: "FORWARDED_IP",
    CustomKeys: "CUSTOM_KEYS",
};
exports.WebAclRequestInspectionAcfpPayloadType = {
    Json: "JSON",
    FormEncoded: "FORM_ENCODED",
};
exports.WebAclRequestInspectionPayloadType = {
    Json: "JSON",
    FormEncoded: "FORM_ENCODED",
};
exports.WebAclResponseContentType = {
    TextPlain: "TEXT_PLAIN",
    TextHtml: "TEXT_HTML",
    ApplicationJson: "APPLICATION_JSON",
};
exports.WebAclScope = {
    Cloudfront: "CLOUDFRONT",
    Regional: "REGIONAL",
};
exports.WebAclSensitivityLevel = {
    Low: "LOW",
    High: "HIGH",
};
exports.WebAclSizeConstraintStatementComparisonOperator = {
    Eq: "EQ",
    Ne: "NE",
    Le: "LE",
    Lt: "LT",
    Ge: "GE",
    Gt: "GT",
};
exports.WebAclSizeInspectionLimit = {
    Kb16: "KB_16",
    Kb32: "KB_32",
    Kb48: "KB_48",
    Kb64: "KB_64",
};
exports.WebAclTextTransformationType = {
    None: "NONE",
    CompressWhiteSpace: "COMPRESS_WHITE_SPACE",
    HtmlEntityDecode: "HTML_ENTITY_DECODE",
    Lowercase: "LOWERCASE",
    CmdLine: "CMD_LINE",
    UrlDecode: "URL_DECODE",
    Base64Decode: "BASE64_DECODE",
    HexDecode: "HEX_DECODE",
    Md5: "MD5",
    ReplaceComments: "REPLACE_COMMENTS",
    EscapeSeqDecode: "ESCAPE_SEQ_DECODE",
    SqlHexDecode: "SQL_HEX_DECODE",
    CssDecode: "CSS_DECODE",
    JsDecode: "JS_DECODE",
    NormalizePath: "NORMALIZE_PATH",
    NormalizePathWin: "NORMALIZE_PATH_WIN",
    RemoveNulls: "REMOVE_NULLS",
    ReplaceNulls: "REPLACE_NULLS",
    Base64DecodeExt: "BASE64_DECODE_EXT",
    UrlDecodeUni: "URL_DECODE_UNI",
    Utf8ToUnicode: "UTF8_TO_UNICODE",
};
//# sourceMappingURL=index.js.map