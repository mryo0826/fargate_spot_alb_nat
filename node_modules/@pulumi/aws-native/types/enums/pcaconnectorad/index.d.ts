export declare const TemplateApplicationPolicyType: {
    readonly AllApplicationPolicies: "ALL_APPLICATION_POLICIES";
    readonly AnyPurpose: "ANY_PURPOSE";
    readonly AttestationIdentityKeyCertificate: "ATTESTATION_IDENTITY_KEY_CERTIFICATE";
    readonly CertificateRequestAgent: "CERTIFICATE_REQUEST_AGENT";
    readonly ClientAuthentication: "CLIENT_AUTHENTICATION";
    readonly CodeSigning: "CODE_SIGNING";
    readonly CtlUsage: "CTL_USAGE";
    readonly DigitalRights: "DIGITAL_RIGHTS";
    readonly DirectoryServiceEmailReplication: "DIRECTORY_SERVICE_EMAIL_REPLICATION";
    readonly DisallowedList: "DISALLOWED_LIST";
    readonly DnsServerTrust: "DNS_SERVER_TRUST";
    readonly DocumentEncryption: "DOCUMENT_ENCRYPTION";
    readonly DocumentSigning: "DOCUMENT_SIGNING";
    readonly DynamicCodeGenerator: "DYNAMIC_CODE_GENERATOR";
    readonly EarlyLaunchAntimalwareDriver: "EARLY_LAUNCH_ANTIMALWARE_DRIVER";
    readonly EmbeddedWindowsSystemComponentVerification: "EMBEDDED_WINDOWS_SYSTEM_COMPONENT_VERIFICATION";
    readonly Enclave: "ENCLAVE";
    readonly EncryptingFileSystem: "ENCRYPTING_FILE_SYSTEM";
    readonly EndorsementKeyCertificate: "ENDORSEMENT_KEY_CERTIFICATE";
    readonly FileRecovery: "FILE_RECOVERY";
    readonly HalExtension: "HAL_EXTENSION";
    readonly IpSecurityEndSystem: "IP_SECURITY_END_SYSTEM";
    readonly IpSecurityIkeIntermediate: "IP_SECURITY_IKE_INTERMEDIATE";
    readonly IpSecurityTunnelTermination: "IP_SECURITY_TUNNEL_TERMINATION";
    readonly IpSecurityUser: "IP_SECURITY_USER";
    readonly IsolatedUserMode: "ISOLATED_USER_MODE";
    readonly KdcAuthentication: "KDC_AUTHENTICATION";
    readonly KernelModeCodeSigning: "KERNEL_MODE_CODE_SIGNING";
    readonly KeyPackLicenses: "KEY_PACK_LICENSES";
    readonly KeyRecovery: "KEY_RECOVERY";
    readonly KeyRecoveryAgent: "KEY_RECOVERY_AGENT";
    readonly LicenseServerVerification: "LICENSE_SERVER_VERIFICATION";
    readonly LifetimeSigning: "LIFETIME_SIGNING";
    readonly MicrosoftPublisher: "MICROSOFT_PUBLISHER";
    readonly MicrosoftTimeStamping: "MICROSOFT_TIME_STAMPING";
    readonly MicrosoftTrustListSigning: "MICROSOFT_TRUST_LIST_SIGNING";
    readonly OcspSigning: "OCSP_SIGNING";
    readonly OemWindowsSystemComponentVerification: "OEM_WINDOWS_SYSTEM_COMPONENT_VERIFICATION";
    readonly PlatformCertificate: "PLATFORM_CERTIFICATE";
    readonly PreviewBuildSigning: "PREVIEW_BUILD_SIGNING";
    readonly PrivateKeyArchival: "PRIVATE_KEY_ARCHIVAL";
    readonly ProtectedProcessLightVerification: "PROTECTED_PROCESS_LIGHT_VERIFICATION";
    readonly ProtectedProcessVerification: "PROTECTED_PROCESS_VERIFICATION";
    readonly QualifiedSubordination: "QUALIFIED_SUBORDINATION";
    readonly RevokedListSigner: "REVOKED_LIST_SIGNER";
    readonly RootProgramAutoUpdateCaRevocation: "ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION";
    readonly RootProgramAutoUpdateEndRevocation: "ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION";
    readonly RootProgramNoOscpFailoverToCrl: "ROOT_PROGRAM_NO_OSCP_FAILOVER_TO_CRL";
    readonly RootListSigner: "ROOT_LIST_SIGNER";
    readonly SecureEmail: "SECURE_EMAIL";
    readonly ServerAuthentication: "SERVER_AUTHENTICATION";
    readonly SmartCardLogin: "SMART_CARD_LOGIN";
    readonly SpcEncryptedDigestRetryCount: "SPC_ENCRYPTED_DIGEST_RETRY_COUNT";
    readonly SpcRelaxedPeMarkerCheck: "SPC_RELAXED_PE_MARKER_CHECK";
    readonly TimeStamping: "TIME_STAMPING";
    readonly WindowsHardwareDriverAttestedVerification: "WINDOWS_HARDWARE_DRIVER_ATTESTED_VERIFICATION";
    readonly WindowsHardwareDriverExtendedVerification: "WINDOWS_HARDWARE_DRIVER_EXTENDED_VERIFICATION";
    readonly WindowsHardwareDriverVerification: "WINDOWS_HARDWARE_DRIVER_VERIFICATION";
    readonly WindowsHelloRecoveryKeyEncryption: "WINDOWS_HELLO_RECOVERY_KEY_ENCRYPTION";
    readonly WindowsKitsComponent: "WINDOWS_KITS_COMPONENT";
    readonly WindowsRtVerification: "WINDOWS_RT_VERIFICATION";
    readonly WindowsSoftwareExtensionVerification: "WINDOWS_SOFTWARE_EXTENSION_VERIFICATION";
    readonly WindowsStore: "WINDOWS_STORE";
    readonly WindowsSystemComponentVerification: "WINDOWS_SYSTEM_COMPONENT_VERIFICATION";
    readonly WindowsTcbComponent: "WINDOWS_TCB_COMPONENT";
    readonly WindowsThirdPartyApplicationComponent: "WINDOWS_THIRD_PARTY_APPLICATION_COMPONENT";
    readonly WindowsUpdate: "WINDOWS_UPDATE";
};
export type TemplateApplicationPolicyType = (typeof TemplateApplicationPolicyType)[keyof typeof TemplateApplicationPolicyType];
export declare const TemplateClientCompatibilityV2: {
    readonly WindowsServer2003: "WINDOWS_SERVER_2003";
    readonly WindowsServer2008: "WINDOWS_SERVER_2008";
    readonly WindowsServer2008r2: "WINDOWS_SERVER_2008_R2";
    readonly WindowsServer2012: "WINDOWS_SERVER_2012";
    readonly WindowsServer2012r2: "WINDOWS_SERVER_2012_R2";
    readonly WindowsServer2016: "WINDOWS_SERVER_2016";
};
export type TemplateClientCompatibilityV2 = (typeof TemplateClientCompatibilityV2)[keyof typeof TemplateClientCompatibilityV2];
export declare const TemplateClientCompatibilityV3: {
    readonly WindowsServer2008: "WINDOWS_SERVER_2008";
    readonly WindowsServer2008r2: "WINDOWS_SERVER_2008_R2";
    readonly WindowsServer2012: "WINDOWS_SERVER_2012";
    readonly WindowsServer2012r2: "WINDOWS_SERVER_2012_R2";
    readonly WindowsServer2016: "WINDOWS_SERVER_2016";
};
export type TemplateClientCompatibilityV3 = (typeof TemplateClientCompatibilityV3)[keyof typeof TemplateClientCompatibilityV3];
export declare const TemplateClientCompatibilityV4: {
    readonly WindowsServer2012: "WINDOWS_SERVER_2012";
    readonly WindowsServer2012r2: "WINDOWS_SERVER_2012_R2";
    readonly WindowsServer2016: "WINDOWS_SERVER_2016";
};
export type TemplateClientCompatibilityV4 = (typeof TemplateClientCompatibilityV4)[keyof typeof TemplateClientCompatibilityV4];
export declare const TemplateGroupAccessControlEntryAccessRight: {
    readonly Allow: "ALLOW";
    readonly Deny: "DENY";
};
export type TemplateGroupAccessControlEntryAccessRight = (typeof TemplateGroupAccessControlEntryAccessRight)[keyof typeof TemplateGroupAccessControlEntryAccessRight];
export declare const TemplateHashAlgorithm: {
    readonly Sha256: "SHA256";
    readonly Sha384: "SHA384";
    readonly Sha512: "SHA512";
};
export type TemplateHashAlgorithm = (typeof TemplateHashAlgorithm)[keyof typeof TemplateHashAlgorithm];
export declare const TemplateKeySpec: {
    readonly KeyExchange: "KEY_EXCHANGE";
    readonly Signature: "SIGNATURE";
};
export type TemplateKeySpec = (typeof TemplateKeySpec)[keyof typeof TemplateKeySpec];
export declare const TemplateKeyUsagePropertyType: {
    readonly All: "ALL";
};
export type TemplateKeyUsagePropertyType = (typeof TemplateKeyUsagePropertyType)[keyof typeof TemplateKeyUsagePropertyType];
export declare const TemplatePrivateKeyAlgorithm: {
    readonly Rsa: "RSA";
    readonly EcdhP256: "ECDH_P256";
    readonly EcdhP384: "ECDH_P384";
    readonly EcdhP521: "ECDH_P521";
};
export type TemplatePrivateKeyAlgorithm = (typeof TemplatePrivateKeyAlgorithm)[keyof typeof TemplatePrivateKeyAlgorithm];
export declare const TemplateValidityPeriodType: {
    readonly Hours: "HOURS";
    readonly Days: "DAYS";
    readonly Weeks: "WEEKS";
    readonly Months: "MONTHS";
    readonly Years: "YEARS";
};
export type TemplateValidityPeriodType = (typeof TemplateValidityPeriodType)[keyof typeof TemplateValidityPeriodType];
