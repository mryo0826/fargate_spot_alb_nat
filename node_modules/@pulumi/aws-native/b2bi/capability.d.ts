import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::B2BI::Capability Resource Type
 */
export declare class Capability extends pulumi.CustomResource {
    /**
     * Get an existing Capability resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Capability;
    /**
     * Returns true if the given object is an instance of Capability.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Capability;
    /**
     * Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
     */
    readonly capabilityArn: pulumi.Output<string>;
    /**
     * Returns a system-assigned unique identifier for the capability.
     */
    readonly capabilityId: pulumi.Output<string>;
    /**
     * Specifies a structure that contains the details for a capability.
     */
    readonly configuration: pulumi.Output<outputs.b2bi.CapabilityConfigurationProperties>;
    /**
     * Returns a timestamp for creation date and time of the capability.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Specifies one or more locations in Amazon S3, each specifying an EDI document that can be used with this capability. Each item contains the name of the bucket and the key, to identify the document's location.
     */
    readonly instructionsDocuments: pulumi.Output<outputs.b2bi.CapabilityS3Location[] | undefined>;
    /**
     * Returns a timestamp that identifies the most recent date and time that the capability was modified.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * The display name of the capability.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Returns the type of the capability. Currently, only `edi` is supported.
     */
    readonly type: pulumi.Output<enums.b2bi.CapabilityType>;
    /**
     * Create a Capability resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapabilityArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Capability resource.
 */
export interface CapabilityArgs {
    /**
     * Specifies a structure that contains the details for a capability.
     */
    configuration: pulumi.Input<inputs.b2bi.CapabilityConfigurationPropertiesArgs>;
    /**
     * Specifies one or more locations in Amazon S3, each specifying an EDI document that can be used with this capability. Each item contains the name of the bucket and the key, to identify the document's location.
     */
    instructionsDocuments?: pulumi.Input<pulumi.Input<inputs.b2bi.CapabilityS3LocationArgs>[]>;
    /**
     * The display name of the capability.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the key-value pairs assigned to ARNs that you can use to group and search for resources by type. You can attach this metadata to resources (capabilities, partnerships, and so on) for any purpose.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * Returns the type of the capability. Currently, only `edi` is supported.
     */
    type: pulumi.Input<enums.b2bi.CapabilityType>;
}
