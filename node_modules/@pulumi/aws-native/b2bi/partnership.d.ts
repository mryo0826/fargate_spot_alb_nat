import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Definition of AWS::B2BI::Partnership Resource Type
 */
export declare class Partnership extends pulumi.CustomResource {
    /**
     * Get an existing Partnership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Partnership;
    /**
     * Returns true if the given object is an instance of Partnership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Partnership;
    /**
     * Returns one or more capabilities associated with this partnership.
     */
    readonly capabilities: pulumi.Output<string[]>;
    /**
     * Contains the details for an Outbound EDI capability.
     */
    readonly capabilityOptions: pulumi.Output<outputs.b2bi.PartnershipCapabilityOptions | undefined>;
    /**
     * Returns a timestamp for creation date and time of the partnership.
     */
    readonly createdAt: pulumi.Output<string>;
    readonly email: pulumi.Output<string>;
    /**
     * Returns a timestamp that identifies the most recent date and time that the partnership was modified.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * Returns the name of the partnership.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Returns an Amazon Resource Name (ARN) for a specific AWS resource, such as a capability, partnership, profile, or transformer.
     */
    readonly partnershipArn: pulumi.Output<string>;
    /**
     * Returns the unique, system-generated identifier for a partnership.
     */
    readonly partnershipId: pulumi.Output<string>;
    readonly phone: pulumi.Output<string | undefined>;
    /**
     * Returns the unique, system-generated identifier for the profile connected to this partnership.
     */
    readonly profileId: pulumi.Output<string>;
    /**
     * A key-value pair for a specific partnership. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Returns the unique, system-generated identifier for a trading partner.
     */
    readonly tradingPartnerId: pulumi.Output<string>;
    /**
     * Create a Partnership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnershipArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Partnership resource.
 */
export interface PartnershipArgs {
    /**
     * Returns one or more capabilities associated with this partnership.
     */
    capabilities: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Contains the details for an Outbound EDI capability.
     */
    capabilityOptions?: pulumi.Input<inputs.b2bi.PartnershipCapabilityOptionsArgs>;
    email: pulumi.Input<string>;
    /**
     * Returns the name of the partnership.
     */
    name?: pulumi.Input<string>;
    phone?: pulumi.Input<string>;
    /**
     * Returns the unique, system-generated identifier for the profile connected to this partnership.
     */
    profileId: pulumi.Input<string>;
    /**
     * A key-value pair for a specific partnership. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
