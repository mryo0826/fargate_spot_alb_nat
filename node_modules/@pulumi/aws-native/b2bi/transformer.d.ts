import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::B2BI::Transformer Resource Type
 */
export declare class Transformer extends pulumi.CustomResource {
    /**
     * Get an existing Transformer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Transformer;
    /**
     * Returns true if the given object is an instance of Transformer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Transformer;
    /**
     * Returns a timestamp indicating when the transformer was created. For example, `2023-07-20T19:58:44.624Z` .
     */
    readonly createdAt: pulumi.Output<string>;
    readonly ediType: pulumi.Output<outputs.b2bi.TransformerEdiTypeProperties | undefined>;
    readonly fileFormat: pulumi.Output<enums.b2bi.TransformerFileFormat | undefined>;
    /**
     * Returns a structure that contains the format options for the transformation.
     */
    readonly inputConversion: pulumi.Output<outputs.b2bi.TransformerInputConversion | undefined>;
    /**
     * Returns the structure that contains the mapping template and its language (either XSLT or JSONATA).
     */
    readonly mapping: pulumi.Output<outputs.b2bi.TransformerMapping | undefined>;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    readonly mappingTemplate: pulumi.Output<string | undefined>;
    /**
     * Returns a timestamp representing the date and time for the most recent change for the transformer object.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * Returns the descriptive name for the transformer.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Returns the `OutputConversion` object, which contains the format options for the outbound transformation.
     */
    readonly outputConversion: pulumi.Output<outputs.b2bi.TransformerOutputConversion | undefined>;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    readonly sampleDocument: pulumi.Output<string | undefined>;
    /**
     * Returns a structure that contains the Amazon S3 bucket and an array of the corresponding keys used to identify the location for your sample documents.
     */
    readonly sampleDocuments: pulumi.Output<outputs.b2bi.TransformerSampleDocuments | undefined>;
    /**
     * Returns the state of the newly created transformer. The transformer can be either `active` or `inactive` . For the transformer to be used in a capability, its status must `active` .
     */
    readonly status: pulumi.Output<enums.b2bi.TransformerStatus>;
    /**
     * A key-value pair for a specific transformer. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Returns an Amazon Resource Name (ARN) for a specific transformer.
     */
    readonly transformerArn: pulumi.Output<string>;
    /**
     * The system-assigned unique identifier for the transformer.
     */
    readonly transformerId: pulumi.Output<string>;
    /**
     * Create a Transformer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransformerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Transformer resource.
 */
export interface TransformerArgs {
    ediType?: pulumi.Input<inputs.b2bi.TransformerEdiTypePropertiesArgs>;
    fileFormat?: pulumi.Input<enums.b2bi.TransformerFileFormat>;
    /**
     * Returns a structure that contains the format options for the transformation.
     */
    inputConversion?: pulumi.Input<inputs.b2bi.TransformerInputConversionArgs>;
    /**
     * Returns the structure that contains the mapping template and its language (either XSLT or JSONATA).
     */
    mapping?: pulumi.Input<inputs.b2bi.TransformerMappingArgs>;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    mappingTemplate?: pulumi.Input<string>;
    /**
     * Returns the descriptive name for the transformer.
     */
    name?: pulumi.Input<string>;
    /**
     * Returns the `OutputConversion` object, which contains the format options for the outbound transformation.
     */
    outputConversion?: pulumi.Input<inputs.b2bi.TransformerOutputConversionArgs>;
    /**
     * This shape is deprecated: This is a legacy trait. Please use input-conversion or output-conversion.
     */
    sampleDocument?: pulumi.Input<string>;
    /**
     * Returns a structure that contains the Amazon S3 bucket and an array of the corresponding keys used to identify the location for your sample documents.
     */
    sampleDocuments?: pulumi.Input<inputs.b2bi.TransformerSampleDocumentsArgs>;
    /**
     * Returns the state of the newly created transformer. The transformer can be either `active` or `inactive` . For the transformer to be used in a capability, its status must `active` .
     */
    status: pulumi.Input<enums.b2bi.TransformerStatus>;
    /**
     * A key-value pair for a specific transformer. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
