import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::B2BI::Profile Resource Type
 */
export declare class Profile extends pulumi.CustomResource {
    /**
     * Get an existing Profile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Profile;
    /**
     * Returns true if the given object is an instance of Profile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Profile;
    /**
     * Returns the name for the business associated with this profile.
     */
    readonly businessName: pulumi.Output<string>;
    /**
     * Returns the timestamp for creation date and time of the profile.
     */
    readonly createdAt: pulumi.Output<string>;
    readonly email: pulumi.Output<string | undefined>;
    /**
     * Returns the name of the logging group.
     */
    readonly logGroupName: pulumi.Output<string>;
    /**
     * Specifies whether or not logging is enabled for this profile.
     */
    readonly logging: pulumi.Output<enums.b2bi.ProfileLogging>;
    /**
     * Returns the timestamp that identifies the most recent date and time that the profile was modified.
     */
    readonly modifiedAt: pulumi.Output<string>;
    /**
     * Returns the display name for profile.
     */
    readonly name: pulumi.Output<string>;
    readonly phone: pulumi.Output<string>;
    /**
     * Returns an Amazon Resource Name (ARN) for the profile.
     */
    readonly profileArn: pulumi.Output<string>;
    readonly profileId: pulumi.Output<string>;
    /**
     * A key-value pair for a specific profile. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Profile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Profile resource.
 */
export interface ProfileArgs {
    /**
     * Returns the name for the business associated with this profile.
     */
    businessName: pulumi.Input<string>;
    email?: pulumi.Input<string>;
    /**
     * Specifies whether or not logging is enabled for this profile.
     */
    logging: pulumi.Input<enums.b2bi.ProfileLogging>;
    /**
     * Returns the display name for profile.
     */
    name?: pulumi.Input<string>;
    phone: pulumi.Input<string>;
    /**
     * A key-value pair for a specific profile. Tags are metadata that you can use to search for and group capabilities for various purposes.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
