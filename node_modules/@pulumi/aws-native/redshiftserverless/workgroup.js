"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workgroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Definition of AWS::RedshiftServerless::Workgroup Resource Type
 */
class Workgroup extends pulumi.CustomResource {
    /**
     * Get an existing Workgroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Workgroup(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Workgroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workgroup.__pulumiType;
    }
    /**
     * Create a Workgroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["baseCapacity"] = args ? args.baseCapacity : undefined;
            resourceInputs["configParameters"] = args ? args.configParameters : undefined;
            resourceInputs["enhancedVpcRouting"] = args ? args.enhancedVpcRouting : undefined;
            resourceInputs["maxCapacity"] = args ? args.maxCapacity : undefined;
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["pricePerformanceTarget"] = args ? args.pricePerformanceTarget : undefined;
            resourceInputs["publiclyAccessible"] = args ? args.publiclyAccessible : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workgroupName"] = args ? args.workgroupName : undefined;
            resourceInputs["workgroup"] = undefined /*out*/;
        }
        else {
            resourceInputs["baseCapacity"] = undefined /*out*/;
            resourceInputs["configParameters"] = undefined /*out*/;
            resourceInputs["enhancedVpcRouting"] = undefined /*out*/;
            resourceInputs["maxCapacity"] = undefined /*out*/;
            resourceInputs["namespaceName"] = undefined /*out*/;
            resourceInputs["port"] = undefined /*out*/;
            resourceInputs["pricePerformanceTarget"] = undefined /*out*/;
            resourceInputs["publiclyAccessible"] = undefined /*out*/;
            resourceInputs["securityGroupIds"] = undefined /*out*/;
            resourceInputs["subnetIds"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["workgroup"] = undefined /*out*/;
            resourceInputs["workgroupName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["namespaceName", "workgroupName"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Workgroup.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Workgroup = Workgroup;
/** @internal */
Workgroup.__pulumiType = 'aws-native:redshiftserverless:Workgroup';
//# sourceMappingURL=workgroup.js.map