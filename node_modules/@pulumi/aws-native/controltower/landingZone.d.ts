import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Definition of AWS::ControlTower::LandingZone Resource Type
 */
export declare class LandingZone extends pulumi.CustomResource {
    /**
     * Get an existing LandingZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LandingZone;
    /**
     * Returns true if the given object is an instance of LandingZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is LandingZone;
    /**
     * The ARN of the landing zone.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The drift status of the landing zone.
     */
    readonly driftStatus: pulumi.Output<enums.controltower.LandingZoneDriftStatus>;
    /**
     * The unique identifier of the landing zone.
     */
    readonly landingZoneIdentifier: pulumi.Output<string>;
    /**
     * The latest available version of the landing zone.
     */
    readonly latestAvailableVersion: pulumi.Output<string>;
    /**
     * The landing zone manifest JSON text file that specifies the landing zone configurations.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ControlTower::LandingZone` for more information about the expected schema for this property.
     */
    readonly manifest: pulumi.Output<any>;
    /**
     * The landing zone deployment status. One of `ACTIVE` , `PROCESSING` , `FAILED` .
     */
    readonly status: pulumi.Output<enums.controltower.LandingZoneStatus>;
    /**
     * Tags to be applied to the landing zone.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * The landing zone's current deployed version.
     */
    readonly version: pulumi.Output<string>;
    /**
     * Create a LandingZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LandingZoneArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a LandingZone resource.
 */
export interface LandingZoneArgs {
    /**
     * The landing zone manifest JSON text file that specifies the landing zone configurations.
     *
     * Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::ControlTower::LandingZone` for more information about the expected schema for this property.
     */
    manifest: any;
    /**
     * Tags to be applied to the landing zone.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
    /**
     * The landing zone's current deployed version.
     */
    version: pulumi.Input<string>;
}
