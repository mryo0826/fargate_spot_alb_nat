import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::Chatbot::SlackChannelConfiguration.
 */
export declare function getSlackChannelConfiguration(args: GetSlackChannelConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetSlackChannelConfigurationResult>;
export interface GetSlackChannelConfigurationArgs {
    /**
     * Amazon Resource Name (ARN) of the configuration
     */
    arn: string;
}
export interface GetSlackChannelConfigurationResult {
    /**
     * Amazon Resource Name (ARN) of the configuration
     */
    readonly arn?: string;
    /**
     * ARNs of Custom Actions to associate with notifications in the provided chat channel.
     */
    readonly customizationResourceArns?: string[];
    /**
     * The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.
     */
    readonly guardrailPolicies?: string[];
    /**
     * The ARN of the IAM role that defines the permissions for AWS Chatbot
     */
    readonly iamRoleArn?: string;
    /**
     * Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs
     */
    readonly loggingLevel?: string;
    /**
     * The id of the Slack channel
     */
    readonly slackChannelId?: string;
    /**
     * ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications.
     */
    readonly snsTopicArns?: string[];
    /**
     * The tags to add to the configuration
     */
    readonly tags?: outputs.Tag[];
    /**
     * Enables use of a user role requirement in your chat configuration
     */
    readonly userRoleRequired?: boolean;
}
/**
 * Resource schema for AWS::Chatbot::SlackChannelConfiguration.
 */
export declare function getSlackChannelConfigurationOutput(args: GetSlackChannelConfigurationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSlackChannelConfigurationResult>;
export interface GetSlackChannelConfigurationOutputArgs {
    /**
     * Amazon Resource Name (ARN) of the configuration
     */
    arn: pulumi.Input<string>;
}
