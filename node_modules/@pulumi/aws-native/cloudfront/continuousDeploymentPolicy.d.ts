import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates a continuous deployment policy that routes a subset of production traffic from a primary distribution to a staging distribution.
 *  After you create and update a staging distribution, you can use a continuous deployment policy to incrementally move traffic to the staging distribution. This enables you to test changes to a distribution's configuration before moving all of your production traffic to the new configuration.
 *  For more information, see [Using CloudFront continuous deployment to safely test CDN configuration changes](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/continuous-deployment.html) in the *Amazon CloudFront Developer Guide*.
 */
export declare class ContinuousDeploymentPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ContinuousDeploymentPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ContinuousDeploymentPolicy;
    /**
     * Returns true if the given object is an instance of ContinuousDeploymentPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ContinuousDeploymentPolicy;
    /**
     * The identifier of the cotinuous deployment policy.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * Contains the configuration for a continuous deployment policy.
     */
    readonly continuousDeploymentPolicyConfig: pulumi.Output<outputs.cloudfront.ContinuousDeploymentPolicyConfig>;
    /**
     * The date and time when the continuous deployment policy was last modified.
     */
    readonly lastModifiedTime: pulumi.Output<string>;
    /**
     * Create a ContinuousDeploymentPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContinuousDeploymentPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ContinuousDeploymentPolicy resource.
 */
export interface ContinuousDeploymentPolicyArgs {
    /**
     * Contains the configuration for a continuous deployment policy.
     */
    continuousDeploymentPolicyConfig: pulumi.Input<inputs.cloudfront.ContinuousDeploymentPolicyConfigArgs>;
}
