import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * The key value store. Use this to separate data from function code, allowing you to update data without having to publish a new version of a function. The key value store holds keys and their corresponding values.
 */
export declare class KeyValueStore extends pulumi.CustomResource {
    /**
     * Get an existing KeyValueStore resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KeyValueStore;
    /**
     * Returns true if the given object is an instance of KeyValueStore.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KeyValueStore;
    /**
     * The Amazon Resource Name (ARN) of the key value store.
     */
    readonly arn: pulumi.Output<string>;
    /**
     * The unique Id for the key value store.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * A comment for the key value store.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * The import source for the key value store.
     */
    readonly importSource: pulumi.Output<outputs.cloudfront.KeyValueStoreImportSource | undefined>;
    /**
     * The name of the key value store.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The current status of the key value store. For more information, see [Key value store statuses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/kvs-with-functions-create.html#key-value-store-status) in the *.*
     */
    readonly status: pulumi.Output<string>;
    /**
     * Create a KeyValueStore resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KeyValueStoreArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a KeyValueStore resource.
 */
export interface KeyValueStoreArgs {
    /**
     * A comment for the key value store.
     */
    comment?: pulumi.Input<string>;
    /**
     * The import source for the key value store.
     */
    importSource?: pulumi.Input<inputs.cloudfront.KeyValueStoreImportSourceArgs>;
    /**
     * The name of the key value store.
     */
    name?: pulumi.Input<string>;
}
