import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
 */
export declare class MonitoringSubscription extends pulumi.CustomResource {
    /**
     * Get an existing MonitoringSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MonitoringSubscription;
    /**
     * Returns true if the given object is an instance of MonitoringSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MonitoringSubscription;
    /**
     * The ID of the distribution that you are enabling metrics for.
     */
    readonly distributionId: pulumi.Output<string>;
    /**
     * A subscription configuration for additional CloudWatch metrics.
     */
    readonly monitoringSubscription: pulumi.Output<outputs.cloudfront.MonitoringSubscription>;
    /**
     * Create a MonitoringSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoringSubscriptionArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a MonitoringSubscription resource.
 */
export interface MonitoringSubscriptionArgs {
    /**
     * The ID of the distribution that you are enabling metrics for.
     */
    distributionId: pulumi.Input<string>;
    /**
     * A subscription configuration for additional CloudWatch metrics.
     */
    monitoringSubscription: pulumi.Input<inputs.cloudfront.MonitoringSubscriptionArgs>;
}
