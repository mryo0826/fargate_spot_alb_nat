import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
 */
export declare function getMonitoringSubscription(args: GetMonitoringSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetMonitoringSubscriptionResult>;
export interface GetMonitoringSubscriptionArgs {
    /**
     * The ID of the distribution that you are enabling metrics for.
     */
    distributionId: string;
}
export interface GetMonitoringSubscriptionResult {
    /**
     * A subscription configuration for additional CloudWatch metrics.
     */
    readonly monitoringSubscription?: outputs.cloudfront.MonitoringSubscription;
}
/**
 * A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
 */
export declare function getMonitoringSubscriptionOutput(args: GetMonitoringSubscriptionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMonitoringSubscriptionResult>;
export interface GetMonitoringSubscriptionOutputArgs {
    /**
     * The ID of the distribution that you are enabling metrics for.
     */
    distributionId: pulumi.Input<string>;
}
