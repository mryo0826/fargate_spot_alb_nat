import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Creates an AWS Firewall Manager resource set.
 */
export declare class ResourceSet extends pulumi.CustomResource {
    /**
     * Get an existing ResourceSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceSet;
    /**
     * Returns true if the given object is an instance of ResourceSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ResourceSet;
    /**
     * A unique identifier for the resource set. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * A description of the resource set.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The descriptive name of the resource set. You can't change the name of a resource set after you create it.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Determines the resources that can be associated to the resource set. Depending on your setting for max results and the number of resource sets, a single call might not return the full list.
     */
    readonly resourceTypeList: pulumi.Output<string[]>;
    readonly resources: pulumi.Output<string[] | undefined>;
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a ResourceSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceSetArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a ResourceSet resource.
 */
export interface ResourceSetArgs {
    /**
     * A description of the resource set.
     */
    description?: pulumi.Input<string>;
    /**
     * The descriptive name of the resource set. You can't change the name of a resource set after you create it.
     */
    name?: pulumi.Input<string>;
    /**
     * Determines the resources that can be associated to the resource set. Depending on your setting for max results and the number of resource sets, a single call might not return the full list.
     */
    resourceTypeList: pulumi.Input<pulumi.Input<string>[]>;
    resources?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
