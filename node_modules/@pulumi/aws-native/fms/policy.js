"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Policy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Creates an AWS Firewall Manager policy.
 */
class Policy extends pulumi.CustomResource {
    /**
     * Get an existing Policy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Policy(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Policy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Policy.__pulumiType;
    }
    /**
     * Create a Policy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.excludeResourceTags === undefined) && !opts.urn) {
                throw new Error("Missing required property 'excludeResourceTags'");
            }
            if ((!args || args.remediationEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remediationEnabled'");
            }
            if ((!args || args.securityServicePolicyData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityServicePolicyData'");
            }
            resourceInputs["deleteAllPolicyResources"] = args ? args.deleteAllPolicyResources : undefined;
            resourceInputs["excludeMap"] = args ? args.excludeMap : undefined;
            resourceInputs["excludeResourceTags"] = args ? args.excludeResourceTags : undefined;
            resourceInputs["includeMap"] = args ? args.includeMap : undefined;
            resourceInputs["policyDescription"] = args ? args.policyDescription : undefined;
            resourceInputs["policyName"] = args ? args.policyName : undefined;
            resourceInputs["remediationEnabled"] = args ? args.remediationEnabled : undefined;
            resourceInputs["resourceSetIds"] = args ? args.resourceSetIds : undefined;
            resourceInputs["resourceTags"] = args ? args.resourceTags : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["resourceTypeList"] = args ? args.resourceTypeList : undefined;
            resourceInputs["resourcesCleanUp"] = args ? args.resourcesCleanUp : undefined;
            resourceInputs["securityServicePolicyData"] = args ? args.securityServicePolicyData : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
        }
        else {
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["awsId"] = undefined /*out*/;
            resourceInputs["deleteAllPolicyResources"] = undefined /*out*/;
            resourceInputs["excludeMap"] = undefined /*out*/;
            resourceInputs["excludeResourceTags"] = undefined /*out*/;
            resourceInputs["includeMap"] = undefined /*out*/;
            resourceInputs["policyDescription"] = undefined /*out*/;
            resourceInputs["policyName"] = undefined /*out*/;
            resourceInputs["remediationEnabled"] = undefined /*out*/;
            resourceInputs["resourceSetIds"] = undefined /*out*/;
            resourceInputs["resourceTags"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["resourceTypeList"] = undefined /*out*/;
            resourceInputs["resourcesCleanUp"] = undefined /*out*/;
            resourceInputs["securityServicePolicyData"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Policy.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Policy = Policy;
/** @internal */
Policy.__pulumiType = 'aws-native:fms:Policy';
//# sourceMappingURL=policy.js.map