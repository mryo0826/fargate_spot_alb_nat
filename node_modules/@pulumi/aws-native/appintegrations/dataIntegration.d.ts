import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::AppIntegrations::DataIntegration
 */
export declare class DataIntegration extends pulumi.CustomResource {
    /**
     * Get an existing DataIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DataIntegration;
    /**
     * Returns true if the given object is an instance of DataIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DataIntegration;
    /**
     * The unique identifer of the data integration.
     */
    readonly awsId: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the data integration.
     */
    readonly dataIntegrationArn: pulumi.Output<string>;
    /**
     * The data integration description.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The configuration for what files should be pulled from the source.
     */
    readonly fileConfiguration: pulumi.Output<outputs.appintegrations.DataIntegrationFileConfiguration | undefined>;
    /**
     * The KMS key of the data integration.
     */
    readonly kmsKey: pulumi.Output<string>;
    /**
     * The name of the data integration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The configuration for what data should be pulled from the source.
     */
    readonly objectConfiguration: pulumi.Output<{
        [key: string]: any;
    } | undefined>;
    /**
     * The name of the data and how often it should be pulled from the source.
     */
    readonly scheduleConfig: pulumi.Output<outputs.appintegrations.DataIntegrationScheduleConfig | undefined>;
    /**
     * The URI of the data source.
     */
    readonly sourceUri: pulumi.Output<string>;
    /**
     * The tags (keys and values) associated with the data integration.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a DataIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataIntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a DataIntegration resource.
 */
export interface DataIntegrationArgs {
    /**
     * The data integration description.
     */
    description?: pulumi.Input<string>;
    /**
     * The configuration for what files should be pulled from the source.
     */
    fileConfiguration?: pulumi.Input<inputs.appintegrations.DataIntegrationFileConfigurationArgs>;
    /**
     * The KMS key of the data integration.
     */
    kmsKey: pulumi.Input<string>;
    /**
     * The name of the data integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The configuration for what data should be pulled from the source.
     */
    objectConfiguration?: pulumi.Input<{
        [key: string]: any;
    }>;
    /**
     * The name of the data and how often it should be pulled from the source.
     */
    scheduleConfig?: pulumi.Input<inputs.appintegrations.DataIntegrationScheduleConfigArgs>;
    /**
     * The URI of the data source.
     */
    sourceUri: pulumi.Input<string>;
    /**
     * The tags (keys and values) associated with the data integration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
