"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Collaboration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Represents a collaboration between AWS accounts that allows for secure data collaboration
 */
class Collaboration extends pulumi.CustomResource {
    /**
     * Get an existing Collaboration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, opts) {
        return new Collaboration(name, undefined, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Collaboration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Collaboration.__pulumiType;
    }
    /**
     * Create a Collaboration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name, args, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.creatorDisplayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'creatorDisplayName'");
            }
            if ((!args || args.creatorMemberAbilities === undefined) && !opts.urn) {
                throw new Error("Missing required property 'creatorMemberAbilities'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.members === undefined) && !opts.urn) {
                throw new Error("Missing required property 'members'");
            }
            if ((!args || args.queryLogStatus === undefined) && !opts.urn) {
                throw new Error("Missing required property 'queryLogStatus'");
            }
            resourceInputs["analyticsEngine"] = args ? args.analyticsEngine : undefined;
            resourceInputs["creatorDisplayName"] = args ? args.creatorDisplayName : undefined;
            resourceInputs["creatorMemberAbilities"] = args ? args.creatorMemberAbilities : undefined;
            resourceInputs["creatorPaymentConfiguration"] = args ? args.creatorPaymentConfiguration : undefined;
            resourceInputs["dataEncryptionMetadata"] = args ? args.dataEncryptionMetadata : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["members"] = args ? args.members : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["queryLogStatus"] = args ? args.queryLogStatus : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collaborationIdentifier"] = undefined /*out*/;
        }
        else {
            resourceInputs["analyticsEngine"] = undefined /*out*/;
            resourceInputs["arn"] = undefined /*out*/;
            resourceInputs["collaborationIdentifier"] = undefined /*out*/;
            resourceInputs["creatorDisplayName"] = undefined /*out*/;
            resourceInputs["creatorMemberAbilities"] = undefined /*out*/;
            resourceInputs["creatorPaymentConfiguration"] = undefined /*out*/;
            resourceInputs["dataEncryptionMetadata"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["members"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["queryLogStatus"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const replaceOnChanges = { replaceOnChanges: ["analyticsEngine", "creatorDisplayName", "creatorMemberAbilities[*]", "creatorPaymentConfiguration", "dataEncryptionMetadata", "members[*]", "queryLogStatus"] };
        opts = pulumi.mergeOptions(opts, replaceOnChanges);
        super(Collaboration.__pulumiType, name, resourceInputs, opts);
    }
}
exports.Collaboration = Collaboration;
/** @internal */
Collaboration.__pulumiType = 'aws-native:cleanrooms:Collaboration';
//# sourceMappingURL=collaboration.js.map