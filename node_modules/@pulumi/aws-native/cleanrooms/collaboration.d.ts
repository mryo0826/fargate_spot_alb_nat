import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Represents a collaboration between AWS accounts that allows for secure data collaboration
 */
export declare class Collaboration extends pulumi.CustomResource {
    /**
     * Get an existing Collaboration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Collaboration;
    /**
     * Returns true if the given object is an instance of Collaboration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Collaboration;
    /**
     * The analytics engine for the collaboration.
     */
    readonly analyticsEngine: pulumi.Output<enums.cleanrooms.CollaborationAnalyticsEngine | undefined>;
    /**
     * Returns the Amazon Resource Name (ARN) of the specified collaboration.
     *
     * Example: `arn:aws:cleanrooms:us-east-1:111122223333:collaboration/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111`
     */
    readonly arn: pulumi.Output<string>;
    /**
     * Returns the unique identifier of the specified collaboration.
     *
     * Example: `a1b2c3d4-5678-90ab-cdef-EXAMPLE11111`
     */
    readonly collaborationIdentifier: pulumi.Output<string>;
    /**
     * A display name of the collaboration creator.
     */
    readonly creatorDisplayName: pulumi.Output<string>;
    /**
     * The abilities granted to the collaboration creator.
     *
     * *Allowed values* `CAN_QUERY` | `CAN_RECEIVE_RESULTS`
     */
    readonly creatorMemberAbilities: pulumi.Output<enums.cleanrooms.CollaborationMemberAbility[]>;
    /**
     * An object representing the collaboration member's payment responsibilities set by the collaboration creator.
     */
    readonly creatorPaymentConfiguration: pulumi.Output<outputs.cleanrooms.CollaborationPaymentConfiguration | undefined>;
    /**
     * The settings for client-side encryption for cryptographic computing.
     */
    readonly dataEncryptionMetadata: pulumi.Output<outputs.cleanrooms.CollaborationDataEncryptionMetadata | undefined>;
    /**
     * A description of the collaboration provided by the collaboration owner.
     */
    readonly description: pulumi.Output<string>;
    /**
     * A list of initial members, not including the creator. This list is immutable.
     */
    readonly members: pulumi.Output<outputs.cleanrooms.CollaborationMemberSpecification[]>;
    /**
     * A human-readable identifier provided by the collaboration owner. Display names are not unique.
     */
    readonly name: pulumi.Output<string>;
    /**
     * An indicator as to whether query logging has been enabled or disabled for the collaboration.
     */
    readonly queryLogStatus: pulumi.Output<enums.cleanrooms.CollaborationQueryLogStatus>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
     */
    readonly tags: pulumi.Output<outputs.Tag[] | undefined>;
    /**
     * Create a Collaboration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CollaborationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Collaboration resource.
 */
export interface CollaborationArgs {
    /**
     * The analytics engine for the collaboration.
     */
    analyticsEngine?: pulumi.Input<enums.cleanrooms.CollaborationAnalyticsEngine>;
    /**
     * A display name of the collaboration creator.
     */
    creatorDisplayName: pulumi.Input<string>;
    /**
     * The abilities granted to the collaboration creator.
     *
     * *Allowed values* `CAN_QUERY` | `CAN_RECEIVE_RESULTS`
     */
    creatorMemberAbilities: pulumi.Input<pulumi.Input<enums.cleanrooms.CollaborationMemberAbility>[]>;
    /**
     * An object representing the collaboration member's payment responsibilities set by the collaboration creator.
     */
    creatorPaymentConfiguration?: pulumi.Input<inputs.cleanrooms.CollaborationPaymentConfigurationArgs>;
    /**
     * The settings for client-side encryption for cryptographic computing.
     */
    dataEncryptionMetadata?: pulumi.Input<inputs.cleanrooms.CollaborationDataEncryptionMetadataArgs>;
    /**
     * A description of the collaboration provided by the collaboration owner.
     */
    description: pulumi.Input<string>;
    /**
     * A list of initial members, not including the creator. This list is immutable.
     */
    members: pulumi.Input<pulumi.Input<inputs.cleanrooms.CollaborationMemberSpecificationArgs>[]>;
    /**
     * A human-readable identifier provided by the collaboration owner. Display names are not unique.
     */
    name?: pulumi.Input<string>;
    /**
     * An indicator as to whether query logging has been enabled or disabled for the collaboration.
     */
    queryLogStatus: pulumi.Input<enums.cleanrooms.CollaborationQueryLogStatus>;
    /**
     * An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.TagArgs>[]>;
}
