import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource schema for AWS::MediaConnect::Flow
 */
export declare class Flow extends pulumi.CustomResource {
    /**
     * Get an existing Flow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Flow;
    /**
     * Returns true if the given object is an instance of Flow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Flow;
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
     */
    readonly availabilityZone: pulumi.Output<string | undefined>;
    /**
     * The IP address from which video will be sent to output destinations.
     */
    readonly egressIp: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    readonly flowArn: pulumi.Output<string>;
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
     */
    readonly flowAvailabilityZone: pulumi.Output<string>;
    /**
     * The maintenance settings you want to use for the flow.
     */
    readonly maintenance: pulumi.Output<outputs.mediaconnect.FlowMaintenance | undefined>;
    /**
     * The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
     */
    readonly mediaStreams: pulumi.Output<outputs.mediaconnect.FlowMediaStream[] | undefined>;
    /**
     * The name of the flow.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The source of the flow.
     */
    readonly source: pulumi.Output<outputs.mediaconnect.FlowSource>;
    /**
     * The source failover config of the flow.
     */
    readonly sourceFailoverConfig: pulumi.Output<outputs.mediaconnect.FlowFailoverConfig | undefined>;
    /**
     * The source monitoring config of the flow.
     */
    readonly sourceMonitoringConfig: pulumi.Output<outputs.mediaconnect.FlowSourceMonitoringConfig | undefined>;
    /**
     * The VPC interfaces that you added to this flow.
     */
    readonly vpcInterfaces: pulumi.Output<outputs.mediaconnect.FlowVpcInterface[] | undefined>;
    /**
     * Create a Flow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlowArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Flow resource.
 */
export interface FlowArgs {
    /**
     * The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
     */
    availabilityZone?: pulumi.Input<string>;
    /**
     * The maintenance settings you want to use for the flow.
     */
    maintenance?: pulumi.Input<inputs.mediaconnect.FlowMaintenanceArgs>;
    /**
     * The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
     */
    mediaStreams?: pulumi.Input<pulumi.Input<inputs.mediaconnect.FlowMediaStreamArgs>[]>;
    /**
     * The name of the flow.
     */
    name?: pulumi.Input<string>;
    /**
     * The source of the flow.
     */
    source: pulumi.Input<inputs.mediaconnect.FlowSourceArgs>;
    /**
     * The source failover config of the flow.
     */
    sourceFailoverConfig?: pulumi.Input<inputs.mediaconnect.FlowFailoverConfigArgs>;
    /**
     * The source monitoring config of the flow.
     */
    sourceMonitoringConfig?: pulumi.Input<inputs.mediaconnect.FlowSourceMonitoringConfigArgs>;
    /**
     * The VPC interfaces that you added to this flow.
     */
    vpcInterfaces?: pulumi.Input<pulumi.Input<inputs.mediaconnect.FlowVpcInterfaceArgs>[]>;
}
