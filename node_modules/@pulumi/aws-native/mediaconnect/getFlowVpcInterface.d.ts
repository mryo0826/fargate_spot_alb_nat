import * as pulumi from "@pulumi/pulumi";
/**
 * Resource schema for AWS::MediaConnect::FlowVpcInterface
 */
export declare function getFlowVpcInterface(args: GetFlowVpcInterfaceArgs, opts?: pulumi.InvokeOptions): Promise<GetFlowVpcInterfaceResult>;
export interface GetFlowVpcInterfaceArgs {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn: string;
    /**
     * Immutable and has to be a unique against other VpcInterfaces in this Flow.
     */
    name: string;
}
export interface GetFlowVpcInterfaceResult {
    /**
     * IDs of the network interfaces created in customer's account by MediaConnect.
     */
    readonly networkInterfaceIds?: string[];
    /**
     * Role Arn MediaConnect can assume to create ENIs in customer's account.
     */
    readonly roleArn?: string;
    /**
     * Security Group IDs to be used on ENI.
     */
    readonly securityGroupIds?: string[];
    /**
     * Subnet must be in the AZ of the Flow
     */
    readonly subnetId?: string;
}
/**
 * Resource schema for AWS::MediaConnect::FlowVpcInterface
 */
export declare function getFlowVpcInterfaceOutput(args: GetFlowVpcInterfaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFlowVpcInterfaceResult>;
export interface GetFlowVpcInterfaceOutputArgs {
    /**
     * The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
     */
    flowArn: pulumi.Input<string>;
    /**
     * Immutable and has to be a unique against other VpcInterfaces in this Flow.
     */
    name: pulumi.Input<string>;
}
