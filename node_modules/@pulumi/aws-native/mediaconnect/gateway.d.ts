import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
/**
 * Resource schema for AWS::MediaConnect::Gateway
 */
export declare class Gateway extends pulumi.CustomResource {
    /**
     * Get an existing Gateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Gateway;
    /**
     * Returns true if the given object is an instance of Gateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Gateway;
    /**
     * The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     */
    readonly egressCidrBlocks: pulumi.Output<string[]>;
    /**
     * The Amazon Resource Name (ARN) of the gateway.
     */
    readonly gatewayArn: pulumi.Output<string>;
    /**
     * The current status of the gateway.
     */
    readonly gatewayState: pulumi.Output<enums.mediaconnect.GatewayState>;
    /**
     * The name of the gateway. This name can not be modified after the gateway is created.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The list of networks in the gateway.
     */
    readonly networks: pulumi.Output<outputs.mediaconnect.GatewayNetwork[]>;
    /**
     * Create a Gateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a Gateway resource.
 */
export interface GatewayArgs {
    /**
     * The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
     */
    egressCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the gateway. This name can not be modified after the gateway is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of networks in the gateway.
     */
    networks: pulumi.Input<pulumi.Input<inputs.mediaconnect.GatewayNetworkArgs>[]>;
}
