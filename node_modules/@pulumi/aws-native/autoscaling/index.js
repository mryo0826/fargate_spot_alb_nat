"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WarmPool = exports.ScheduledAction = exports.ScalingPolicy = exports.LifecycleHook = exports.LaunchConfiguration = exports.getWarmPoolOutput = exports.getWarmPool = exports.getScheduledActionOutput = exports.getScheduledAction = exports.getScalingPolicyOutput = exports.getScalingPolicy = exports.getLifecycleHookOutput = exports.getLifecycleHook = exports.getAutoScalingGroupOutput = exports.getAutoScalingGroup = exports.AutoScalingGroup = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.AutoScalingGroup = null;
utilities.lazyLoad(exports, ["AutoScalingGroup"], () => require("./autoScalingGroup"));
exports.getAutoScalingGroup = null;
exports.getAutoScalingGroupOutput = null;
utilities.lazyLoad(exports, ["getAutoScalingGroup", "getAutoScalingGroupOutput"], () => require("./getAutoScalingGroup"));
exports.getLifecycleHook = null;
exports.getLifecycleHookOutput = null;
utilities.lazyLoad(exports, ["getLifecycleHook", "getLifecycleHookOutput"], () => require("./getLifecycleHook"));
exports.getScalingPolicy = null;
exports.getScalingPolicyOutput = null;
utilities.lazyLoad(exports, ["getScalingPolicy", "getScalingPolicyOutput"], () => require("./getScalingPolicy"));
exports.getScheduledAction = null;
exports.getScheduledActionOutput = null;
utilities.lazyLoad(exports, ["getScheduledAction", "getScheduledActionOutput"], () => require("./getScheduledAction"));
exports.getWarmPool = null;
exports.getWarmPoolOutput = null;
utilities.lazyLoad(exports, ["getWarmPool", "getWarmPoolOutput"], () => require("./getWarmPool"));
exports.LaunchConfiguration = null;
utilities.lazyLoad(exports, ["LaunchConfiguration"], () => require("./launchConfiguration"));
exports.LifecycleHook = null;
utilities.lazyLoad(exports, ["LifecycleHook"], () => require("./lifecycleHook"));
exports.ScalingPolicy = null;
utilities.lazyLoad(exports, ["ScalingPolicy"], () => require("./scalingPolicy"));
exports.ScheduledAction = null;
utilities.lazyLoad(exports, ["ScheduledAction"], () => require("./scheduledAction"));
exports.WarmPool = null;
utilities.lazyLoad(exports, ["WarmPool"], () => require("./warmPool"));
// Export enums:
__exportStar(require("../types/enums/autoscaling"), exports);
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "aws-native:autoscaling:AutoScalingGroup":
                return new exports.AutoScalingGroup(name, undefined, { urn });
            case "aws-native:autoscaling:LaunchConfiguration":
                return new exports.LaunchConfiguration(name, undefined, { urn });
            case "aws-native:autoscaling:LifecycleHook":
                return new exports.LifecycleHook(name, undefined, { urn });
            case "aws-native:autoscaling:ScalingPolicy":
                return new exports.ScalingPolicy(name, undefined, { urn });
            case "aws-native:autoscaling:ScheduledAction":
                return new exports.ScheduledAction(name, undefined, { urn });
            case "aws-native:autoscaling:WarmPool":
                return new exports.WarmPool(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("aws-native", "autoscaling", _module);
//# sourceMappingURL=index.js.map