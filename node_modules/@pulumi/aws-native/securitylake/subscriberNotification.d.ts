import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Resource Type definition for AWS::SecurityLake::SubscriberNotification
 */
export declare class SubscriberNotification extends pulumi.CustomResource {
    /**
     * Get an existing SubscriberNotification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubscriberNotification;
    /**
     * Returns true if the given object is an instance of SubscriberNotification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SubscriberNotification;
    /**
     * Specify the configurations you want to use for subscriber notification. The subscriber is notified when new data is written to the data lake for sources that the subscriber consumes in Security Lake .
     */
    readonly notificationConfiguration: pulumi.Output<outputs.securitylake.SubscriberNotificationNotificationConfiguration>;
    /**
     * The ARN for the subscriber
     */
    readonly subscriberArn: pulumi.Output<string>;
    /**
     * The endpoint the subscriber should listen to for notifications
     */
    readonly subscriberEndpoint: pulumi.Output<string>;
    /**
     * Create a SubscriberNotification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubscriberNotificationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a SubscriberNotification resource.
 */
export interface SubscriberNotificationArgs {
    /**
     * Specify the configurations you want to use for subscriber notification. The subscriber is notified when new data is written to the data lake for sources that the subscriber consumes in Security Lake .
     */
    notificationConfiguration: pulumi.Input<inputs.securitylake.SubscriberNotificationNotificationConfigurationArgs>;
    /**
     * The ARN for the subscriber
     */
    subscriberArn: pulumi.Input<string>;
}
