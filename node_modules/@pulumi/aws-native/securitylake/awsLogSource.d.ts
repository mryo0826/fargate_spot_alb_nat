import * as pulumi from "@pulumi/pulumi";
/**
 * Resource Type definition for AWS::SecurityLake::AwsLogSource
 */
export declare class AwsLogSource extends pulumi.CustomResource {
    /**
     * Get an existing AwsLogSource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AwsLogSource;
    /**
     * Returns true if the given object is an instance of AwsLogSource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AwsLogSource;
    /**
     * AWS account where you want to collect logs from.
     */
    readonly accounts: pulumi.Output<string[] | undefined>;
    /**
     * The ARN for the data lake.
     */
    readonly dataLakeArn: pulumi.Output<string>;
    /**
     * The name for a AWS source. This must be a Regionally unique value.
     */
    readonly sourceName: pulumi.Output<string>;
    /**
     * The version for a AWS source. This must be a Regionally unique value.
     */
    readonly sourceVersion: pulumi.Output<string>;
    /**
     * Create a AwsLogSource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsLogSourceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * The set of arguments for constructing a AwsLogSource resource.
 */
export interface AwsLogSourceArgs {
    /**
     * AWS account where you want to collect logs from.
     */
    accounts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ARN for the data lake.
     */
    dataLakeArn: pulumi.Input<string>;
    /**
     * The name for a AWS source. This must be a Regionally unique value.
     */
    sourceName?: pulumi.Input<string>;
    /**
     * The version for a AWS source. This must be a Regionally unique value.
     */
    sourceVersion: pulumi.Input<string>;
}
